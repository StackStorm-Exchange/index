{
    "description": null,
    "enabled": true,
    "entry_point": "run.py",
    "name": "lex-models_put_intent",
    "pack": "aws",
    "parameters": {
        "action": {
            "default": "put_intent",
            "immutable": true,
            "type": "string"
        },
        "checksum": {
            "description": "Identifies a specific revision of the $LATEST version. When you create a new intent, leave the checksum field blank. If you specify a checksum you get a BadRequestException exception. When you want to update a intent, set the checksum field to the checksum of the most recent revision of the $LATEST version. If you don't specify the  checksum field, or if the checksum does not match the $LATEST version, you get a PreconditionFailedException exception.",
            "type": "string"
        },
        "cls": {
            "default": "lex-models",
            "type": "string"
        },
        "conclusionStatement": {
            "description": " The statement that you want Amazon Lex to convey to the user after the intent is successfully fulfilled by the Lambda function.  This element is relevant only if you provide a Lambda function in the fulfillmentActivity. If you return the intent to the client application, you can't specify this element.  The followUpPrompt and conclusionStatement are mutually exclusive. You can specify only one. ",
            "type": "object"
        },
        "confirmationPrompt": {
            "description": "Prompts the user to confirm the intent. This question should have a yes or no answer. Amazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.   You you must provide both the rejectionStatement and the confirmationPrompt, or neither. ",
            "type": "object"
        },
        "description": {
            "description": "A description of the intent.",
            "type": "string"
        },
        "dialogCodeHook": {
            "description": " Specifies a Lambda function to invoke for each user input. You can invoke this Lambda function to personalize user interaction.  For example, suppose your bot determines that the user is John. Your Lambda function might retrieve John's information from a backend database and prepopulate some of the values. For example, if you find that John is gluten intolerant, you might set the corresponding intent slot, GlutenIntolerant, to true. You might find John's phone number and set the corresponding session attribute. ",
            "type": "object"
        },
        "followUpPrompt": {
            "description": "A user prompt for additional activity after an intent is fulfilled. For example, after the OrderPizza intent is fulfilled (your Lambda function placed an order with a pizzeria), you might prompt the user to find if they want to order a drink (assuming that you have defined an OrderDrink intent in your bot).  The followUpPrompt and conclusionStatement are mutually exclusive. You can specify only one. For example, your bot may not solicit both the following:   Follow up prompt - '$session.FirstName, your pizza order has been placed. Would you like to order a drink or a dessert?'   Conclusion statement - '$session.FirstName, your pizza order has been placed.'  ",
            "type": "object"
        },
        "fulfillmentActivity": {
            "description": " Describes how the intent is fulfilled. For example, after a user provides all of the information for a pizza order, fulfillmentActivity defines how the bot places an order with a local pizza store.   You might configure Amazon Lex to return all of the intent information to the client application, or direct it to invoke a Lambda function that can process the intent (for example, place an order with a pizzeria). ",
            "type": "object"
        },
        "headers": {
            "type": "string"
        },
        "module_path": {
            "default": "boto3",
            "immutable": true,
            "type": "string"
        },
        "name": {
            "description": "The name of the intent. The name is not case sensitive.  The name can't match a built-in intent name, or a built-in intent name with 'AMAZON.' removed. For example, because there is a built-in intent called AMAZON.HelpIntent, you can't create a custom intent called HelpIntent. For a list of built-in intents, see Standard Built-in Intents in the Alexa Skills Kit.",
            "required": true,
            "type": "string"
        },
        "parentIntentSignature": {
            "description": "A unique identifier for the built-in intent to base this intent on. To find the signature for an intent, see Standard Built-in Intents in the Alexa Skills Kit.",
            "type": "string"
        },
        "rejectionStatement": {
            "description": "When the user answers 'no' to the question defined in confirmationPrompt, Amazon Lex responds with this statement to acknowledge that the intent was canceled.   You must provide both the rejectionStatement and the confirmationPrompt, or neither. ",
            "type": "object"
        },
        "sampleUtterances": {
            "description": "An array of utterances (strings) that a user might say to signal the intent. For example, 'I want {PizzaSize} pizza', 'Order {Quantity} {PizzaSize} pizzas'.  In each utterance, a slot name is enclosed in curly braces. ",
            "type": "array"
        },
        "slots": {
            "description": "An array of intent slots. At runtime, Amazon Lex elicits required slot values from the user using prompts defined in the slots. For more information, see &lt;xref linkend='how-it-works'/&gt;. ",
            "type": "array"
        }
    },
    "runner_type": "python-script"
}
