{
    "description": null,
    "enabled": true,
    "entry_point": "run.py",
    "name": "kms_create_key",
    "pack": "aws",
    "parameters": {
        "BypassPolicyLockoutSafetyCheck": {
            "description": "A flag to indicate whether to bypass the key policy lockout safety check.  Setting this value to true increases the likelihood that the CMK becomes unmanageable. Do not set this value to true indiscriminately. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.  Use this parameter only when you include a policy in the request and you intend to prevent the principal making the request from making a subsequent PutKeyPolicy request on the CMK. The default value is false.",
            "type": "boolean"
        },
        "Description": {
            "description": "A description of the CMK. Use a description that helps you decide whether the CMK is appropriate for a task.",
            "type": "string"
        },
        "KeyUsage": {
            "description": "The intended use of the CMK. You can use CMKs only for symmetric encryption and decryption.",
            "type": "string"
        },
        "Origin": {
            "description": "The source of the CMK's key material. The default is AWS_KMS, which means AWS KMS creates the key material. When this parameter is set to EXTERNAL, the request creates a CMK without key material so that you can import key material from your existing key management infrastructure. For more information about importing key material into AWS KMS, see Importing Key Material in the AWS Key Management Service Developer Guide. The CMK's Origin is immutable and is set when the CMK is created.",
            "type": "string"
        },
        "Policy": {
            "description": "The key policy to attach to the CMK. If you specify a policy and do not set BypassPolicyLockoutSafetyCheck to true, the policy must meet the following criteria:   It must allow the principal making the CreateKey request to make a subsequent PutKeyPolicy request on the CMK. This reduces the likelihood that the CMK becomes unmanageable. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide.   The principal(s) specified in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal (for example, an IAM user or role), you might need to enforce a delay before specifying the new principal in a key policy because the new principal might not immediately be visible to AWS KMS. For more information, see Changes that I make are not always immediately visible in the IAM User Guide.   If you do not specify a policy, AWS KMS attaches a default key policy to the CMK. For more information, see Default Key Policy in the AWS Key Management Service Developer Guide. The policy size limit is 32 KiB (32768 bytes).",
            "type": "string"
        },
        "account_id": {
            "type": "string"
        },
        "action": {
            "default": "create_key",
            "immutable": true,
            "type": "string"
        },
        "cls": {
            "default": "kms",
            "type": "string"
        },
        "headers": {
            "type": "string"
        },
        "module_path": {
            "default": "boto3",
            "immutable": true,
            "type": "string"
        },
        "region": {
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
