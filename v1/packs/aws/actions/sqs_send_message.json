{
    "description": null,
    "enabled": true,
    "entry_point": "run.py",
    "name": "sqs_send_message",
    "pack": "aws",
    "parameters": {
        "DelaySeconds": {
            "description": " The number of seconds to delay a specific message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive DelaySeconds value become available for processing after the delay period is finished. If you don't specify a value, the default value for the queue applies.   When you set FifoQueue, you can't set DelaySeconds per message. You can set this parameter only on a queue level. ",
            "type": "integer"
        },
        "MessageAttributes": {
            "description": "Each message attribute consists of a Name, Type, and Value. For more information, see Message Attribute Items and Validation in the Amazon SQS Developer Guide.",
            "type": "object"
        },
        "MessageBody": {
            "description": "The message to send. The maximum string size is 256 KB.  The following list shows the characters (in Unicode) that are allowed in your message, according to the W3C XML specification:    #x9     #xA     #xD     #x20 to #xD7FF     #xE000 to #xFFFD     #x10000 to #x10FFFF    For more information, see RFC1321. If you send any characters that aren't included in this list, your request is rejected. ",
            "required": true,
            "type": "string"
        },
        "MessageDeduplicationId": {
            "description": "This parameter applies only to FIFO (first-in-first-out) queues. The token used for deduplication of sent messages. If a message with a particular MessageDeduplicationId is sent successfully, any messages sent with the same MessageDeduplicationId are accepted successfully but aren't delivered during the 5-minute deduplication interval. For more information, see  Exactly-Once Processing in the Amazon SQS Developer Guide.   Every message must have a unique MessageDeduplicationId,   You may provide a MessageDeduplicationId explicitly.   If you aren't able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).    If you don't provide a MessageDeduplicationId and the queue doesn't have ContentBasedDeduplication set, the action fails with an error.   If the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one.     When ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.   You can also use ContentBasedDeduplication for messages with identical content to be treated as duplicates.   If you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId, the two messages are treated as duplicates and only one copy of the message is delivered.     The MessageDeduplicationId is available to the recipient of the message (this can be useful for troubleshooting delivery issues). If a message is sent successfully but the acknowledgement is lost and the message is resent with the same MessageDeduplicationId after the deduplication interval, Amazon SQS can't detect duplicate messages.  The length of MessageDeduplicationId is 128 characters. MessageDeduplicationId can contain alphanumeric characters (a-z, A-Z, 0-9) and punctuation (!'#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~). For best practices of using MessageDeduplicationId, see Using the MessageDeduplicationId Property in the Amazon Simple Queue Service Developer Guide.",
            "type": "string"
        },
        "MessageGroupId": {
            "description": "This parameter applies only to FIFO (first-in-first-out) queues. The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner (however, messages in different message groups might be processed out of order). To interleave multiple ordered streams within a single queue, use MessageGroupId values (for example, session data for multiple users). In this scenario, multiple readers can process the queue, but the session data of each user is processed in a FIFO fashion.   You must associate a non-empty MessageGroupId with a message. If you don't provide a MessageGroupId, the action fails.    ReceiveMessage might return messages with multiple MessageGroupId values. For each MessageGroupId, the messages are sorted by time sent. The caller can't specify a MessageGroupId.   The length of MessageGroupId is 128 characters. Valid values are alphanumeric characters and punctuation (!'#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~). For best practices of using MessageGroupId, see Using the MessageGroupId Property in the Amazon Simple Queue Service Developer Guide.",
            "type": "string"
        },
        "QueueUrl": {
            "description": "The URL of the Amazon SQS queue to which a message is sent. Queue URLs are case-sensitive.",
            "required": true,
            "type": "string"
        },
        "account_id": {
            "type": "string"
        },
        "action": {
            "default": "send_message",
            "immutable": true,
            "type": "string"
        },
        "cls": {
            "default": "sqs",
            "type": "string"
        },
        "headers": {
            "type": "string"
        },
        "module_path": {
            "default": "boto3",
            "immutable": true,
            "type": "string"
        },
        "region": {
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
