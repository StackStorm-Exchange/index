{
    "description": "Apply Puppet manifest code.",
    "enabled": true,
    "entry_point": "lib/bolt.py",
    "name": "apply",
    "pack": "bolt",
    "parameters": {
        "boltdir": {
            "description": "Specify what Boltdir to load config from (default: autodiscovered from current working dir)",
            "type": "string"
        },
        "cmd": {
            "description": "Path to the bolt executable",
            "type": "string"
        },
        "color": {
            "description": "Whether to show output in color",
            "type": "boolean"
        },
        "compile_concurrency": {
            "description": "Maximum number of simultaneous manifest block compiles (default: number of cores)",
            "type": "integer"
        },
        "concurrency": {
            "description": "Maximum number of simultaneous connections (default: 100)",
            "type": "integer"
        },
        "configfile": {
            "description": "Specify where to load config from (default: ~/.puppetlabs/bolt/bolt.yaml)",
            "type": "string"
        },
        "connect_timeout": {
            "description": "Connection timeout (defaults vary)",
            "type": "integer"
        },
        "credentials": {
            "description": "Name of the credentials object to use from the config",
            "type": "string"
        },
        "cwd": {
            "description": "Current working directory where bolt will be executed",
            "type": "string"
        },
        "debug_": {
            "description": "Display debug logging",
            "type": "boolean"
        },
        "description": {
            "description": "Description to use for the job",
            "type": "string"
        },
        "env": {
            "description": "Environment variables to override when executing bolt",
            "type": "object"
        },
        "format": {
            "description": "Output format to use: human or json",
            "type": "string"
        },
        "host_key_check": {
            "description": "Check host keys with SSH",
            "type": "boolean"
        },
        "inventoryfile": {
            "description": "Specify where to load inventory from (default: ~/.puppetlabs/bolt/inventory.yaml)",
            "type": "string"
        },
        "manifest": {
            "description": "Path to a manifest file (.pp) to upload and apply on a set of nodes",
            "required": true,
            "type": "string"
        },
        "modulepath": {
            "description": "List of directories containing modules, separated by ':'",
            "type": "string"
        },
        "nodes": {
            "description": "Identifies the nodes to target. Enter a comma-separated list of node URIs or group names. Or read a node list from an input file '@<file>' or stdin '-'. Example: --nodes localhost,node_group,ssh://nix.com:23,winrm://windows.puppet.com URI format is [protocol://]host[:port] SSH is the default protocol; may be ssh, winrm, pcp, local For Windows nodes, specify the winrm:// protocol if it has not be configured For SSH, port defaults to '22' For WinRM, port defaults to '5985' or '5986' based on the --[no-]ssl setting For local, use 'local://localhost'\n",
            "type": "string"
        },
        "noop": {
            "description": "Execute a task that supports it in noop mode",
            "type": "boolean"
        },
        "params": {
            "description": "Parameters to a task or plan as json, a json file '@<file>', or on stdin '-'",
            "type": "string"
        },
        "params_obj": {
            "description": "Parameters object that will be translated into JSON. This is used if and only if `params` is NOT specified.",
            "type": "object"
        },
        "password": {
            "description": "Password to authenticate with. Omit the value to prompt for the password.",
            "secret": true,
            "type": "string"
        },
        "private_key": {
            "description": "Private ssh key to authenticate with",
            "type": "string"
        },
        "query": {
            "description": "Query PuppetDB to determine the targets",
            "type": "string"
        },
        "run_as": {
            "description": "User to run as using privilege escalation",
            "type": "string"
        },
        "ssl": {
            "description": "Use SSL with WinRM",
            "type": "boolean"
        },
        "ssl_verify": {
            "description": "Verify remote host SSL certificate with WinRM",
            "type": "boolean"
        },
        "sub_command": {
            "default": "apply",
            "immutable": true,
            "type": "string"
        },
        "sudo_password": {
            "description": "Password for privilege escalation. Omit the value to prompt for the password.",
            "secret": true,
            "type": "string"
        },
        "tmpdir": {
            "description": "The directory to upload and execute temporary files on the target",
            "type": "string"
        },
        "trace": {
            "description": "Display error stack traces",
            "type": "boolean"
        },
        "transport": {
            "description": "Specify a default transport: ssh, winrm, pcp, local",
            "type": "string"
        },
        "tty": {
            "description": "Request a pseudo TTY on nodes that support it",
            "type": "boolean"
        },
        "user": {
            "description": "User to authenticate as",
            "type": "string"
        },
        "verbose": {
            "description": "Display verbose logging",
            "type": "boolean"
        }
    },
    "runner_type": "python-script"
}
