{
    "description": "Run ad-hoc ansible command (module)",
    "enabled": true,
    "entry_point": "ansible.py",
    "name": "command",
    "parameters": {
        "args": {
            "description": "Module arguments [-a]",
            "type": "string"
        },
        "background": {
            "description": "Fork in Background asynchronously for X seconds [-B]",
            "type": "integer"
        },
        "become": {
            "description": "Run operations with become (nopasswd implied) [-b]",
            "type": "boolean"
        },
        "become_method": {
            "description": "Privilege escalation method to use. Valid choices: sudo, su, pbrun, pfexec, runas (default=sudo)",
            "enum": [
                "sudo",
                "su",
                "pbrun",
                "pfexec",
                "runas"
            ],
            "type": "string"
        },
        "become_user": {
            "description": "Run operations as this user. Works only with 'become'",
            "type": "string"
        },
        "check": {
            "description": "Don't make any changes; instead, try to predict some of the changes that may occur [-C]",
            "type": "boolean"
        },
        "connection": {
            "description": "Connection type to use (default=smart) [-c]",
            "type": "string"
        },
        "cwd": {
            "default": "/opt/stackstorm/packs/{% if action_context.parent is defined %}{{ action_context.parent.pack }}{% else %}{{ action_context.pack }}{% endif %}",
            "description": "Working directory where the command will be executed in (default: current pack/workflow dir)",
            "type": "string"
        },
        "extra_vars": {
            "description": "List of additional variables to pass to ansible. Each variable is represented as \"key=value\" or \"@path/to/file.yaml|json\" or use a yaml dict (\"key: [1, 2, 3]\") to send JSON. [-e]",
            "type": "array"
        },
        "forks": {
            "description": "Specify number of parallel processes to use (default=5) [-f]",
            "type": "integer"
        },
        "help": {
            "description": "Show help message and exit [-h]",
            "type": "boolean"
        },
        "hosts": {
            "description": "Hosts",
            "position": 0,
            "type": "string"
        },
        "inventory_file": {
            "description": "Inventory host file (default=/etc/ansible/hosts) [-i]",
            "type": "string"
        },
        "kwarg_op": {
            "default": "--",
            "description": "Lock operator type to '--'",
            "immutable": true,
            "type": "string"
        },
        "limit": {
            "description": "Further limit selected hosts to an additional pattern [-l]",
            "type": "string"
        },
        "list_hosts": {
            "description": "Outputs a list of matching hosts; does not execute anything else",
            "type": "boolean"
        },
        "module_name": {
            "description": "Module name to execute (default=command) [-m]",
            "type": "string"
        },
        "module_path": {
            "description": "Specify path(s) to module library (default=None) [-M]",
            "type": "string"
        },
        "one_line": {
            "description": "Condense output [-o]",
            "type": "boolean"
        },
        "poll": {
            "description": "Set the poll interval if using -B (default=15) [-P]",
            "type": "integer"
        },
        "private_key": {
            "description": "Use this file to authenticate the connection",
            "type": "string"
        },
        "sudo": {
            "default": true,
            "description": "Lock sudo, the behavior is controlled by ansible 'become_' options",
            "type": "boolean"
        },
        "timeout": {
            "default": 600,
            "description": "Action timeout in seconds. Action will get killed if it doesn't finish in timeout seconds",
            "type": "integer"
        },
        "tree": {
            "description": "Log output to this directory [-t]",
            "type": "string"
        },
        "user": {
            "description": "Connect to remote hosts as this user (default=root) [-u]",
            "type": "string"
        },
        "vault_password_file": {
            "description": "Vault password file",
            "type": "string"
        },
        "verbose": {
            "description": "Verbose mode (-vvvv to enable connection debugging)",
            "enum": [
                "v",
                "vv",
                "vvv",
                "vvvv"
            ],
            "type": "string"
        },
        "version": {
            "description": "Show ansible version number and exit",
            "type": "boolean"
        }
    },
    "runner_type": "local-shell-script"
}
