{
    "description": null,
    "enabled": true,
    "entry_point": "src/wrapper.py",
    "name": "router.list",
    "parameters": {
        "agent": {
            "description": "List routers hosted by an agent (ID only)",
            "type": "string"
        },
        "any_tags": {
            "description": "List routers which have any given tag(s) (Comma-separated list of tags)",
            "type": "string"
        },
        "base": {
            "default": "router list",
            "immutable": true,
            "type": "string"
        },
        "cloud": {
            "description": "A specific cloud to query",
            "type": "string"
        },
        "disable": {
            "default": false,
            "description": "List disabled routers",
            "type": "boolean"
        },
        "enable": {
            "default": false,
            "description": "List enabled routers",
            "type": "boolean"
        },
        "ep": {
            "default": "EntryPoint.parse('router_list = openstackclient.network.v2.router:ListRouter')",
            "immutable": true,
            "type": "string"
        },
        "format": {
            "default": "json",
            "description": "the output format, defaults to table (choices: csv, json, table, value, yaml)",
            "type": "string"
        },
        "long": {
            "default": false,
            "description": "List additional fields in output",
            "type": "boolean"
        },
        "name": {
            "description": "List routers according to their name",
            "type": "string"
        },
        "noindent": {
            "default": false,
            "description": "whether to disable indenting the JSON",
            "type": "boolean"
        },
        "not_any_tags": {
            "description": "Exclude routers which have any given tag(s) (Comma-separated list of tags)",
            "type": "string"
        },
        "not_tags": {
            "description": "Exclude routers which have all given tag(s) (Comma-separated list of tags)",
            "type": "string"
        },
        "project": {
            "description": "List routers according to their project (name or ID)",
            "type": "string"
        },
        "project_domain": {
            "description": "Domain the project belongs to (name or ID). This can be used in case collisions between project names exist.",
            "type": "string"
        },
        "project_id": {
            "description": "Run the action under a different project, identified by id",
            "type": "string"
        },
        "project_name": {
            "description": "Run the action under a different project, identified by name",
            "type": "string"
        },
        "tags": {
            "description": "List routers which have all given tag(s) (Comma-separated list of tags)",
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
