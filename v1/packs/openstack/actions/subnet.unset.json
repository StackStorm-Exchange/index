{
    "description": null,
    "enabled": true,
    "entry_point": "src/wrapper.py",
    "name": "subnet.unset",
    "parameters": {
        "all_tag": {
            "default": false,
            "description": "Clear all tags associated with the subnet",
            "type": "boolean"
        },
        "allocation_pool": {
            "description": "Allocation pool IP addresses to be removed from this subnet e.g.: start=192.168.199.2,end=192.168.199.254 (repeat option to unset multiple allocation pools)",
            "type": "string"
        },
        "base": {
            "default": "subnet unset",
            "immutable": true,
            "type": "string"
        },
        "cloud": {
            "description": "A specific cloud to query",
            "type": "string"
        },
        "dns_nameserver": {
            "description": "DNS server to be removed from this subnet (repeat option to unset multiple DNS servers)",
            "type": "array"
        },
        "ep": {
            "default": "EntryPoint.parse('subnet_unset = openstackclient.network.v2.subnet:UnsetSubnet')",
            "immutable": true,
            "type": "string"
        },
        "host_route": {
            "description": "Route to be removed from this subnet e.g.: destination=10.10.0.0/16,gateway=192.168.71.254 destination: destination subnet (in CIDR notation) gateway: nexthop IP address (repeat option to unset multiple host routes)",
            "type": "string"
        },
        "project_id": {
            "description": "Run the action under a different project, identified by id",
            "type": "string"
        },
        "project_name": {
            "description": "Run the action under a different project, identified by name",
            "type": "string"
        },
        "service_type": {
            "description": "Service type to be removed from this subnet e.g.: network:floatingip_agent_gateway. Must be a valid device owner value for a network port (repeat option to unset multiple service types)",
            "type": "array"
        },
        "subnet": {
            "description": "Subnet to modify (name or ID)",
            "required": true,
            "type": "string"
        },
        "tag": {
            "description": "Tag to be removed from the subnet (repeat option to remove multiple tags)",
            "type": "array"
        }
    },
    "runner_type": "python-script"
}
