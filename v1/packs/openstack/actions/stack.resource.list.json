{
    "description": "List stack resources.",
    "enabled": true,
    "entry_point": "src/wrapper.py",
    "name": "stack.resource.list",
    "parameters": {
        "base": {
            "default": "stack resource list",
            "immutable": true,
            "type": "string"
        },
        "cloud": {
            "description": "A specific cloud to query",
            "type": "string"
        },
        "ep": {
            "default": "EntryPoint.parse('stack_resource_list = heatclient.osc.v1.resource:ResourceList')",
            "immutable": true,
            "type": "string"
        },
        "filter": {
            "description": "Filter parameters to apply on returned resources based on their name, status, type, action, id and physical_resource_id",
            "type": "array"
        },
        "format": {
            "default": "json",
            "description": "the output format, defaults to table (choices: csv, dot, json, table, value, yaml)",
            "type": "string"
        },
        "long": {
            "default": false,
            "description": "Enable detailed information presented for each resource in resource list",
            "type": "boolean"
        },
        "nested_depth": {
            "description": "Depth of nested stacks from which to display resources",
            "type": "integer"
        },
        "noindent": {
            "default": false,
            "description": "whether to disable indenting the JSON",
            "type": "boolean"
        },
        "project_id": {
            "description": "Run the action under a different project, identified by id",
            "type": "string"
        },
        "project_name": {
            "description": "Run the action under a different project, identified by name",
            "type": "string"
        },
        "stack": {
            "description": "Name or ID of stack to query",
            "required": true,
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
