{
    "description": null,
    "enabled": true,
    "entry_point": "src/wrapper.py",
    "name": "network.qos.policy.create",
    "parameters": {
        "base": {
            "default": "network qos policy create",
            "immutable": true,
            "type": "string"
        },
        "cloud": {
            "description": "A specific cloud to query",
            "type": "string"
        },
        "default": {
            "default": false,
            "description": "Set this as a default network QoS policy",
            "type": "boolean"
        },
        "description": {
            "description": "Description of the QoS policy",
            "type": "string"
        },
        "ep": {
            "default": "EntryPoint.parse('network_qos_policy_create = openstackclient.network.v2.network_qos_policy:CreateNetworkQosPolicy')",
            "immutable": true,
            "type": "string"
        },
        "format": {
            "default": "json",
            "description": "the output format, defaults to table (choices: json, shell, table, value, yaml)",
            "type": "string"
        },
        "name": {
            "description": "Name of QoS policy to create",
            "required": true,
            "type": "string"
        },
        "no_default": {
            "default": false,
            "description": "Set this as a non-default network QoS policy",
            "type": "boolean"
        },
        "no_share": {
            "default": false,
            "description": "Make the QoS policy not accessible by other projects (default)",
            "type": "boolean"
        },
        "noindent": {
            "default": false,
            "description": "whether to disable indenting the JSON",
            "type": "boolean"
        },
        "project": {
            "description": "Owner's project (name or ID)",
            "type": "string"
        },
        "project_domain": {
            "description": "Domain the project belongs to (name or ID). This can be used in case collisions between project names exist.",
            "type": "string"
        },
        "project_id": {
            "description": "Run the action under a different project, identified by id",
            "type": "string"
        },
        "project_name": {
            "description": "Run the action under a different project, identified by name",
            "type": "string"
        },
        "share": {
            "default": false,
            "description": "Make the QoS policy accessible by other projects",
            "type": "boolean"
        }
    },
    "runner_type": "python-script"
}
