{
    "description": "This action is used to determine the best host and datastore to provision a new VM to on a given cluster\n",
    "enabled": true,
    "entry_point": "vm_bestfit.py",
    "name": "vm_bestfit",
    "parameters": {
        "cluster_name": {
            "description": "Name of the cluster in vSphere",
            "required": true,
            "type": "string"
        },
        "datastore_filter_regex_list": {
            "description": "'Regular expressions to filter the list of available datastores. If a datastore name matches any one of these expressions then it will not be returned by this action. example: [\"(?i)(backup)\", \"ds_name\"] this will filter out any datastores called \"ds_name\" as well as any with \"backup\" in their name'\n",
            "items": {
                "type": "string"
            },
            "required": false,
            "type": "array"
        },
        "datastore_filter_strategy": {
            "default": "exclude_matches",
            "description": "Filter strategy for if you want to exclude or include the datastore matches found.",
            "enum": [
                "exclude_matches",
                "include_matches"
            ],
            "type": "string"
        },
        "disks": {
            "description": "'List of disks to attach to a new VM. If a disk isn't given or if it's datastore key is \"automatic\" then this action will return the name and ID of the datastore with the most free space on it. If the first disk has a datastore that isn't \"automatic\" then that datastore name and ID will be returned. example: [{\n    \"size_gb\": \"string\",\n    \"uuid\": \"string\",\n    \"datastore\": \"string\",\n    \"controller_bus\": \"string\",\n    \"scsi_bus\": \"string\"\n }]'\n",
            "required": false,
            "type": "array"
        },
        "vsphere": {
            "default": null,
            "description": "Pre-Configured vsphere connection details",
            "position": 1,
            "required": false,
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
