{
    "description": "Post a list of rear port template objects.",
    "enabled": true,
    "entry_point": "run.py",
    "name": "post.dcim.rear_port_templates",
    "parameters": {
        "color": {
            "description": "Color",
            "required": false,
            "type": "string"
        },
        "description": {
            "description": "Description",
            "required": false,
            "type": "string"
        },
        "device_type": {
            "description": "Device type",
            "required": false,
            "type": "integer"
        },
        "endpoint_uri": {
            "default": "/dcim/rear-port-templates/",
            "immutable": true,
            "type": "string"
        },
        "get_detail_route_eligible": {
            "default": true,
            "immutable": true,
            "type": "boolean"
        },
        "http_verb": {
            "default": "post",
            "immutable": true,
            "type": "string"
        },
        "label": {
            "description": "Physical label",
            "required": false,
            "type": "string"
        },
        "module_type": {
            "description": "Module type",
            "required": false,
            "type": "integer"
        },
        "name": {
            "description": "{module} is accepted as a substitution for the module bay position when attached to a module type.",
            "required": false,
            "type": "string"
        },
        "positions": {
            "description": "Positions",
            "required": false,
            "type": "integer"
        },
        "type": {
            "description": "* `8p8c` - 8P8C * `8p6c` - 8P6C * `8p4c` - 8P4C * `8p2c` - 8P2C * `6p6c` - 6P6C * `6p4c` - 6P4C * `6p2c` - 6P2C * `4p4c` - 4P4C * `4p2c` - 4P2C * `gg45` - GG45 * `tera-4p` - TERA 4P * `tera-2p` - TERA 2P * `tera-1p` - TERA 1P * `110-punch` - 110 Punch * `bnc` - BNC * `f` - F Connector * `n` - N Connector * `mrj21` - MRJ21 * `fc` - FC * `lc` - LC * `lc-pc` - LC/PC * `lc-upc` - LC/UPC * `lc-apc` - LC/APC * `lsh` - LSH * `lsh-pc` - LSH/PC * `lsh-upc` - LSH/UPC * `lsh-apc` - LSH/APC * `lx5` - LX.5 * `lx5-pc` - LX.5/PC * `lx5-upc` - LX.5/UPC * `lx5-apc` - LX.5/APC * `mpo` - MPO * `mtrj` - MTRJ * `sc` - SC * `sc-pc` - SC/PC * `sc-upc` - SC/UPC * `sc-apc` - SC/APC * `st` - ST * `cs` - CS * `sn` - SN * `sma-905` - SMA 905 * `sma-906` - SMA 906 * `urm-p2` - URM-P2 * `urm-p4` - URM-P4 * `urm-p8` - URM-P8 * `splice` - Splice * `other` - Other",
            "required": false,
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
