{
    "description": "Get interface(s) from NetBox",
    "enabled": true,
    "entry_point": "base_get_action.py",
    "name": "dcim_get_interfaces",
    "pack": "netbox",
    "parameters": {
        "device": {
            "description": "Name of the device",
            "type": "string"
        },
        "device_id": {
            "description": "ID of the device",
            "type": "integer"
        },
        "endpoint_uri": {
            "default": "/api/dcim/interfaces/",
            "immutable": true
        },
        "form_factor": {
            "description": "Form factor value",
            "type": "integer"
        },
        "id": {
            "description": "If provided, will convert to using the detail route. I.e., <endpoint_uri>/<id>/, meaning a max of one entity will be returned and all other entity query parameters will be ignored.",
            "type": "integer"
        },
        "id__in": {
            "description": "List of Interface IDs",
            "type": "array"
        },
        "limit": {
            "default": 50,
            "description": "Max limit of objects to return from the request.",
            "type": "integer"
        },
        "mac_address": {
            "description": "MAC Address of the interface",
            "type": "string"
        },
        "name": {
            "description": "ID of the interface(s)",
            "type": "string"
        },
        "offset": {
            "default": 0,
            "description": "Offset result set by X objects. Used for pagination.",
            "type": "integer"
        },
        "save_in_key_store": {
            "default": false,
            "description": "Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.",
            "type": "boolean"
        },
        "save_in_key_store_key_name": {
            "description": "Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.",
            "type": "string"
        },
        "save_in_key_store_ttl": {
            "default": 60,
            "description": "TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.",
            "type": "integer"
        }
    },
    "runner_type": "python-script"
}
