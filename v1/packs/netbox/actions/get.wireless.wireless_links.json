{
    "description": "Get a list of wireless link objects.",
    "enabled": true,
    "entry_point": "run.py",
    "name": "get.wireless.wireless_links",
    "parameters": {
        "auth_cipher": {
            "description": "Auth_cipher",
            "required": false,
            "type": "array"
        },
        "auth_cipher__empty": {
            "description": "Auth_cipher is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "auth_cipher__ic": {
            "description": "Auth_cipher contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__ie": {
            "description": "Auth_cipher exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__iew": {
            "description": "Auth_cipher ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__isw": {
            "description": "Auth_cipher starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__n": {
            "description": "Auth_cipher not equal to",
            "required": false,
            "type": "array"
        },
        "auth_cipher__nic": {
            "description": "Auth_cipher does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__nie": {
            "description": "Auth_cipher inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__niew": {
            "description": "Auth_cipher does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_cipher__nisw": {
            "description": "Auth_cipher does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk": {
            "description": "Auth_psk",
            "required": false,
            "type": "array"
        },
        "auth_psk__empty": {
            "description": "Auth_psk is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "auth_psk__ic": {
            "description": "Auth_psk contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__ie": {
            "description": "Auth_psk exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__iew": {
            "description": "Auth_psk ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__isw": {
            "description": "Auth_psk starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__n": {
            "description": "Auth_psk not equal to",
            "required": false,
            "type": "array"
        },
        "auth_psk__nic": {
            "description": "Auth_psk does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__nie": {
            "description": "Auth_psk inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__niew": {
            "description": "Auth_psk does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_psk__nisw": {
            "description": "Auth_psk does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type": {
            "description": "Auth_type",
            "required": false,
            "type": "array"
        },
        "auth_type__empty": {
            "description": "Auth_type is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "auth_type__ic": {
            "description": "Auth_type contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__ie": {
            "description": "Auth_type exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__iew": {
            "description": "Auth_type ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__isw": {
            "description": "Auth_type starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__n": {
            "description": "Auth_type not equal to",
            "required": false,
            "type": "array"
        },
        "auth_type__nic": {
            "description": "Auth_type does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__nie": {
            "description": "Auth_type inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__niew": {
            "description": "Auth_type does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "auth_type__nisw": {
            "description": "Auth_type does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "created": {
            "description": "Created",
            "required": false,
            "type": "array"
        },
        "created__empty": {
            "description": "Created is empty/null (boolean)",
            "required": false,
            "type": "array"
        },
        "created__gt": {
            "description": "Created greater than",
            "required": false,
            "type": "array"
        },
        "created__gte": {
            "description": "Created greater than or equal to",
            "required": false,
            "type": "array"
        },
        "created__lt": {
            "description": "Created less than",
            "required": false,
            "type": "array"
        },
        "created__lte": {
            "description": "Created less than or equal to",
            "required": false,
            "type": "array"
        },
        "created__n": {
            "description": "Created not equal to",
            "required": false,
            "type": "array"
        },
        "created_by_request": {
            "description": "Created_by_request",
            "required": false,
            "type": "string"
        },
        "description": {
            "description": "Description",
            "required": false,
            "type": "array"
        },
        "description__empty": {
            "description": "Description is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "description__ic": {
            "description": "Description contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__ie": {
            "description": "Description exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__iew": {
            "description": "Description ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__isw": {
            "description": "Description starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "description__n": {
            "description": "Description not equal to",
            "required": false,
            "type": "array"
        },
        "description__nic": {
            "description": "Description does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__nie": {
            "description": "Description inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__niew": {
            "description": "Description does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "description__nisw": {
            "description": "Description does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "distance": {
            "description": "Distance",
            "required": false,
            "type": "array"
        },
        "distance__empty": {
            "description": "Distance is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "distance__gt": {
            "description": "Distance greater than",
            "required": false,
            "type": "array"
        },
        "distance__gte": {
            "description": "Distance greater than or equal to",
            "required": false,
            "type": "array"
        },
        "distance__lt": {
            "description": "Distance less than",
            "required": false,
            "type": "array"
        },
        "distance__lte": {
            "description": "Distance less than or equal to",
            "required": false,
            "type": "array"
        },
        "distance__n": {
            "description": "Distance not equal to",
            "required": false,
            "type": "array"
        },
        "distance_unit": {
            "description": "* `km` - Kilometers * `m` - Meters * `mi` - Miles * `ft` - Feet",
            "required": false,
            "type": "string"
        },
        "endpoint_uri": {
            "default": "/wireless/wireless-links/",
            "immutable": true,
            "type": "string"
        },
        "fail_non_2xx": {
            "default": false,
            "description": "Set action as failed when http return reponse status isn't 2xx.",
            "type": "boolean"
        },
        "get_detail_route_eligible": {
            "default": true,
            "immutable": true,
            "type": "boolean"
        },
        "http_verb": {
            "default": "get",
            "immutable": true,
            "type": "string"
        },
        "id": {
            "description": "Id",
            "required": false,
            "type": "array"
        },
        "id__empty": {
            "description": "Id is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "id__gt": {
            "description": "Id greater than",
            "required": false,
            "type": "array"
        },
        "id__gte": {
            "description": "Id greater than or equal to",
            "required": false,
            "type": "array"
        },
        "id__lt": {
            "description": "Id less than",
            "required": false,
            "type": "array"
        },
        "id__lte": {
            "description": "Id less than or equal to",
            "required": false,
            "type": "array"
        },
        "id__n": {
            "description": "Id not equal to",
            "required": false,
            "type": "array"
        },
        "interface_a_id": {
            "description": "Interface_a_id",
            "required": false,
            "type": "array"
        },
        "interface_a_id__n": {
            "description": "Interface_a_id not equal to",
            "required": false,
            "type": "array"
        },
        "interface_b_id": {
            "description": "Interface_b_id",
            "required": false,
            "type": "array"
        },
        "interface_b_id__n": {
            "description": "Interface_b_id not equal to",
            "required": false,
            "type": "array"
        },
        "last_updated": {
            "description": "Last_updated",
            "required": false,
            "type": "array"
        },
        "last_updated__empty": {
            "description": "Last_updated is empty/null (boolean)",
            "required": false,
            "type": "array"
        },
        "last_updated__gt": {
            "description": "Last_updated greater than",
            "required": false,
            "type": "array"
        },
        "last_updated__gte": {
            "description": "Last_updated greater than or equal to",
            "required": false,
            "type": "array"
        },
        "last_updated__lt": {
            "description": "Last_updated less than",
            "required": false,
            "type": "array"
        },
        "last_updated__lte": {
            "description": "Last_updated less than or equal to",
            "required": false,
            "type": "array"
        },
        "last_updated__n": {
            "description": "Last_updated not equal to",
            "required": false,
            "type": "array"
        },
        "limit": {
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
        },
        "modified_by_request": {
            "description": "Modified_by_request",
            "required": false,
            "type": "string"
        },
        "offset": {
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
        },
        "ordering": {
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
        },
        "q": {
            "description": "Search",
            "required": false,
            "type": "string"
        },
        "save_in_key_store": {
            "default": false,
            "description": "Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.",
            "type": "boolean"
        },
        "save_in_key_store_key_name": {
            "description": "Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.",
            "type": "string"
        },
        "save_in_key_store_ttl": {
            "default": 60,
            "description": "TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.",
            "type": "integer"
        },
        "ssid": {
            "description": "Ssid",
            "required": false,
            "type": "array"
        },
        "ssid__empty": {
            "description": "Ssid is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "ssid__ic": {
            "description": "Ssid contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__ie": {
            "description": "Ssid exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__iew": {
            "description": "Ssid ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__isw": {
            "description": "Ssid starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__n": {
            "description": "Ssid not equal to",
            "required": false,
            "type": "array"
        },
        "ssid__nic": {
            "description": "Ssid does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__nie": {
            "description": "Ssid inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__niew": {
            "description": "Ssid does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "ssid__nisw": {
            "description": "Ssid does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "status": {
            "description": "Status",
            "required": false,
            "type": "array"
        },
        "status__empty": {
            "description": "Status is empty/null (boolean)",
            "required": false,
            "type": "boolean"
        },
        "status__ic": {
            "description": "Status contains (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__ie": {
            "description": "Status exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__iew": {
            "description": "Status ends with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__isw": {
            "description": "Status starts with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "status__n": {
            "description": "Status not equal to",
            "required": false,
            "type": "array"
        },
        "status__nic": {
            "description": "Status does not contain (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__nie": {
            "description": "Status inverse exact match (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__niew": {
            "description": "Status does not end with (case-insensitive)",
            "required": false,
            "type": "array"
        },
        "status__nisw": {
            "description": "Status does not start with (case-sensitive)",
            "required": false,
            "type": "array"
        },
        "tag": {
            "description": "Tag",
            "required": false,
            "type": "array"
        },
        "tag__n": {
            "description": "Tag not equal to",
            "required": false,
            "type": "array"
        },
        "tag_id": {
            "description": "Tag_id",
            "required": false,
            "type": "array"
        },
        "tag_id__n": {
            "description": "Tag_id not equal to",
            "required": false,
            "type": "array"
        },
        "tenant": {
            "description": "Tenant (slug)",
            "required": false,
            "type": "array"
        },
        "tenant__n": {
            "description": "Tenant not equal to",
            "required": false,
            "type": "array"
        },
        "tenant_group": {
            "description": "Tenant_group",
            "required": false,
            "type": "array"
        },
        "tenant_group__n": {
            "description": "Tenant_group not equal to",
            "required": false,
            "type": "array"
        },
        "tenant_group_id": {
            "description": "Tenant_group_id",
            "required": false,
            "type": "array"
        },
        "tenant_group_id__n": {
            "description": "Tenant_group_id not equal to",
            "required": false,
            "type": "array"
        },
        "tenant_id": {
            "description": "Tenant (ID)",
            "required": false,
            "type": "array"
        },
        "tenant_id__n": {
            "description": "Tenant_id not equal to",
            "required": false,
            "type": "array"
        },
        "updated_by_request": {
            "description": "Updated_by_request",
            "required": false,
            "type": "string"
        }
    },
    "runner_type": "python-script"
}
