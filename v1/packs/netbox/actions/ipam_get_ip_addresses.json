{
    "description": "Get IP addresses from NetBox",
    "enabled": true,
    "entry_point": "base_get_action.py",
    "name": "ipam_get_ip_addresses",
    "pack": "netbox",
    "parameters": {
        "device": {
            "description": "Name of the Device",
            "type": "string"
        },
        "device_id": {
            "description": "ID of the Device",
            "type": "integer"
        },
        "endpoint_uri": {
            "default": "/api/ipam/ip-addresses/",
            "immutable": true
        },
        "family": {
            "description": "IP Address family",
            "type": "string"
        },
        "id": {
            "description": "If provided, will convert to using the detail route. I.e., <endpoint_uri>/<id>/, meaning a max of one entity will be returned and all other entity query parameters will be ignored.",
            "type": "integer"
        },
        "id__in": {
            "description": "List of IP Address IDs",
            "type": "array"
        },
        "interface_id": {
            "description": "ID of the Interface",
            "type": "integer"
        },
        "limit": {
            "default": 50,
            "description": "Max limit of objects to return from the request.",
            "type": "integer"
        },
        "mask_length": {
            "description": "Subnet mask length (CIDR bits)",
            "type": "integer"
        },
        "offset": {
            "default": 0,
            "description": "Offset result set by X objects. Used for pagination.",
            "type": "integer"
        },
        "parent": {
            "description": "IP Address parent prefix",
            "type": "string"
        },
        "q": {
            "description": "IP Address query",
            "type": "string"
        },
        "save_in_key_store": {
            "default": false,
            "description": "Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.",
            "type": "boolean"
        },
        "save_in_key_store_key_name": {
            "description": "Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.",
            "type": "string"
        },
        "save_in_key_store_ttl": {
            "default": 60,
            "description": "TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.",
            "type": "integer"
        },
        "status": {
            "description": "Status of the IP Address",
            "type": "string"
        },
        "tenant": {
            "description": "Name of the Tenant",
            "type": "string"
        },
        "tenant_id": {
            "description": "ID of the Tenant",
            "type": "integer"
        },
        "vrf": {
            "description": "Name of the VRF",
            "type": "string"
        },
        "vrf_id": {
            "description": "ID of the VRF",
            "type": "integer"
        }
    },
    "runner_type": "python-script"
}
