{
    "description": "Get device(s) from NetBox",
    "enabled": true,
    "entry_point": "base_get_action.py",
    "name": "dcim_get_devices",
    "pack": "netbox",
    "parameters": {
        "asset_tag": {
            "description": "Asset Tag of the device",
            "type": "string"
        },
        "device_type_id": {
            "description": "ID of the Device Type for devices",
            "type": "integer"
        },
        "endpoint_uri": {
            "default": "/api/dcim/devices/",
            "immutable": true
        },
        "has_primary_ip": {
            "description": "Device has a Primary IP assigned (T/F)",
            "type": "boolean"
        },
        "id__in": {
            "description": "List of Device IDs",
            "type": "array"
        },
        "is_console_server": {
            "description": "Device is a Console Server (T/F)",
            "type": "boolean"
        },
        "is_network_device": {
            "description": "Device is a Network Device (T/F)",
            "type": "boolean"
        },
        "is_pdu": {
            "description": "Device is a PDU (T/F)",
            "type": "boolean"
        },
        "limit": {
            "default": 50,
            "description": "Max limit of objects to return from the request.",
            "type": "integer"
        },
        "mac_address": {
            "description": "Mac Address of the device",
            "type": "string"
        },
        "manufacturer": {
            "description": "Manufacturer of devices",
            "type": "string"
        },
        "manufacturer_id": {
            "description": "ID of the Manufacturer for devices",
            "type": "integer"
        },
        "model": {
            "description": "Model of devices",
            "type": "string"
        },
        "name": {
            "description": "Name of the device",
            "type": "string"
        },
        "offset": {
            "default": 0,
            "description": "Offset result set by X objects. Used for pagination.",
            "type": "integer"
        },
        "platform": {
            "description": "Platform of devices",
            "type": "string"
        },
        "platform_id": {
            "description": "ID of the Platform for devices",
            "type": "integer"
        },
        "q": {
            "description": "Device query",
            "type": "string"
        },
        "rack": {
            "description": "Rack of devices",
            "type": "string"
        },
        "rack_group_id": {
            "description": "ID of the Rack Group for devices",
            "type": "integer"
        },
        "rack_id": {
            "description": "ID of the Rack for devices",
            "type": "integer"
        },
        "role": {
            "description": "Role of the devices",
            "type": "string"
        },
        "role_id": {
            "description": "ID of the Role for devices",
            "type": "integer"
        },
        "save_in_key_store": {
            "default": false,
            "description": "Save the result of the action as a json object in the st2 key store. Used when the expected result from Netbox is very large and the result will be piped to another action. You must also specify a save_in_key_store_keyname and an optional save_in_key_store_ttl.",
            "type": "boolean"
        },
        "save_in_key_store_key_name": {
            "description": "Name of the key to store the json result value in the st2 key store. Must be used with save_in_key_store and optionally save_in_key_store_ttl.",
            "type": "string"
        },
        "save_in_key_store_ttl": {
            "default": 60,
            "description": "TTL (seconds) of the saved json result in the st2 key store. Defaults to 60 seconds. Must be used with save_in_key_store and save_in_key_store_key_name.",
            "type": "integer"
        },
        "serial": {
            "description": "Serial number of the device",
            "type": "string"
        },
        "site": {
            "description": "Site slug for devices",
            "type": "string"
        },
        "site_id": {
            "description": "ID of the Site for devices",
            "type": "integer"
        },
        "status": {
            "description": "Status of devices",
            "type": "string"
        },
        "tenant": {
            "description": "Tenant of devices",
            "type": "string"
        },
        "tenant_id": {
            "description": "ID of the Tenant for devices",
            "type": "integer"
        }
    },
    "runner_type": "python-script"
}
