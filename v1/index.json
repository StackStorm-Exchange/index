{
    "metadata": {
        "generated_ts": 1528994316,
        "hash": "3a5a9f9cd5b2803201a8df751f685219"
    },
    "packs": {
        "acos": {
            "author": "Hiroyasu OHYAMA",
            "content": {
                "actions": {
                    "count": 19,
                    "resources": [
                        "get_slb_service_group_members",
                        "add_slb_service_group_member",
                        "del_slb_virtual_server",
                        "del_slb_server_port",
                        "add_slb_virtual_server_port",
                        "del_slb_service_group_member",
                        "add_slb_server_port",
                        "list_slb_servers",
                        "get_slb_server",
                        "get_slb_virtual_server",
                        "del_slb_virtual_server_port",
                        "add_slb_service_group",
                        "del_slb_service_group",
                        "add_slb_virtual_server",
                        "list_slb_service_groups",
                        "list_slb_virtual_servers",
                        "get_slb_service_group",
                        "add_slb_server",
                        "del_slb_server"
                    ]
                },
                "tests": {
                    "count": 3,
                    "resources": [
                        "test_get_slb_server.py",
                        "acos_base_action_test_case.py",
                        "test_list_slb_servers.py"
                    ]
                }
            },
            "description": "StackStorm pack for ACOS-based appliances of A10 Networks.",
            "email": "user.localhost2000@gmail.com",
            "keywords": [
                "acos",
                "load balancer",
                "ADC",
                "network"
            ],
            "name": "acos",
            "ref": "acos",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-acos",
            "version": "0.2.4"
        },
        "activecampaign": {
            "author": "DoriftoShoes",
            "content": {
                "actions": {
                    "count": 122,
                    "resources": [
                        "branding_view",
                        "campaign_report_unsubscription_totals",
                        "list_view",
                        "automation_contact_list",
                        "contact_edit",
                        "user_delete",
                        "campaign_delete_list",
                        "deal_tasktype_delete",
                        "deal_pipeline_edit",
                        "track_site_list",
                        "deal_edit",
                        "campaign_paginator",
                        "deal_stage_add",
                        "user_view_email",
                        "list_delete_list",
                        "campaign_report_link_list",
                        "list_field_add",
                        "automation_list",
                        "message_edit",
                        "message_list",
                        "webhook_edit",
                        "group_list",
                        "user_edit",
                        "message_view",
                        "contact_add",
                        "user_add",
                        "deal_delete",
                        "deal_get",
                        "deal_add",
                        "contact_tag_remove",
                        "track_event_add",
                        "list_field_view",
                        "message_template_list",
                        "message_template_import",
                        "list_paginator",
                        "deal_pipeline_delete",
                        "group_view",
                        "list_delete",
                        "webhook_view",
                        "message_template_export",
                        "form_getforms",
                        "deal_stage_edit",
                        "group_delete",
                        "list_field_edit",
                        "list_add",
                        "automation_contact_view",
                        "track_event_delete",
                        "campaign_list",
                        "deal_tasktype_edit",
                        "user_view_username",
                        "track_site_whitelist_delete",
                        "contact_delete",
                        "contact_list",
                        "message_template_view",
                        "deal_task_add",
                        "list_edit",
                        "singlesignon",
                        "message_template_edit",
                        "contact_tag_add",
                        "campaign_report_open_totals",
                        "campaign_status",
                        "form_html",
                        "user_list",
                        "track_event_status_edit",
                        "campaign_report_forward_list",
                        "contact_note_delete",
                        "user_view",
                        "user_me",
                        "contact_delete_list",
                        "deal_note_edit",
                        "webhook_events",
                        "webhook_list",
                        "track_site_status_edit",
                        "contact_automation_list",
                        "contact_view",
                        "list_field_delete",
                        "message_template_delete_list",
                        "campaign_report_bounce_totals",
                        "campaign_delete",
                        "deal_tasktype_add",
                        "contact_note_add",
                        "contact_view_email",
                        "settings_edit",
                        "branding_edit",
                        "deal_pipeline_add",
                        "message_delete_list",
                        "campaign_create",
                        "campaign_report_unsubscription_list",
                        "contact_note_edit",
                        "automation_contact_remove",
                        "message_template_add",
                        "group_edit",
                        "contact_view_hash",
                        "campaign_report_link_totals",
                        "deal_task_edit",
                        "deal_pipeline_list",
                        "message_template_delete",
                        "list_list",
                        "campaign_send",
                        "message_delete",
                        "campaign_report_forward_totals",
                        "message_add",
                        "group_delete_list",
                        "deal_stage_delete",
                        "webhook_delete",
                        "contact_sync",
                        "deal_list",
                        "campaign_report_unopen_list",
                        "deal_stage_list",
                        "organization_list",
                        "contact_paginator",
                        "user_delete_list",
                        "track_site_whitelist_add",
                        "campaign_report_open_list",
                        "group_add",
                        "campaign_report_totals",
                        "account_view",
                        "track_event_list",
                        "webhook_add",
                        "deal_note_add",
                        "campaign_report_bounce_list",
                        "automation_contact_add"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "on_webhook_dump"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "ActiveCampaignWebhook"
                    ]
                }
            },
            "description": "Integration with ActiveCampaign",
            "email": "patrick@stackstorm.com",
            "name": "activecampaign",
            "ref": "activecampaign",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-activecampaign",
            "version": "0.3.2"
        },
        "activedirectory": {
            "author": "Encore Technologies",
            "content": {
                "actions": {
                    "count": 77,
                    "resources": [
                        "remove_ad_object",
                        "move_ad_object",
                        "new_ad_organizational_unit",
                        "get_ad_organizational_unit",
                        "remove_ad_group",
                        "set_ad_account_control",
                        "get_ad_computer",
                        "uninstall_ad_service_account",
                        "set_ad_user",
                        "install_ad_service_account",
                        "get_ad_domain",
                        "get_ad_group",
                        "get_ad_domain_controller_password_replication_policy_usage",
                        "new_ad_service_account",
                        "set_ad_computer",
                        "set_ad_service_account",
                        "set_ad_group",
                        "remove_ad_service_account",
                        "remove_ad_computer_service_account",
                        "get_ad_optional_feature",
                        "set_ad_object",
                        "get_ad_default_domain_password_policy",
                        "restore_ad_object",
                        "get_ad_user",
                        "get_ad_domain_controller_password_replication_policy",
                        "move_ad_directory_server",
                        "add_ad_computer_service_account",
                        "set_ad_forest_mode",
                        "remove_ad_computer",
                        "new_ad_object",
                        "get_ad_user_resultant_password_policy",
                        "set_ad_organizational_unit",
                        "remove_ad_organizational_unit",
                        "remove_ad_fine_grained_password_policy_subject",
                        "move_ad_directory_server_operation_master_role",
                        "remove_ad_domain_controller_password_replication_policy",
                        "unlock_ad_account",
                        "set_ad_domain_mode",
                        "get_ad_domain_controller",
                        "get_ad_computer_service_account",
                        "set_ad_fine_grained_password_policy",
                        "new_ad_group",
                        "enable_ad_optional_feature",
                        "get_ad_account_resultant_password_replication_policy",
                        "set_ad_account_password",
                        "set_ad_default_domain_password_policy",
                        "add_ad_domain_controller_password_replication_policy",
                        "add_ad_principal_group_membership",
                        "add_ad_group_member",
                        "get_ad_service_account",
                        "remove_ad_group_member",
                        "get_ad_group_member",
                        "install_rsat_ad_powershell",
                        "enable_ad_account",
                        "get_ad_fine_grained_password_policy",
                        "get_ad_root_dse",
                        "get_ad_fine_grained_password_policy_subject",
                        "new_ad_computer",
                        "get_ad_account_authorization_group",
                        "set_ad_forest",
                        "set_ad_account_expiration",
                        "rename_ad_object",
                        "disable_ad_account",
                        "remove_ad_principal_group_membership",
                        "new_ad_fine_grained_password_policy",
                        "add_ad_fine_grained_password_policy_subject",
                        "reset_ad_service_account_password",
                        "disable_ad_optional_feature",
                        "get_ad_forest",
                        "get_ad_principal_group_membership",
                        "search_ad_account",
                        "get_ad_object",
                        "remove_ad_fine_grained_password_policy",
                        "clear_ad_account_expiration",
                        "new_ad_user",
                        "set_ad_domain",
                        "remove_ad_user"
                    ]
                },
                "tests": {
                    "count": 3,
                    "resources": [
                        "activedirectory_base_action_test_case.py",
                        "test_winrm_connection.py",
                        "test_action_lib_baseaction.py"
                    ]
                }
            },
            "description": "StackStorm integration pack for working with Microsoft Active Directory.",
            "email": "code@encore.tech",
            "keywords": [
                "microsoft",
                "ms",
                "activedirectory",
                "active",
                "directory",
                "ad"
            ],
            "name": "activedirectory",
            "ref": "activedirectory",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-activedirectory",
            "version": "0.1.2"
        },
        "alertlogic": {
            "author": "Jon Middleton",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "scan_list_scan_executions",
                        "scan_get_results_by_title",
                        "scan_get_results",
                        "scan_list_scans"
                    ]
                },
                "aliases": {
                    "count": 3,
                    "resources": [
                        "list_scans",
                        "list_scan_executions",
                        "get_scan_results"
                    ]
                }
            },
            "description": "AlertLogic ActiveIntegration APIs",
            "email": "jon.middleton@pulsant.com",
            "keywords": [
                "AlertLogic",
                "security"
            ],
            "name": "alertlogic",
            "ref": "alertlogic",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-alertlogic",
            "version": "0.2.2"
        },
        "algosec": {
            "author": "Encore Technologies",
            "content": {
                "actions": {
                    "count": 57,
                    "resources": [
                        "afa_create_device_group",
                        "afa_get_containing_objects",
                        "afa_create_domain",
                        "fireflow_create_ticket",
                        "afa_get_nat_discovery",
                        "afa_create_role",
                        "afa_get_entity_name",
                        "afa_get_hostgroups_by_device",
                        "afa_set_configuration",
                        "afa_get_parent_device",
                        "fireflow_is_session_alive",
                        "afa_get_members_by_device",
                        "afa_import_risks_from_xml",
                        "afa_get_rule_documentation",
                        "afa_delete_scheduler_job",
                        "fireflow_get_template_fields",
                        "afa_create_user",
                        "afa_edit_rule_documentation",
                        "afa_query",
                        "fireflow_get_ticket",
                        "afa_update_role",
                        "afa_get_devices_list",
                        "afa_get_all_hostgroups",
                        "afa_get_device_statistics",
                        "afa_get_services_by_device",
                        "afa_create_device",
                        "afa_get_service_by_name_and_device",
                        "afa_add_device_to_group",
                        "afa_is_session_alive",
                        "afa_connect",
                        "fireflow_update_object_custom_field",
                        "afa_get_entity_id",
                        "afa_delete_user",
                        "afa_search_rule",
                        "afa_start_analysis",
                        "afa_update_user",
                        "afa_search_object_by_ip",
                        "fireflow_authenticate",
                        "afa_delete_role",
                        "fireflow_delete_object_custom_field",
                        "afa_device_changes_over_time_report",
                        "afa_get_report_pdf",
                        "afa_get_unused_rules",
                        "afa_set_scheduler_job",
                        "fireflow_add_object_custom_field",
                        "fireflow_get_fields",
                        "afa_get_configuration",
                        "afa_get_group_content",
                        "afa_get_hostgroup_by_name_and_device",
                        "afa_get_groups_list",
                        "afa_get_license",
                        "afa_get_rules_by_device",
                        "afa_risks_summary",
                        "afa_delete_device",
                        "afa_get_all_services",
                        "afa_import_risks_from_spreadsheet",
                        "afa_disconnect"
                    ]
                },
                "tests": {
                    "count": 3,
                    "resources": [
                        "test_action_lib_run_operation.py",
                        "algosec_base_action_test_case.py",
                        "test_action_lib_run_login.py"
                    ]
                }
            },
            "description": "Pack with actions for AlgoSec Firewall Analizer, FireFlow, Business Flow apis",
            "email": "code@encore.tech",
            "keywords": [
                "AlgoSec",
                "Firewall",
                "Networking"
            ],
            "name": "algosec",
            "ref": "algosec",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-algosec",
            "version": "0.1.1"
        },
        "ansible": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 8,
                    "resources": [
                        "playbook",
                        "command_local",
                        "galaxy.list",
                        "vault.encrypt",
                        "galaxy.install",
                        "command",
                        "vault.decrypt",
                        "galaxy.remove"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_actions_lib_ansiblebaserunner.py"
                    ]
                }
            },
            "description": "st2 content pack containing ansible integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "ansible",
                "cfg management",
                "configuration management"
            ],
            "name": "ansible",
            "ref": "ansible",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-ansible",
            "version": "0.5.4"
        },
        "astral": {
            "author": "Tim Braly",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "get_sunrise",
                        "get_dusk",
                        "get_sunset",
                        "get_dawn"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "AstralSunSensor"
                    ]
                }
            },
            "description": "triggers for sunrise/sunset information",
            "email": "tbraly@brocade.com",
            "name": "astral",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-astral",
            "version": "0.2.1"
        },
        "aws": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3581,
                    "resources": [
                        "lex-models_create_intent_version",
                        "apigateway_flush_stage_authorizers_cache",
                        "rds_create_db_instance",
                        "apigateway_create_usage_plan_key",
                        "lightsail_get_static_ip",
                        "codepipeline_list_pipelines",
                        "ec2_cancel_spot_instance_requests",
                        "vpc_delete_internet_gateway",
                        "opsworks_update_app",
                        "storagegateway_update_vtl_device_type",
                        "logs_describe_log_streams",
                        "cognito-identity_create_identity_pool",
                        "ec2_trim_snapshots",
                        "gamelift_update_game_session_queue",
                        "ds_list_ip_routes",
                        "iam_get_utf8_value",
                        "ssm_update_patch_baseline",
                        "sms_import_server_catalog",
                        "ds_describe_snapshots",
                        "ec2_delete_vpc",
                        "inspector_list_tags_for_resource",
                        "cognito-idp_set_user_settings",
                        "cloudformation_describe_stack_events",
                        "ec2_describe_host_reservations",
                        "inspector_get_assessment_report",
                        "s3_create_bucket",
                        "cloudformation_delete_stack",
                        "ec2_describe_reserved_instances_listings",
                        "kms_create_alias",
                        "rds_modify_event_subscription",
                        "elastictranscoder_list_presets",
                        "mturk_list_assignments_for_hit",
                        "autoscaling_terminate_instance_in_auto_scaling_group",
                        "pinpoint_get_campaigns",
                        "lightsail_is_vpc_peered",
                        "route53domains_check_domain_availability",
                        "rds_modify_db_cluster_parameter_group",
                        "devicefarm_get_account_settings",
                        "sns_add_permission",
                        "clouddirectory_detach_policy",
                        "apigateway_update_documentation_part",
                        "dms_stop_replication_task",
                        "autoscaling_describe_auto_scaling_groups",
                        "iam_get_all_mfa_devices",
                        "ec2_create_route_table",
                        "iam_update_open_id_connect_provider_thumbprint",
                        "rds_describe_db_snapshots",
                        "redshift_create_tags",
                        "vpc_modify_reserved_instances",
                        "rds_restore_db_instance_from_db_snapshot",
                        "ses_describe_active_receipt_rule_set",
                        "storagegateway_remove_tags_from_resource",
                        "lightsail_get_key_pairs",
                        "iam_set_request_hook",
                        "route53_get_hosted_zone",
                        "pinpoint_update_apns_channel",
                        "directconnect_create_connection",
                        "apigateway_create_documentation_version",
                        "kinesis_put_records",
                        "opsworks_describe_layers",
                        "codestar_disassociate_team_member",
                        "clouddirectory_update_schema",
                        "rekognition_detect_labels",
                        "s3_list_parts",
                        "organizations_list_policies_for_target",
                        "organizations_delete_policy",
                        "storagegateway_create_tape_with_barcode",
                        "cognito-idp_update_user_pool_client",
                        "codebuild_list_projects",
                        "cognito-idp_admin_user_global_sign_out",
                        "lightsail_get_instance_snapshot",
                        "rds_set_request_hook",
                        "storagegateway_describe_cache",
                        "elasticbeanstalk_describe_instances_health",
                        "s3_download_file",
                        "vpc_create_placement_group",
                        "cloudhsm_create_hapg",
                        "sqs_get_object",
                        "sqs_set_request_hook",
                        "codedeploy_remove_tags_from_on_premises_instances",
                        "vpc_get_password_data",
                        "kms_decrypt",
                        "discovery_describe_tags",
                        "elasticbeanstalk_update_application_resource_lifecycle",
                        "autoscaling_attach_load_balancers",
                        "redshift_modify_snapshot_copy_retention_period",
                        "lightsail_get_blueprints",
                        "clouddirectory_update_facet",
                        "lightsail_get_instance_metric_data",
                        "pinpoint_get_campaign_versions",
                        "athena_list_query_executions",
                        "iam_list_user_policies",
                        "logs_describe_subscription_filters",
                        "devicefarm_stop_run",
                        "greengrass_list_logger_definition_versions",
                        "s3_upload_part_copy",
                        "elasticbeanstalk_create_platform_version",
                        "discovery_describe_agents",
                        "elastictranscoder_update_pipeline",
                        "sqs_new_http_connection",
                        "workspaces_rebuild_workspaces",
                        "redshift_restore_table_from_cluster_snapshot",
                        "rds_build_base_http_request",
                        "ec2_get_utf8_value",
                        "ssm_deregister_task_from_maintenance_window",
                        "cloudwatch_delete_alarms",
                        "organizations_list_parents",
                        "vpc_get_instance_attribute",
                        "greengrass_delete_subscription_definition",
                        "kinesisanalytics_delete_application_cloud_watch_logging_option",
                        "vpc_unassign_private_ip_addresses",
                        "vpc_copy_image",
                        "vpc_build_configurations_param_list",
                        "gamelift_create_game_session_queue",
                        "r53_handle_proxy",
                        "vpc_delete_route",
                        "codepipeline_put_third_party_job_failure_result",
                        "events_list_rules",
                        "autoscaling_create_auto_scaling_group",
                        "ec2_describe_reserved_instances_modifications",
                        "apigateway_update_resource",
                        "iam_get_group_policy",
                        "iam_list_groups_for_user",
                        "ec2_detach_internet_gateway",
                        "cognito-idp_admin_get_device",
                        "iam_new_http_connection",
                        "dax_create_cluster",
                        "swf_describe_workflow_execution",
                        "ec2_get_image",
                        "waf-regional_update_rate_based_rule",
                        "iam_update_service_specific_credential",
                        "cloudformation_list_imports",
                        "workdocs_describe_notification_subscriptions",
                        "mturk_list_hi_ts",
                        "workdocs_describe_document_versions",
                        "rds_modify_option_group",
                        "lightsail_get_operations",
                        "dynamodb_describe_time_to_live",
                        "ec2_accept_vpc_peering_connection",
                        "dax_decrease_replication_factor",
                        "apigateway_delete_integration",
                        "elasticache_list_allowed_node_type_modifications",
                        "vpc_attach_vpn_gateway",
                        "greengrass_get_associated_role",
                        "codecommit_get_repository_triggers",
                        "ec2_describe_egress_only_internet_gateways",
                        "codecommit_test_repository_triggers",
                        "vpc_delete_vpc_peering_connection",
                        "iam_update_account_password_policy",
                        "route53_delete_vpc_association_authorization",
                        "mturk_create_qualification_type",
                        "s3_list_bucket_analytics_configurations",
                        "rds_describe_orderable_db_instance_options",
                        "codepipeline_acknowledge_job",
                        "redshift_describe_resize",
                        "storagegateway_list_tapes",
                        "mturk_disassociate_qualification_from_worker",
                        "cognito-idp_list_user_pool_clients",
                        "codestar_update_project",
                        "ec2_describe_network_acls",
                        "cloudtrail_remove_tags",
                        "glacier_remove_tags_from_vault",
                        "machinelearning_get_batch_prediction",
                        "apigateway_get_authorizer",
                        "redshift_describe_orderable_cluster_options",
                        "route53domains_list_tags_for_domain",
                        "config_describe_configuration_recorder_status",
                        "s3_server_name",
                        "apigateway_test_invoke_method",
                        "iam_delete_signing_certificate",
                        "swf_describe_domain",
                        "greengrass_list_subscription_definitions",
                        "vpc_get_proxy_url_with_auth",
                        "autoscaling_enter_standby",
                        "codedeploy_add_tags_to_on_premises_instances",
                        "gamelift_put_scaling_policy",
                        "storagegateway_list_tags_for_resource",
                        "ec2_create_tags",
                        "discovery_describe_export_tasks",
                        "ec2_stop_instances",
                        "ec2_reset_network_interface_attribute",
                        "iam_list_group_policies",
                        "gamelift_update_game_session",
                        "vpc_modify_snapshot_attribute",
                        "sns_create_topic",
                        "iam_get_policy_version",
                        "organizations_disable_policy_type",
                        "cloudsearch_describe_scaling_parameters",
                        "ec2_create_volume",
                        "redshift_create_cluster_subnet_group",
                        "vpc_get_spot_price_history",
                        "opsworks_reboot_instance",
                        "iam_create_role",
                        "sqs_list_queues",
                        "sqs_delete_message_from_handle",
                        "ses_list_identities",
                        "vpc_handle_proxy",
                        "ec2_skip_proxy",
                        "apigateway_get_client_certificates",
                        "elb_create_load_balancer",
                        "apigateway_import_documentation_parts",
                        "ec2_describe_images",
                        "rds_skip_proxy",
                        "iam_create_virtual_mfa_device",
                        "logs_cancel_export_task",
                        "rds_reset_db_parameter_group",
                        "cloudhsm_list_available_zones",
                        "iam_generate_credential_report",
                        "support_create_case",
                        "codecommit_delete_repository",
                        "dax_update_parameter_group",
                        "iam_get_open_id_connect_provider",
                        "apigateway_update_method_response",
                        "autoscaling_describe_policies",
                        "snowball_describe_addresses",
                        "waf-regional_list_xss_match_sets",
                        "athena_stop_query_execution",
                        "route53domains_retrieve_domain_auth_code",
                        "cloudfront_get_distribution",
                        "snowball_get_job_unlock_code",
                        "rds_get_object",
                        "waf_get_rate_based_rule_managed_keys",
                        "rds_delete_db_cluster_snapshot",
                        "cloudfront_update_distribution",
                        "ec2_associate_route_table",
                        "mturk_get_hit",
                        "redshift_create_cluster_snapshot",
                        "es_update_elasticsearch_domain_config",
                        "ecs_delete_service",
                        "s3_head_object",
                        "vpc_get_all_key_pairs",
                        "es_remove_tags",
                        "vpc_get_all_classic_link_instances",
                        "vpc_get_path",
                        "iot_register_ca_certificate",
                        "rekognition_delete_collection",
                        "elbv2_delete_target_group",
                        "cf_update_stack",
                        "route53_create_hosted_zone",
                        "devicefarm_get_suite",
                        "vpc_disassociate_address",
                        "dms_describe_event_categories",
                        "ec2_disable_vpc_classic_link_dns_support",
                        "iam_create_service_specific_credential",
                        "greengrass_get_core_definition",
                        "vpc_get_all_customer_gateways",
                        "autoscaling_resume_processes",
                        "dynamodb_delete_table",
                        "ssm_create_activation",
                        "swf_request_cancel_workflow_execution",
                        "inspector_list_rules_packages",
                        "datapipeline_list_pipelines",
                        "datapipeline_activate_pipeline",
                        "dms_describe_orderable_replication_instances",
                        "cf_close",
                        "machinelearning_create_data_source_from_redshift",
                        "elbv2_describe_target_groups",
                        "devicefarm_get_project",
                        "snowball_list_clusters",
                        "ses_put_identity_policy",
                        "organizations_cancel_handshake",
                        "servicecatalog_search_products_as_admin",
                        "apigateway_create_model",
                        "xray_put_telemetry_records",
                        "elasticache_create_cache_cluster",
                        "ec2_close",
                        "kms_update_key_description",
                        "vpc_get_utf8_value",
                        "r53_proxy_ssl",
                        "kms_list_aliases",
                        "sdb_delete_domain",
                        "dms_describe_refresh_schemas_status",
                        "lambda_list_versions_by_function",
                        "kms_untag_resource",
                        "cloudformation_describe_change_set",
                        "dms_list_tags_for_resource",
                        "s3_get_bucket_lifecycle",
                        "ses_delete_verified_email_address",
                        "ec2_assign_private_ip_addresses",
                        "waf-regional_list_size_constraint_sets",
                        "vpc_associate_address",
                        "opsworks_describe_ecs_clusters",
                        "elasticbeanstalk_validate_configuration_settings",
                        "cloudformation_signal_resource",
                        "redshift_describe_tags",
                        "iot_describe_thing",
                        "logs_put_retention_policy",
                        "ecs_submit_container_state_change",
                        "discovery_create_tags",
                        "ec2_describe_internet_gateways",
                        "ssm_create_association",
                        "vpc_describe_reserved_instances_modifications",
                        "iam_list_policy_versions",
                        "vpc_delete_dhcp_options",
                        "waf_delete_ip_set",
                        "ec2_describe_spot_price_history",
                        "sns_delete_platform_application",
                        "ec2_proxy_ssl",
                        "vpc_associate_address_object",
                        "iam_make_request",
                        "cognito-identity_describe_identity",
                        "cognito-idp_list_user_pools",
                        "lightsail_create_domain_entry",
                        "storagegateway_list_local_disks",
                        "codedeploy_list_deployments",
                        "iam_get_login_profile",
                        "directconnect_describe_lags",
                        "storagegateway_update_gateway_information",
                        "cognito-sync_get_cognito_events",
                        "devicefarm_list_runs",
                        "glacier_list_parts",
                        "ec2_attach_internet_gateway",
                        "cloudwatch_put_metric_alarm",
                        "vpc_enable_vgw_route_propagation",
                        "redshift_describe_event_categories",
                        "clouddirectory_list_policy_attachments",
                        "logs_get_log_events",
                        "gamelift_describe_fleet_events",
                        "route53_update_traffic_policy_instance",
                        "autoscaling_suspend_processes",
                        "stepfunctions_describe_execution",
                        "elasticbeanstalk_update_application",
                        "opsworks_deregister_elastic_ip",
                        "s3_get_path",
                        "storagegateway_describe_nfs_file_shares",
                        "ec2_create_internet_gateway",
                        "config_describe_delivery_channel_status",
                        "devicefarm_list_device_pools",
                        "rds_reboot_dbinstance",
                        "gamelift_describe_game_session_details",
                        "config_stop_configuration_recorder",
                        "opsworks_grant_access",
                        "ec2_describe_vpc_peering_connections",
                        "cognito-idp_admin_disable_user",
                        "es_describe_elasticsearch_domain",
                        "opsworks_describe_stacks",
                        "budgets_update_notification",
                        "machinelearning_create_batch_prediction",
                        "waf_create_rule",
                        "emr_delete_security_configuration",
                        "iam_add_user_to_group",
                        "waf_get_byte_match_set",
                        "kms_get_parameters_for_import",
                        "ecs_describe_container_instances",
                        "iot-data_publish",
                        "sms_start_on_demand_replication_run",
                        "elasticbeanstalk_create_application_version",
                        "apigateway_get_export",
                        "iot_register_certificate",
                        "ec2_authorize_security_group_egress",
                        "cloudformation_create_change_set",
                        "vpc_get_all_addresses",
                        "cloudsearch_describe_suggesters",
                        "iam_set_default_policy_version",
                        "waf-regional_delete_ip_set",
                        "sqs_build_complex_list_params",
                        "waf-regional_delete_byte_match_set",
                        "elbv2_modify_target_group_attributes",
                        "stepfunctions_create_activity",
                        "organizations_create_organization",
                        "budgets_update_subscriber",
                        "workspaces_describe_workspaces",
                        "inspector_stop_assessment_run",
                        "cf_make_request",
                        "route53domains_enable_domain_auto_renew",
                        "iam_get_http_connection",
                        "elbv2_set_security_groups",
                        "ec2_delete_spot_datafeed_subscription",
                        "rds_purchase_reserved_db_instances_offering",
                        "ecs_list_task_definition_families",
                        "ec2_report_instance_status",
                        "iam_create_open_id_connect_provider",
                        "cognito-idp_describe_user_pool_client",
                        "glacier_initiate_multipart_upload",
                        "rds_proxy_ssl",
                        "iot_detach_principal_policy",
                        "ec2_detach_network_interface",
                        "ec2_get_proxy_url_with_auth",
                        "es_list_elasticsearch_versions",
                        "ses_delete_receipt_filter",
                        "ssm_list_commands",
                        "logs_describe_metric_filters",
                        "cognito-sync_set_cognito_events",
                        "redshift_get_cluster_credentials",
                        "rds_get_utf8_value",
                        "snowball_describe_address",
                        "polly_describe_voices",
                        "elasticache_delete_cache_cluster",
                        "lambda_get_event_source_mapping",
                        "lightsail_get_instance",
                        "iam_prefix_proxy_to_path",
                        "ds_enable_sso",
                        "cognito-sync_list_identity_pool_usage",
                        "apigateway_get_client_certificate",
                        "es_describe_elasticsearch_instance_type_limits",
                        "rds_handle_proxy",
                        "iam_delete_signing_cert",
                        "s3_head_bucket",
                        "kinesis_get_shard_iterator",
                        "workspaces_delete_tags",
                        "rds_remove_tags_from_resource",
                        "iam_upload_ssh_public_key",
                        "cognito-idp_create_user_pool_domain",
                        "ec2_delete_placement_group",
                        "vpc_modify_image_attribute",
                        "greengrass_get_subscription_definition",
                        "ssm_create_maintenance_window",
                        "health_describe_event_types",
                        "apigateway_put_integration",
                        "rds_modify_db_snapshot_attribute",
                        "ds_create_computer",
                        "datapipeline_describe_pipelines",
                        "lambda_update_alias",
                        "workdocs_delete_document",
                        "iam_detach_user_policy",
                        "ds_create_alias",
                        "opsworkscm_create_backup",
                        "pinpoint_get_import_job",
                        "cloudhsm_describe_hsm",
                        "stepfunctions_start_execution",
                        "vpc_get_all_subnets",
                        "sns_check_if_phone_number_is_opted_out",
                        "glacier_add_tags_to_vault",
                        "s3_delete_bucket_tagging",
                        "cognito-idp_list_user_import_jobs",
                        "devicefarm_delete_run",
                        "ec2_get_all_spot_instance_requests",
                        "config_describe_compliance_by_resource",
                        "apigateway_get_integration",
                        "kms_create_grant",
                        "storagegateway_delete_file_share",
                        "ssm_list_associations",
                        "ecs_put_attributes",
                        "mturk_update_hit_review_status",
                        "rds_get_all_logs",
                        "rds_delete_db_security_group",
                        "ssm_describe_maintenance_window_tasks",
                        "ds_register_event_topic",
                        "ec2_terminate_instances",
                        "workdocs_get_folder",
                        "iot_delete_registration_code",
                        "support_describe_attachment",
                        "storagegateway_create_snapshot",
                        "dms_modify_event_subscription",
                        "rds_stop_db_instance",
                        "vpc_get_all_instances",
                        "elasticache_delete_cache_subnet_group",
                        "logs_create_export_task",
                        "gamelift_delete_scaling_policy",
                        "vpc_create_snapshot",
                        "rds_describe_db_snapshot_attributes",
                        "emr_describe_job_flows",
                        "cognito-idp_admin_set_user_settings",
                        "directconnect_associate_connection_with_lag",
                        "s3_put_bucket_acl",
                        "machinelearning_create_ml_model",
                        "inspector_describe_resource_groups",
                        "s3_get_bucket_request_payment",
                        "r53_get_change",
                        "ec2_delete_network_interface",
                        "appstream_describe_images",
                        "devicefarm_list_projects",
                        "iam_get_all_user_policies",
                        "ssm_update_managed_instance_role",
                        "iot_list_principal_policies",
                        "emr_modify_instance_groups",
                        "lightsail_import_key_pair",
                        "cloudtrail_get_event_selectors",
                        "greengrass_get_function_definition",
                        "apigateway_update_rest_api",
                        "elasticache_describe_reserved_cache_nodes_offerings",
                        "cognito-idp_delete_identity_provider",
                        "gamelift_describe_runtime_configuration",
                        "vpc_get_all_snapshots",
                        "vpc_associate_route_table",
                        "codepipeline_delete_custom_action_type",
                        "ec2_get_all_placement_groups",
                        "route53_get_change",
                        "rds_remove_source_identifier_from_subscription",
                        "shield_create_subscription",
                        "route53_create_traffic_policy_instance",
                        "gamelift_describe_game_session_placement",
                        "cloudtrail_add_tags",
                        "lambda_update_function_code",
                        "devicefarm_get_upload",
                        "ec2_modify_volume_attribute",
                        "cloudformation_list_stack_resources",
                        "workdocs_update_user",
                        "clouddirectory_get_object_information",
                        "codepipeline_get_job_details",
                        "devicefarm_delete_remote_access_session",
                        "devicefarm_create_remote_access_session",
                        "apigateway_get_request_validator",
                        "efs_create_mount_target",
                        "cognito-idp_describe_user_import_job",
                        "cognito-idp_update_group",
                        "ssm_describe_maintenance_window_execution_task_invocations",
                        "elasticache_describe_cache_clusters",
                        "ec2_unmonitor_instance",
                        "vpc_make_request",
                        "sqs_get_proxy_auth_header",
                        "cognito-idp_admin_respond_to_auth_challenge",
                        "rds_add_source_identifier_to_subscription",
                        "machinelearning_add_tags",
                        "glacier_create_vault",
                        "ec2_delete_egress_only_internet_gateway",
                        "route53_list_traffic_policy_instances_by_hosted_zone",
                        "cognito-sync_list_datasets",
                        "ec2_reset_instance_attribute",
                        "lex-models_put_intent",
                        "elastictranscoder_update_pipeline_status",
                        "rekognition_compare_faces",
                        "kms_cancel_key_deletion",
                        "stepfunctions_get_execution_history",
                        "route53domains_enable_domain_transfer_lock",
                        "organizations_update_organizational_unit",
                        "dms_describe_replication_tasks",
                        "kms_generate_data_key_without_plaintext",
                        "iam_set_host_header",
                        "dynamodb_describe_limits",
                        "ssm_update_document_default_version",
                        "ds_delete_conditional_forwarder",
                        "organizations_list_create_account_status",
                        "iam_close",
                        "vpc_get_all_instance_types",
                        "cloudformation_describe_stacks",
                        "ec2_revoke_security_group_ingress",
                        "clouddirectory_delete_schema",
                        "devicefarm_list_jobs",
                        "greengrass_delete_logger_definition",
                        "es_add_tags",
                        "config_delete_delivery_channel",
                        "kinesis_delete_stream",
                        "elasticbeanstalk_abort_environment_update",
                        "devicefarm_list_offering_promotions",
                        "cloudhsm_list_hapgs",
                        "iam_get_signin_url",
                        "ecr_create_repository",
                        "elasticbeanstalk_create_application",
                        "es_describe_elasticsearch_domains",
                        "elasticbeanstalk_create_environment",
                        "lightsail_create_instance_snapshot",
                        "cloudtrail_lookup_events",
                        "storagegateway_create_tapes",
                        "cf_get_status",
                        "greengrass_update_core_definition",
                        "autoscaling_describe_auto_scaling_instances",
                        "cognito-idp_admin_update_user_attributes",
                        "ec2_create_spot_datafeed_subscription",
                        "cf_new_http_connection",
                        "iam_deactivate_mfa_device",
                        "application-autoscaling_describe_scaling_policies",
                        "route53domains_transfer_domain",
                        "waf-regional_disassociate_web_acl",
                        "appstream_describe_sessions",
                        "clouddirectory_untag_resource",
                        "autoscaling_describe_load_balancer_target_groups",
                        "kms_put_key_policy",
                        "kinesisanalytics_create_application",
                        "devicefarm_create_upload",
                        "codecommit_create_branch",
                        "ec2_describe_vpc_endpoint_services",
                        "elbv2_create_target_group",
                        "storagegateway_update_maintenance_start_time",
                        "iot_attach_thing_principal",
                        "devicefarm_list_remote_access_sessions",
                        "waf_create_sql_injection_match_set",
                        "greengrass_list_device_definitions",
                        "ssm_modify_document_permission",
                        "cloudfront_delete_streaming_distribution",
                        "cloudhsm_add_tags_to_resource",
                        "lightsail_get_operation",
                        "vpc_get_only_instances",
                        "stepfunctions_list_executions",
                        "lex-models_get_builtin_intents",
                        "r53_zone_add_cname",
                        "cognito-sync_unsubscribe_from_dataset",
                        "ssm_get_patch_baseline_for_patch_group",
                        "cognito-identity_list_identity_pools",
                        "route53domains_resend_contact_reachability_email",
                        "lex-models_get_intent_versions",
                        "emr_modify_instance_fleet",
                        "cloudsearch_delete_domain",
                        "ec2_get_all_reserved_instances_offerings",
                        "logs_test_metric_filter",
                        "s3_upload_part",
                        "events_disable_rule",
                        "dms_describe_schemas",
                        "s3_get_bucket_tagging",
                        "ec2_get_params",
                        "inspector_delete_assessment_target",
                        "rds_close",
                        "clouddirectory_list_directories",
                        "storagegateway_list_file_shares",
                        "cognito-idp_admin_add_user_to_group",
                        "devicefarm_get_device_pool_compatibility",
                        "s3_get_bucket_notification",
                        "lightsail_get_domain",
                        "ec2_describe_vpc_attribute",
                        "machinelearning_create_realtime_endpoint",
                        "ec2_get_all_reserved_instances",
                        "apigateway_update_method",
                        "cf_cancel_update_stack",
                        "elasticache_describe_cache_parameter_groups",
                        "greengrass_get_group",
                        "ec2_build_filter_params",
                        "vpc_server_name",
                        "vpc_unmonitor_instance",
                        "machinelearning_delete_tags",
                        "ec2_get_all_images",
                        "elasticache_describe_cache_security_groups",
                        "ec2_get_all_zones",
                        "storagegateway_add_upload_buffer",
                        "elasticbeanstalk_update_environment",
                        "sdb_put_attributes",
                        "gamelift_search_game_sessions",
                        "machinelearning_describe_batch_predictions",
                        "health_describe_event_details",
                        "ec2_get_all_regions",
                        "inspector_list_assessment_run_agents",
                        "appstream_create_fleet",
                        "kms_list_key_policies",
                        "s3_delete_object",
                        "ecs_update_container_agent",
                        "sqs_delete_message_batch",
                        "elb_detach_load_balancer_from_subnets",
                        "ec2_create_nat_gateway",
                        "servicecatalog_disassociate_product_from_portfolio",
                        "mturk_list_review_policy_results_for_hit",
                        "s3_list_bucket_inventory_configurations",
                        "route53_list_hosted_zones_by_name",
                        "inspector_add_attributes_to_findings",
                        "gamelift_start_game_session_placement",
                        "elbv2_set_subnets",
                        "kinesis_update_shard_count",
                        "glacier_get_vault_notifications",
                        "ds_cancel_schema_extension",
                        "swf_record_activity_task_heartbeat",
                        "ec2_build_configurations_param_list",
                        "inspector_list_assessment_targets",
                        "ec2_describe_prefix_lists",
                        "cognito-identity_list_identities",
                        "s3_delete_bucket_cors",
                        "vpc_confirm_product_instance",
                        "iot_update_certificate",
                        "organizations_attach_policy",
                        "events_list_targets_by_rule",
                        "s3_get_bucket_logging",
                        "pinpoint_create_campaign",
                        "opsworks_unassign_instance",
                        "route53domains_delete_tags_for_domain",
                        "r53_set_host_header",
                        "storagegateway_delete_tape_archive",
                        "ec2_detach_classic_link_vpc",
                        "s3_put_bucket_request_payment",
                        "codedeploy_get_deployment_instance",
                        "storagegateway_create_storedi_scsi_volume",
                        "iam_get_all_groups",
                        "cloudformation_execute_change_set",
                        "vpc_enable_vpc_classic_link",
                        "kinesis_split_shard",
                        "sqs_skip_proxy",
                        "datapipeline_query_objects",
                        "storagegateway_update_chap_credentials",
                        "opsworks_deregister_rds_db_instance",
                        "cloudsearch_delete_expression",
                        "iam_update_role_description",
                        "shield_describe_attack",
                        "workspaces_terminate_workspaces",
                        "machinelearning_update_ml_model",
                        "workdocs_get_folder_path",
                        "organizations_invite_account_to_organization",
                        "redshift_describe_reserved_node_offerings",
                        "sms_update_replication_job",
                        "sqs_get_all_queues",
                        "vpc_modify_instance_attribute",
                        "route53domains_update_domain_contact",
                        "vpc_build_filter_params",
                        "dms_modify_replication_task",
                        "iot_delete_thing_type",
                        "ssm_describe_instance_patch_states_for_patch_group",
                        "elasticbeanstalk_describe_environment_managed_actions",
                        "s3_prefix_proxy_to_path",
                        "batch_create_compute_environment",
                        "vpc_replace_route",
                        "rds_revoke_db_security_group_ingress",
                        "ec2_allocate_address",
                        "health_describe_affected_entities",
                        "sqs_close",
                        "redshift_copy_cluster_snapshot",
                        "ecr_upload_layer_part",
                        "ec2_import_volume",
                        "s3_get_bucket_analytics_configuration",
                        "glacier_initiate_vault_lock",
                        "lightsail_get_bundles",
                        "autoscaling_delete_auto_scaling_group",
                        "elasticbeanstalk_describe_environment_health",
                        "ec2_describe_network_interfaces",
                        "glacier_complete_vault_lock",
                        "rds_copy_db_snapshot",
                        "s3_generate_url_sigv4",
                        "elbv2_create_load_balancer",
                        "sqs_get_proxy_url_with_auth",
                        "lightsail_get_instance_port_states",
                        "vpc_get_image",
                        "iam_reset_service_specific_credential",
                        "ssm_describe_maintenance_windows",
                        "swf_respond_activity_task_failed",
                        "codecommit_batch_get_repositories",
                        "iam_get_status",
                        "rds_delete_db_subnet_group",
                        "config_get_compliance_details_by_resource",
                        "route53_change_resource_record_sets",
                        "codedeploy_list_application_revisions",
                        "opsworks_stop_instance",
                        "ec2_modify_network_interface_attribute",
                        "cf_get_http_connection",
                        "opsworks_register_elastic_ip",
                        "route53_create_traffic_policy",
                        "storagegateway_list_volume_recovery_points",
                        "iam_update_login_profile",
                        "lightsail_get_domains",
                        "glacier_describe_job",
                        "dax_reboot_node",
                        "route53domains_disable_domain_transfer_lock",
                        "cloudfront_list_tags_for_resource",
                        "snowball_update_job",
                        "lambda_add_permission",
                        "elastictranscoder_create_job",
                        "greengrass_get_function_definition_version",
                        "ses_describe_receipt_rule",
                        "iam_get_access_key_last_used",
                        "elasticache_list_tags_for_resource",
                        "rekognition_list_faces",
                        "vpc_create_network_acl",
                        "storagegateway_retrieve_tape_archive",
                        "s3_delete_object_tagging",
                        "r53_zone_get_cname",
                        "elastictranscoder_read_preset",
                        "opsworkscm_describe_backups",
                        "emr_list_security_configurations",
                        "route53_disassociate_vpc_from_hosted_zone",
                        "codedeploy_list_applications",
                        "swf_poll_for_decision_task",
                        "apigateway_update_integration",
                        "kinesisanalytics_stop_application",
                        "vpc_release_address",
                        "opsworks_describe_permissions",
                        "glacier_delete_vault_notifications",
                        "waf_delete_xss_match_set",
                        "rds_get_all_dbparameter_groups",
                        "redshift_describe_hsm_configurations",
                        "autoscaling_create_or_update_tags",
                        "waf_update_ip_set",
                        "elastictranscoder_read_job",
                        "sqs_proxy_ssl",
                        "gamelift_describe_scaling_policies",
                        "vpc_close",
                        "codepipeline_put_approval_result",
                        "organizations_describe_organizational_unit",
                        "lambda_get_function_configuration",
                        "apigateway_get_deployment",
                        "xray_batch_get_traces",
                        "greengrass_get_logger_definition_version",
                        "storagegateway_update_snapshot_schedule",
                        "ec2_request_spot_instances",
                        "storagegateway_set_local_console_password",
                        "cloudformation_delete_change_set",
                        "ec2_get_spot_datafeed_subscription",
                        "iam_delete_service_specific_credential",
                        "organizations_decline_handshake",
                        "lambda_update_function_configuration",
                        "s3_get_bucket_metrics_configuration",
                        "ec2_describe_addresses",
                        "waf-regional_update_sql_injection_match_set",
                        "apigateway_update_request_validator",
                        "elb_describe_load_balancers",
                        "clouddirectory_batch_read",
                        "config_delete_configuration_recorder",
                        "apigateway_delete_base_path_mapping",
                        "cognito-idp_get_csv_header",
                        "codepipeline_get_pipeline",
                        "workdocs_delete_comment",
                        "greengrass_delete_function_definition",
                        "codedeploy_delete_application",
                        "redshift_modify_cluster_subnet_group",
                        "vpc_get_all_tags",
                        "cognito-idp_forget_device",
                        "cf_get_template",
                        "waf-regional_get_byte_match_set",
                        "ec2_delete_route_table",
                        "organizations_create_account",
                        "logs_delete_destination",
                        "rds_revoke_dbsecurity_group",
                        "apigateway_get_method_response",
                        "autoscaling_create_launch_configuration",
                        "rds_download_db_log_file_portion",
                        "redshift_rotate_encryption_key",
                        "sms_get_replication_jobs",
                        "iam_create_policy_version",
                        "sdb_batch_delete_attributes",
                        "rds_describe_db_parameter_groups",
                        "gamelift_describe_build",
                        "s3_put_bucket_replication",
                        "clouddirectory_put_schema_from_json",
                        "support_describe_communications",
                        "ec2_describe_snapshot_attribute",
                        "s3_delete_bucket_inventory_configuration",
                        "pinpoint_update_apns_sandbox_channel",
                        "sqs_delete_message",
                        "ec2_set_host_header",
                        "cloudformation_get_template_summary",
                        "logs_create_log_stream",
                        "machinelearning_get_ml_model",
                        "storagegateway_cancel_retrieval",
                        "ses_send_raw_email",
                        "s3_set_request_hook",
                        "cloudsearch_describe_expressions",
                        "ec2_get_all_instances",
                        "cf_skip_proxy",
                        "directconnect_delete_lag",
                        "swf_count_pending_decision_tasks",
                        "iam_get_role_policy",
                        "cloudtrail_describe_trails",
                        "cloudsearch_update_scaling_parameters",
                        "lightsail_stop_instance",
                        "vpc_get_console_output",
                        "ec2_create_vpc",
                        "apigateway_update_base_path_mapping",
                        "ssm_put_parameter",
                        "lightsail_get_operations_for_resource",
                        "shield_describe_subscription",
                        "greengrass_update_device_definition",
                        "ec2_describe_instance_status",
                        "elbv2_delete_rule",
                        "dynamodb_tag_resource",
                        "ses_get_identity_policies",
                        "iam_delete_account_password_policy",
                        "opsworks_describe_commands",
                        "application-autoscaling_delete_scaling_policy",
                        "machinelearning_describe_tags",
                        "vpc_build_base_http_request",
                        "support_add_attachments_to_set",
                        "workdocs_describe_comments",
                        "ec2_get_console_screenshot",
                        "appstream_describe_fleets",
                        "ec2_attach_network_interface",
                        "ec2_describe_spot_fleet_instances",
                        "route53domains_update_domain_nameservers",
                        "iam_list_saml_providers",
                        "sqs_set_queue_attribute",
                        "sqs_purge_queue",
                        "greengrass_update_function_definition",
                        "r53_change_rrsets",
                        "greengrass_associate_role_to_group",
                        "waf-regional_get_xss_match_set",
                        "cloudfront_list_distributions_by_web_acl_id",
                        "waf-regional_list_rules",
                        "cognito-idp_describe_identity_provider",
                        "opsworks_describe_stack_provisioning_parameters",
                        "codestar_update_team_member",
                        "apigateway_create_api_key",
                        "set_hostname_cloud",
                        "s3_put_bucket_analytics_configuration",
                        "r53_zone_add_record",
                        "servicecatalog_create_portfolio_share",
                        "s3_delete_bucket_metrics_configuration",
                        "waf-regional_get_change_token",
                        "dax_delete_subnet_group",
                        "r53_zone_delete",
                        "elasticache_describe_cache_parameters",
                        "ssm_list_documents",
                        "ec2_delete_network_acl",
                        "route53_change_tags_for_resource",
                        "sms_get_connectors",
                        "support_describe_trusted_advisor_checks",
                        "opsworks_set_load_based_auto_scaling",
                        "cloudsearch_create_domain",
                        "xray_get_trace_graph",
                        "iot_list_outgoing_certificates",
                        "vpc_delete_route_table",
                        "iam_list_ssh_public_keys",
                        "lightsail_allocate_static_ip",
                        "s3_put_bucket_notification",
                        "rds_put_http_connection",
                        "ec2_create_vpn_connection",
                        "rds_delete_dbinstance",
                        "rds_set_host_header",
                        "iot_create_certificate_from_csr",
                        "opsworks_stop_stack",
                        "iam_get_account_password_policy",
                        "mturk_associate_qualification_with_worker",
                        "budgets_delete_notification",
                        "importexport_cancel_job",
                        "clouddirectory_create_schema",
                        "create_vm",
                        "ecr_batch_get_image",
                        "kinesisanalytics_start_application",
                        "cloudformation_describe_stack_resources",
                        "apigateway_delete_method",
                        "ecs_update_service",
                        "autoscaling_attach_instances",
                        "redshift_modify_cluster_parameter_group",
                        "ec2_authorize_security_group_deprecated",
                        "gamelift_update_fleet_port_settings",
                        "ec2_delete_internet_gateway",
                        "devicefarm_get_job",
                        "elastictranscoder_list_jobs_by_status",
                        "codecommit_update_repository_name",
                        "ec2_describe_spot_fleet_requests",
                        "glacier_set_data_retrieval_policy",
                        "efs_describe_file_systems",
                        "iam_build_list_params",
                        "sns_create_platform_endpoint",
                        "clouddirectory_attach_typed_link",
                        "servicecatalog_list_constraints_for_portfolio",
                        "ec2_get_all_security_groups",
                        "importexport_get_shipping_label",
                        "iot_list_policy_versions",
                        "snowball_get_job_manifest",
                        "inspector_remove_attributes_from_findings",
                        "pinpoint_create_import_job",
                        "vpc_run_instances",
                        "s3_get_bucket_notification_configuration",
                        "pinpoint_delete_event_stream",
                        "ec2_describe_volume_attribute",
                        "waf_create_rate_based_rule",
                        "ec2_unassign_private_ip_addresses",
                        "iam_update_saml_provider",
                        "workdocs_create_user",
                        "ses_delete_receipt_rule_set",
                        "ds_disable_sso",
                        "cloudtrail_list_tags",
                        "lightsail_get_instance_access_details",
                        "ec2_describe_classic_link_instances",
                        "vpc_cancel_reserved_instances_listing",
                        "organizations_create_policy",
                        "redshift_delete_cluster_security_group",
                        "machinelearning_delete_realtime_endpoint",
                        "ses_get_identity_mail_from_domain_attributes",
                        "storagegateway_delete_volume",
                        "discovery_disassociate_configuration_items_from_application",
                        "workspaces_describe_workspaces_connection_status",
                        "elbv2_deregister_targets",
                        "inspector_get_telemetry_metadata",
                        "ecr_delete_repository_policy",
                        "greengrass_get_subscription_definition_version",
                        "waf-regional_update_size_constraint_set",
                        "ec2_describe_reserved_instances_offerings",
                        "organizations_update_policy",
                        "iot_describe_certificate",
                        "workdocs_create_comment",
                        "s3_upload_file",
                        "gamelift_describe_game_session_queues",
                        "stepfunctions_delete_state_machine",
                        "waf-regional_list_ip_sets",
                        "lambda_publish_version",
                        "greengrass_list_group_certificate_authorities",
                        "dms_delete_certificate",
                        "snowball_list_jobs",
                        "directconnect_create_public_virtual_interface",
                        "elasticache_revoke_cache_security_group_ingress",
                        "stepfunctions_send_task_success",
                        "greengrass_create_group_version",
                        "vpc_create_vpn_connection",
                        "pinpoint_update_gcm_channel",
                        "ec2_unmonitor_instances",
                        "iam_handle_proxy",
                        "rds_describe_db_instances",
                        "ssm_get_parameters_by_path",
                        "r53_get_hosted_zone",
                        "cloudfront_get_invalidation",
                        "glacier_set_vault_access_policy",
                        "ssm_describe_available_patches",
                        "clouddirectory_detach_typed_link",
                        "vpc_set_host_header",
                        "ssm_describe_maintenance_window_execution_tasks",
                        "r53_make_request",
                        "kms_enable_key_rotation",
                        "iam_delete_user",
                        "codedeploy_get_deployment_config",
                        "pinpoint_get_sms_channel",
                        "storagegateway_create_snapshot_from_volume_recovery_point",
                        "swf_terminate_workflow_execution",
                        "apigateway_get_stages",
                        "sns_get_platform_application_attributes",
                        "config_put_config_rule",
                        "codepipeline_enable_stage_transition",
                        "iam_list_open_id_connect_providers",
                        "organizations_remove_account_from_organization",
                        "athena_get_named_query",
                        "ses_delete_configuration_set",
                        "redshift_describe_cluster_parameter_groups",
                        "elb_describe_account_limits",
                        "redshift_purchase_reserved_node_offering",
                        "s3_set_bucket_class",
                        "ec2_create_subnet",
                        "application-autoscaling_deregister_scalable_target",
                        "iam_create_instance_profile",
                        "ses_delete_identity_policy",
                        "cloudwatch_describe_alarms",
                        "machinelearning_delete_ml_model",
                        "ec2_get_all_tags",
                        "health_describe_events",
                        "iam_upload_server_certificate",
                        "codedeploy_stop_deployment",
                        "sdb_batch_put_attributes",
                        "s3_get_bucket_lifecycle_configuration",
                        "emr_describe_security_configuration",
                        "dynamodb_update_item",
                        "kms_retire_grant",
                        "cognito-idp_create_user_pool_client",
                        "greengrass_create_logger_definition_version",
                        "appstream_list_associated_fleets",
                        "codepipeline_put_third_party_job_success_result",
                        "storagegateway_start_gateway",
                        "elb_create_load_balancer_listeners",
                        "pinpoint_put_event_stream",
                        "devicefarm_get_offering_status",
                        "ec2_purchase_reserved_instances_offering",
                        "ec2_modify_vpc_peering_connection_options",
                        "resourcegroupstaggingapi_get_tag_keys",
                        "ssm_get_command_invocation",
                        "vpc_create_dhcp_options",
                        "sqs_put_http_connection",
                        "opsworks_describe_load_based_auto_scaling",
                        "iam_create_group",
                        "codedeploy_register_application_revision",
                        "kinesisanalytics_add_application_input",
                        "elb_apply_security_groups_to_load_balancer",
                        "clouddirectory_delete_facet",
                        "ec2_describe_image_attribute",
                        "waf-regional_get_size_constraint_set",
                        "dms_add_tags_to_resource",
                        "cloudwatch_describe_alarm_history",
                        "machinelearning_get_data_source",
                        "iam_update_server_certificate",
                        "ses_delete_configuration_set_event_destination",
                        "r53_get_zone",
                        "ec2_build_complex_list_params",
                        "iot_set_logging_options",
                        "inspector_update_assessment_target",
                        "appstream_expire_session",
                        "apigateway_get_base_path_mapping",
                        "pinpoint_get_application_settings",
                        "storagegateway_describe_upload_buffer",
                        "sns_get_subscription_attributes",
                        "glacier_upload_multipart_part",
                        "batch_delete_compute_environment",
                        "codedeploy_skip_wait_time_for_instance_termination",
                        "pinpoint_create_segment",
                        "gamelift_describe_fleet_attributes",
                        "ec2_create_image",
                        "lightsail_delete_domain",
                        "apigateway_get_documentation_versions",
                        "cognito-identity_update_identity_pool",
                        "iam_get_account_alias",
                        "machinelearning_create_data_source_from_s3",
                        "iam_simulate_principal_policy",
                        "vpc_delete_key_pair",
                        "cognito-idp_describe_user_pool",
                        "vpc_delete_vpn_gateway",
                        "greengrass_list_function_definitions",
                        "importexport_get_status",
                        "ds_list_tags_for_resource",
                        "clouddirectory_list_object_parent_paths",
                        "waf-regional_create_sql_injection_match_set",
                        "batch_submit_job",
                        "acm_list_tags_for_certificate",
                        "gamelift_describe_fleet_port_settings",
                        "opsworkscm_describe_account_attributes",
                        "r53_zone_update_cname",
                        "greengrass_create_subscription_definition_version",
                        "iam_upload_server_cert",
                        "elasticache_describe_cache_subnet_groups",
                        "ec2_describe_id_format",
                        "ec2_create_network_interface",
                        "polly_put_lexicon",
                        "waf-regional_delete_xss_match_set",
                        "ec2_run_instances",
                        "ec2_build_base_http_request",
                        "inspector_describe_findings",
                        "cognito-idp_get_group",
                        "rds_add_role_to_db_cluster",
                        "vpc_replace_network_acl_entry",
                        "vpc_create_network_acl_entry",
                        "vpc_get_snapshot_attribute",
                        "waf_get_change_token_status",
                        "clouddirectory_attach_object",
                        "r53_zone_delete_mx",
                        "elasticache_reboot_cache_cluster",
                        "datapipeline_remove_tags",
                        "vpc_reset_instance_attribute",
                        "events_delete_rule",
                        "elasticbeanstalk_describe_application_versions",
                        "acm_describe_certificate",
                        "sms_delete_server_catalog",
                        "iam_remove_user_from_group",
                        "ds_remove_ip_routes",
                        "ec2_monitor_instances",
                        "waf-regional_list_sql_injection_match_sets",
                        "stepfunctions_create_state_machine",
                        "redshift_describe_cluster_security_groups",
                        "lex-models_delete_slot_type_version",
                        "logs_tag_log_group",
                        "cloudformation_set_stack_policy",
                        "codecommit_list_repositories",
                        "support_describe_severity_levels",
                        "autoscaling_record_lifecycle_action_heartbeat",
                        "config_start_configuration_recorder",
                        "cognito-idp_update_identity_provider",
                        "ec2_delete_dhcp_options",
                        "dms_create_endpoint",
                        "iot_list_things",
                        "dynamodb_delete_item",
                        "ses_list_identity_policies",
                        "ssm_delete_document",
                        "rds_modify_dbinstance",
                        "meteringmarketplace_meter_usage",
                        "apigateway_delete_documentation_version",
                        "iam_delete_server_certificate",
                        "ec2_cancel_spot_fleet_requests",
                        "apigateway_update_deployment",
                        "opsworks_delete_stack",
                        "athena_delete_named_query",
                        "kinesisanalytics_add_application_reference_data_source",
                        "ec2_describe_vpn_gateways",
                        "inspector_describe_assessment_templates",
                        "ds_list_schema_extensions",
                        "route53domains_get_operation_detail",
                        "cf_set_host_header",
                        "lex-models_get_bot",
                        "iot_delete_ca_certificate",
                        "lightsail_peer_vpc",
                        "directconnect_describe_connections",
                        "sns_list_subscriptions",
                        "codecommit_get_commit",
                        "redshift_delete_snapshot_copy_grant",
                        "waf_update_byte_match_set",
                        "lex-models_delete_utterances",
                        "workdocs_describe_users",
                        "rds_reset_db_cluster_parameter_group",
                        "elasticbeanstalk_terminate_environment",
                        "directconnect_allocate_connection_on_interconnect",
                        "devicefarm_create_project",
                        "ec2_replace_iam_instance_profile_association",
                        "kms_generate_random",
                        "events_put_targets",
                        "elbv2_register_targets",
                        "autoscaling_put_scheduled_update_group_action",
                        "cloudformation_get_template",
                        "vpc_new_http_connection",
                        "elbv2_delete_load_balancer",
                        "gamelift_create_player_sessions",
                        "codedeploy_update_deployment_group",
                        "shield_delete_protection",
                        "cloudfront_create_distribution_with_tags",
                        "cognito-idp_initiate_auth",
                        "route53_list_health_checks",
                        "vpc_get_all_reservations",
                        "gamelift_create_alias",
                        "ec2_modify_image_attribute",
                        "dms_delete_replication_task",
                        "cloudtrail_update_trail",
                        "gamelift_delete_fleet",
                        "elasticache_modify_cache_cluster",
                        "lightsail_get_instance_snapshots",
                        "gamelift_get_instance_access",
                        "kinesisanalytics_list_applications",
                        "cognito-idp_start_user_import_job",
                        "s3_build_post_form_args",
                        "dynamodb_untag_resource",
                        "r53_server_name",
                        "storagegateway_refresh_cache",
                        "cloudfront_create_cloud_front_origin_access_identity",
                        "gamelift_update_fleet_capacity",
                        "pinpoint_delete_segment",
                        "vpc_terminate_instances",
                        "vpc_disassociate_network_acl",
                        "stepfunctions_send_task_failure",
                        "iam_get_proxy_auth_header",
                        "opsworks_clone_stack",
                        "ssm_update_association",
                        "pinpoint_get_segment_versions",
                        "waf_delete_web_acl",
                        "directconnect_delete_virtual_interface",
                        "redshift_delete_cluster_parameter_group",
                        "workdocs_deactivate_user",
                        "es_delete_elasticsearch_domain",
                        "redshift_delete_cluster",
                        "elasticache_authorize_cache_security_group_ingress",
                        "sqs_get_http_connection",
                        "ec2_delete_customer_gateway",
                        "opsworks_describe_raid_arrays",
                        "elasticbeanstalk_request_environment_info",
                        "cloudfront_list_streaming_distributions",
                        "vpc_bundle_instance",
                        "cloudfront_create_invalidation",
                        "workdocs_describe_root_folders",
                        "redshift_reset_cluster_parameter_group",
                        "cognito-sync_describe_dataset",
                        "ec2_modify_id_format",
                        "ec2_get_host_reservation_purchase_preview",
                        "stepfunctions_send_task_heartbeat",
                        "s3_skip_proxy",
                        "emr_remove_auto_scaling_policy",
                        "kms_delete_imported_key_material",
                        "storagegateway_activate_gateway",
                        "r53_zone_get_records",
                        "vpc_create_route_table",
                        "ses_list_configuration_sets",
                        "rekognition_search_faces_by_image",
                        "apigateway_update_api_key",
                        "logs_delete_log_stream",
                        "lex-models_put_bot",
                        "iam_add_role_to_instance_profile",
                        "ec2_modify_spot_fleet_request",
                        "datapipeline_validate_pipeline_definition",
                        "vpc_monitor_instance",
                        "cognito-idp_sign_up",
                        "ec2_modify_reserved_instances",
                        "dax_delete_cluster",
                        "autoscaling_describe_scheduled_actions",
                        "vpc_get_volume_attribute",
                        "waf-regional_get_web_acl",
                        "lex-models_create_slot_type_version",
                        "machinelearning_predict",
                        "ec2_cancel_export_task",
                        "machinelearning_create_data_source_from_rds",
                        "rds_create_db_instance_read_replica",
                        "ec2_associate_dhcp_options",
                        "emr_set_termination_protection",
                        "ssm_list_tags_for_resource",
                        "apigateway_put_rest_api",
                        "lex-models_delete_bot_channel_association",
                        "ec2_cancel_conversion_task",
                        "apigateway_update_usage_plan",
                        "ssm_put_inventory",
                        "iot_create_policy",
                        "rds_describe_reserved_db_instances",
                        "sqs_set_host_header",
                        "servicecatalog_update_constraint",
                        "efs_describe_mount_target_security_groups",
                        "apigateway_update_stage",
                        "cognito-idp_confirm_forgot_password",
                        "cloudsearchdomain_suggest",
                        "apigateway_get_sdk",
                        "lightsail_create_domain",
                        "elb_set_load_balancer_policies_for_backend_server",
                        "emr_create_security_configuration",
                        "dms_modify_endpoint",
                        "waf_update_xss_match_set",
                        "machinelearning_create_evaluation",
                        "elb_create_load_balancer_policy",
                        "ec2_associate_iam_instance_profile",
                        "clouddirectory_remove_facet_from_object",
                        "workdocs_update_folder",
                        "appstream_start_fleet",
                        "vpc_get_all_vpc_peering_connections",
                        "ec2_describe_spot_fleet_request_history",
                        "ecr_set_repository_policy",
                        "servicecatalog_search_products",
                        "opsworkscm_describe_node_association_status",
                        "pinpoint_get_segment_import_jobs",
                        "apigateway_get_authorizers",
                        "swf_describe_activity_type",
                        "ec2_describe_security_groups",
                        "cloudformation_list_change_sets",
                        "ses_set_identity_headers_in_notifications_enabled",
                        "apigateway_get_usage_plan",
                        "sqs_build_base_http_request",
                        "vpc_cancel_bundle_task",
                        "glacier_list_multipart_uploads",
                        "mturk_list_workers_with_qualification_type",
                        "shield_create_protection",
                        "waf_list_rate_based_rules",
                        "lightsail_create_instances",
                        "cloudhsm_create_hsm",
                        "apigateway_get_usage_plans",
                        "ec2_run_scheduled_instances",
                        "apigateway_import_rest_api",
                        "cognito-idp_admin_get_user",
                        "machinelearning_update_data_source",
                        "athena_create_named_query",
                        "dax_create_subnet_group",
                        "waf-regional_update_byte_match_set",
                        "iam_add_client_id_to_open_id_connect_provider",
                        "servicecatalog_associate_principal_with_portfolio",
                        "kinesis_decrease_stream_retention_period",
                        "greengrass_list_deployments",
                        "greengrass_get_service_role_for_account",
                        "swf_count_closed_workflow_executions",
                        "opsworkscm_describe_events",
                        "servicecatalog_describe_product_as_admin",
                        "waf-regional_get_rule",
                        "ec2_delete_route",
                        "opsworks_update_volume",
                        "vpc_detach_network_interface",
                        "ec2_assign_ipv6_addresses",
                        "codedeploy_deregister_on_premises_instance",
                        "inspector_list_assessment_runs",
                        "logs_put_metric_filter",
                        "ec2_create_egress_only_internet_gateway",
                        "iam_list_instance_profiles_for_role",
                        "servicecatalog_terminate_provisioned_product",
                        "waf_list_sql_injection_match_sets",
                        "clouddirectory_list_development_schema_arns",
                        "config_get_compliance_details_by_config_rule",
                        "sns_list_topics",
                        "ecs_create_service",
                        "ecs_register_task_definition",
                        "elasticache_delete_cache_parameter_group",
                        "ec2_describe_volumes_modifications",
                        "workdocs_create_labels",
                        "codedeploy_get_application",
                        "iam_get_account_summary",
                        "servicecatalog_update_provisioned_product",
                        "iam_delete_server_cert",
                        "config_describe_config_rules",
                        "datapipeline_poll_for_task",
                        "ssm_start_automation_execution",
                        "vpc_create_key_pair",
                        "codedeploy_register_on_premises_instance",
                        "r53_build_base_http_request",
                        "devicefarm_delete_device_pool",
                        "elbv2_add_tags",
                        "rds_restore_dbinstance_from_dbsnapshot",
                        "cognito-identity_describe_identity_pool",
                        "vpc_create_vpc_peering_connection",
                        "iam_get_instance_profile",
                        "kinesisanalytics_add_application_output",
                        "athena_list_named_queries",
                        "lightsail_delete_instance",
                        "opsworks_describe_time_based_auto_scaling",
                        "efs_describe_tags",
                        "elastictranscoder_list_pipelines",
                        "greengrass_associate_service_role_to_account",
                        "codestar_describe_user_profile",
                        "cloudsearch_describe_index_fields",
                        "vpc_detach_classic_link_vpc",
                        "vpc_create_image",
                        "ses_create_receipt_rule",
                        "appstream_delete_stack",
                        "clouddirectory_list_applied_schema_arns",
                        "organizations_describe_handshake",
                        "vpc_request_spot_instances",
                        "swf_count_open_workflow_executions",
                        "clouddirectory_publish_schema",
                        "storagegateway_delete_chap_credentials",
                        "iam_resync_mfa_device",
                        "r53_zone_find_records",
                        "s3_abort_multipart_upload",
                        "greengrass_create_deployment",
                        "ec2_get_image_attribute",
                        "codepipeline_update_pipeline",
                        "cognito-idp_admin_create_user",
                        "autoscaling_complete_lifecycle_action",
                        "gamelift_update_runtime_configuration",
                        "servicecatalog_list_launch_paths",
                        "s3_lookup",
                        "glacier_abort_vault_lock",
                        "efs_delete_file_system",
                        "glacier_describe_vault",
                        "apigateway_get_method",
                        "waf-regional_delete_sql_injection_match_set",
                        "pinpoint_get_segment_version",
                        "kms_list_keys",
                        "ssm_delete_patch_baseline",
                        "vpc_get_all_reserved_instances_offerings",
                        "iot_list_certificates_by_ca",
                        "ec2_get_all_bundle_tasks",
                        "r53_get_list_health_checks",
                        "r53_get_path",
                        "clouddirectory_create_object",
                        "es_list_tags",
                        "rds_create_dbinstance",
                        "cloudformation_get_stack_policy",
                        "s3_get_bucket_inventory_configuration",
                        "vpc_get_all_ramdisks",
                        "vpc_get_all_spot_instance_requests",
                        "elb_describe_instance_health",
                        "iam_delete_group_policy",
                        "cognito-idp_describe_user_pool_domain",
                        "codestar_delete_user_profile",
                        "workdocs_get_document",
                        "elb_describe_tags",
                        "ecs_describe_clusters",
                        "clouddirectory_list_outgoing_typed_links",
                        "kinesisanalytics_describe_application",
                        "elbv2_create_listener",
                        "opsworks_delete_user_profile",
                        "s3_put_bucket_metrics_configuration",
                        "ec2_describe_vpc_classic_link_dns_support",
                        "cf_get_proxy_auth_header",
                        "iam_remove_client_id_from_open_id_connect_provider",
                        "opsworks_create_user_profile",
                        "r53_set_request_hook",
                        "emr_list_clusters",
                        "logs_list_tags_log_group",
                        "servicecatalog_describe_record",
                        "iot_get_logging_options",
                        "route53_list_hosted_zones",
                        "vpc_get_all_instance_status",
                        "s3_delete_bucket_website",
                        "lex-models_get_bots",
                        "waf_list_ip_sets",
                        "codepipeline_disable_stage_transition",
                        "iam_change_password",
                        "ecr_complete_layer_upload",
                        "ec2_make_request",
                        "ses_create_receipt_filter",
                        "codedeploy_get_deployment",
                        "ec2_get_all_classic_link_instances",
                        "config_put_configuration_recorder",
                        "acm_get_certificate",
                        "rds_create_event_subscription",
                        "ec2_authorize_security_group",
                        "vpc_delete_volume",
                        "ssm_get_parameters",
                        "ec2_create_snapshot",
                        "glacier_delete_archive",
                        "redshift_describe_events",
                        "sns_delete_topic",
                        "rds_build_list_params",
                        "ecr_describe_repositories",
                        "kinesis_describe_limits",
                        "cognito-idp_stop_user_import_job",
                        "rds_delete_db_parameter_group",
                        "ec2_describe_instance_attribute",
                        "apigateway_get_request_validators",
                        "lightsail_delete_domain_entry",
                        "support_describe_services",
                        "sqs_delete_queue",
                        "storagegateway_update_bandwidth_rate_limit",
                        "vpc_authorize_security_group",
                        "autoscaling_disable_metrics_collection",
                        "storagegateway_describe_tape_recovery_points",
                        "cloudhsm_describe_luna_client",
                        "kinesis_list_streams",
                        "elb_set_load_balancer_listener_ssl_certificate",
                        "waf_update_size_constraint_set",
                        "polly_delete_lexicon",
                        "redshift_enable_snapshot_copy",
                        "rds_get_path",
                        "swf_signal_workflow_execution",
                        "devicefarm_stop_remote_access_session",
                        "route53domains_list_operations",
                        "ec2_disable_vpc_classic_link",
                        "shield_list_protections",
                        "cf_list_stacks",
                        "ssm_update_association_status",
                        "kms_schedule_key_deletion",
                        "codedeploy_batch_get_applications",
                        "events_enable_rule",
                        "glacier_list_jobs",
                        "elasticache_create_cache_subnet_group",
                        "greengrass_list_core_definition_versions",
                        "rds_delete_db_snapshot",
                        "cloudwatch_describe_alarms_for_metric",
                        "ec2_delete_vpn_connection_route",
                        "devicefarm_create_network_profile",
                        "apigateway_update_account",
                        "discovery_stop_data_collection_by_agent_ids",
                        "redshift_describe_clusters",
                        "acm_request_certificate",
                        "elastictranscoder_cancel_job",
                        "ec2_create_network_acl",
                        "ec2_replace_network_acl_association",
                        "lightsail_get_key_pair",
                        "kinesis_merge_shards",
                        "route53_get_health_check_last_failure_reason",
                        "dynamodb_batch_write_item",
                        "vpc_get_http_connection",
                        "budgets_describe_budget",
                        "datapipeline_get_pipeline_definition",
                        "cognito-idp_admin_delete_user_attributes",
                        "inspector_create_resource_group",
                        "servicecatalog_describe_constraint",
                        "swf_register_activity_type",
                        "opsworks_create_stack",
                        "clouddirectory_add_facet_to_object",
                        "ses_verify_email_address",
                        "cur_put_report_definition",
                        "mturk_delete_worker_block",
                        "stepfunctions_list_state_machines",
                        "r53_zone_get_a",
                        "iot_create_keys_and_certificate",
                        "cloudformation_update_stack",
                        "route53_delete_traffic_policy_instance",
                        "route53domains_view_billing",
                        "waf-regional_get_rate_based_rule_managed_keys",
                        "iot_describe_endpoint",
                        "dms_create_replication_subnet_group",
                        "ec2_enable_volume_io",
                        "iam_proxy_ssl",
                        "config_delete_evaluation_results",
                        "servicecatalog_provision_product",
                        "waf_create_size_constraint_set",
                        "servicecatalog_list_portfolio_access",
                        "sts_get_caller_identity",
                        "apigateway_get_resources",
                        "cloudfront_tag_resource",
                        "ssm_deregister_patch_baseline_for_patch_group",
                        "iam_attach_group_policy",
                        "cloudformation_estimate_template_cost",
                        "dms_test_connection",
                        "ec2_import_key_pair",
                        "apigateway_update_domain_name",
                        "dynamodb_scan",
                        "devicefarm_list_unique_problems",
                        "ses_update_configuration_set_event_destination",
                        "vpc_delete_vpn_connection",
                        "lex-models_create_bot_version",
                        "cf_handle_proxy",
                        "storagegateway_add_tags_to_resource",
                        "elasticache_create_cache_parameter_group",
                        "emr_list_instance_groups",
                        "rds_delete_dbsnapshot",
                        "iot_disable_topic_rule",
                        "cf_proxy_ssl",
                        "greengrass_create_device_definition_version",
                        "stepfunctions_describe_activity",
                        "vpc_get_all_reserved_instances",
                        "clouddirectory_attach_policy",
                        "vpc_get_all_zones",
                        "ec2_release_address",
                        "lambda_list_functions",
                        "cognito-idp_get_user",
                        "opsworks_delete_layer",
                        "vpc_associate_dhcp_options",
                        "lex-models_get_bot_versions",
                        "sns_get_topic_attributes",
                        "ecs_list_container_instances",
                        "sns_get_sms_attributes",
                        "ec2_attach_volume",
                        "config_deliver_config_snapshot",
                        "vpc_build_complex_list_params",
                        "organizations_list_accounts_for_parent",
                        "lambda_get_alias",
                        "servicecatalog_delete_portfolio",
                        "servicecatalog_accept_portfolio_share",
                        "kinesis_put_record",
                        "s3_restore_object",
                        "clouddirectory_list_object_attributes",
                        "application-autoscaling_register_scalable_target",
                        "servicecatalog_create_product",
                        "autoscaling_delete_lifecycle_hook",
                        "route53_list_tags_for_resource",
                        "cloudtrail_delete_trail",
                        "support_describe_trusted_advisor_check_summaries",
                        "storagegateway_update_gateway_software_now",
                        "appstream_disassociate_fleet",
                        "mturk_get_qualification_score",
                        "ec2_monitor_instance",
                        "clouddirectory_batch_write",
                        "clouddirectory_get_schema_as_json",
                        "s3_get_all_buckets",
                        "directconnect_delete_interconnect",
                        "vpc_delete_customer_gateway",
                        "cognito-idp_create_user_pool",
                        "rds_get_proxy_url_with_auth",
                        "clouddirectory_delete_directory",
                        "ec2_get_password_data",
                        "dynamodb_batch_get_item",
                        "cf_build_complex_list_params",
                        "swf_list_open_workflow_executions",
                        "inspector_set_tags_for_resource",
                        "ses_send_bounce",
                        "ssm_get_maintenance_window",
                        "r53_zone_delete_a",
                        "datapipeline_report_task_progress",
                        "devicefarm_list_network_profiles",
                        "batch_describe_job_definitions",
                        "vpc_stop_instances",
                        "ec2_get_snapshot_attribute",
                        "rekognition_detect_moderation_labels",
                        "elasticbeanstalk_describe_configuration_settings",
                        "s3_put_bucket_policy",
                        "efs_describe_mount_targets",
                        "dax_describe_events",
                        "pinpoint_delete_gcm_channel",
                        "redshift_authorize_snapshot_access",
                        "sns_get_endpoint_attributes",
                        "route53_get_health_check_status",
                        "vpc_reject_vpc_peering_connection",
                        "ec2_get_all_volumes",
                        "iot_delete_certificate",
                        "elbv2_describe_listeners",
                        "elasticbeanstalk_describe_configuration_options",
                        "vpc_deregister_image",
                        "s3_get_bucket_location",
                        "elbv2_delete_listener",
                        "s3_get_bucket_acl",
                        "rds_create_db_cluster_parameter_group",
                        "ses_update_receipt_rule",
                        "ec2_move_address_to_vpc",
                        "lex-models_get_utterances_view",
                        "ec2_describe_iam_instance_profile_associations",
                        "greengrass_update_logger_definition",
                        "codestar_update_user_profile",
                        "dms_delete_replication_instance",
                        "ses_clone_receipt_rule_set",
                        "storagegateway_describe_chap_credentials",
                        "storagegateway_create_nfs_file_share",
                        "clouddirectory_list_typed_link_facet_attributes",
                        "ssm_get_parameter",
                        "apigateway_get_models",
                        "codestar_list_resources",
                        "apigateway_get_domain_names",
                        "dynamodb_update_time_to_live",
                        "greengrass_list_device_definition_versions",
                        "rds_delete_db_instance",
                        "config_get_compliance_summary_by_resource_type",
                        "cognito-identity_unlink_developer_identity",
                        "vpc_authorize_security_group_deprecated",
                        "rds_describe_option_group_options",
                        "codecommit_get_branch",
                        "elbv2_modify_load_balancer_attributes",
                        "ec2_create_customer_gateway",
                        "lex-models_get_intent",
                        "s3_put_bucket_logging",
                        "apigateway_create_stage",
                        "cf_delete_stack",
                        "redshift_describe_snapshot_copy_grants",
                        "ssm_delete_parameter",
                        "cloudfront_create_distribution",
                        "opsworkscm_update_server",
                        "vpc_create_tags",
                        "vpc_get_status",
                        "opsworks_assign_volume",
                        "vpc_disable_vpc_classic_link",
                        "ec2_request_spot_fleet",
                        "rds_get_all_dbsecurity_groups",
                        "vpc_get_all_vpn_gateways",
                        "discovery_delete_applications",
                        "ssm_cancel_command",
                        "vpc_delete_vpc",
                        "clouddirectory_create_index",
                        "sns_opt_in_phone_number",
                        "pinpoint_get_import_jobs",
                        "sdb_get_attributes",
                        "gamelift_update_build",
                        "lightsail_attach_static_ip",
                        "elbv2_describe_load_balancer_attributes",
                        "ssm_get_document",
                        "dax_update_cluster",
                        "redshift_modify_cluster_iam_roles",
                        "cognito-sync_get_identity_pool_configuration",
                        "ec2_release_hosts",
                        "storagegateway_delete_tape",
                        "discovery_get_discovery_summary",
                        "cloudhsm_remove_tags_from_resource",
                        "organizations_create_organizational_unit",
                        "apigateway_get_usage_plan_keys",
                        "greengrass_delete_device_definition",
                        "ec2_delete_snapshot",
                        "cognito-idp_admin_reset_user_password",
                        "config_start_config_rules_evaluation",
                        "s3_get_canonical_user_id",
                        "efs_create_tags",
                        "ds_add_ip_routes",
                        "elasticache_describe_cache_engine_versions",
                        "lambda_create_alias",
                        "rds_get_http_connection",
                        "codepipeline_put_job_success_result",
                        "route53_update_health_check",
                        "gamelift_describe_ec2_instance_limits",
                        "ec2_describe_regions",
                        "cloudsearchdomain_search",
                        "ec2_describe_volume_status",
                        "vpc_allocate_address",
                        "sqs_make_request",
                        "lightsail_create_key_pair",
                        "vpc_get_all_vpcs",
                        "autoscaling_describe_launch_configurations",
                        "events_describe_rule",
                        "vpc_create_network_interface",
                        "vpc_revoke_security_group_egress",
                        "iam_get_policy",
                        "config_list_discovered_resources",
                        "kms_revoke_grant",
                        "sqs_get_queue_attributes",
                        "iot_create_policy_version",
                        "devicefarm_get_device_pool",
                        "codestar_delete_project",
                        "rds_get_list",
                        "ec2_new_http_connection",
                        "ecr_get_authorization_token",
                        "workspaces_modify_workspace_properties",
                        "dms_delete_event_subscription",
                        "route53domains_disable_domain_auto_renew",
                        "ec2_modify_identity_id_format",
                        "cloudsearch_describe_analysis_schemes",
                        "apigateway_create_documentation_part",
                        "elasticbeanstalk_describe_applications",
                        "sns_publish",
                        "ses_get_identity_verification_attributes",
                        "directconnect_describe_virtual_interfaces",
                        "apigateway_get_account",
                        "glacier_upload_archive",
                        "s3_list_bucket_metrics_configurations",
                        "clouddirectory_list_object_children",
                        "route53domains_register_domain",
                        "waf-regional_get_sampled_requests",
                        "workdocs_delete_folder_contents",
                        "storagegateway_list_volume_initiators",
                        "batch_describe_compute_environments",
                        "lex-models_delete_slot_type",
                        "cloudformation_list_exports",
                        "waf_update_web_acl",
                        "ecs_deregister_task_definition",
                        "mturk_create_additional_assignments_for_hit",
                        "cf_get_path",
                        "clouddirectory_get_typed_link_facet_information",
                        "cognito-idp_update_user_attributes",
                        "rds_revoke_security_group",
                        "directconnect_allocate_public_virtual_interface",
                        "cognito-idp_forgot_password",
                        "greengrass_create_function_definition_version",
                        "greengrass_get_device_definition_version",
                        "ec2_modify_vpc_attribute",
                        "autoscaling_delete_notification_configuration",
                        "elbv2_modify_target_group",
                        "workdocs_get_document_path",
                        "apigateway_create_rest_api",
                        "iot_transfer_certificate",
                        "kinesis_disable_enhanced_monitoring",
                        "rds_create_db_snapshot",
                        "s3_put_bucket_notification_configuration",
                        "cf_get_stack_policy",
                        "vpc_get_all_vpn_connections",
                        "lex-models_get_bot_alias",
                        "sts_get_session_token",
                        "r53_get_proxy_auth_header",
                        "codestar_list_user_profiles",
                        "iam_simulate_custom_policy",
                        "machinelearning_get_evaluation",
                        "budgets_delete_subscriber",
                        "iam_list_virtual_mfa_devices",
                        "opsworks_create_layer",
                        "iot_list_certificates",
                        "ec2_get_object",
                        "autoscaling_execute_policy",
                        "directconnect_tag_resource",
                        "batch_update_compute_environment",
                        "s3_put_http_connection",
                        "apigateway_get_deployments",
                        "rds_create_option_group",
                        "iot_set_default_policy_version",
                        "waf_update_rate_based_rule",
                        "organizations_enable_policy_type",
                        "discovery_start_data_collection_by_agent_ids",
                        "destroy_vm",
                        "cloudformation_continue_update_rollback",
                        "elasticbeanstalk_delete_configuration_template",
                        "mturk_list_qualification_requests",
                        "elasticbeanstalk_create_configuration_template",
                        "ec2_register_image",
                        "rds_get_status",
                        "emr_set_visible_to_all_users",
                        "cognito-idp_list_groups",
                        "rds_get_all_dbinstances",
                        "clouddirectory_list_object_parents",
                        "autoscaling_exit_standby",
                        "ssm_register_target_with_maintenance_window",
                        "emr_list_steps",
                        "directconnect_describe_connection_loa",
                        "logs_untag_log_group",
                        "ec2_describe_availability_zones",
                        "vpc_get_all_security_groups",
                        "sqs_receive_message",
                        "route53_delete_health_check",
                        "ses_create_configuration_set_event_destination",
                        "ssm_add_tags_to_resource",
                        "emr_add_instance_groups",
                        "elasticbeanstalk_delete_application",
                        "r53_zone_update_record",
                        "vpc_create_customer_gateway",
                        "storagegateway_list_volumes",
                        "sns_set_topic_attributes",
                        "route53_list_tags_for_resources",
                        "cognito-sync_describe_identity_pool_usage",
                        "elbv2_describe_load_balancers",
                        "ec2_get_all_key_pairs",
                        "ec2_create_vpn_connection_route",
                        "vpc_create_security_group",
                        "codebuild_batch_get_builds",
                        "greengrass_create_core_definition_version",
                        "directconnect_create_interconnect",
                        "cf_put_http_connection",
                        "glacier_get_job_output",
                        "iam_get_credential_report",
                        "marketplacecommerceanalytics_generate_data_set",
                        "ec2_delete_flow_logs",
                        "opsworks_update_elastic_ip",
                        "cognito-idp_delete_user",
                        "glacier_initiate_job",
                        "servicecatalog_delete_provisioning_artifact",
                        "dynamodb_get_item",
                        "cloudfront_create_streaming_distribution_with_tags",
                        "iot_accept_certificate_transfer",
                        "lambda_invoke_async",
                        "storagegateway_describe_storedi_scsi_volumes",
                        "ec2_describe_dhcp_options",
                        "ec2_describe_vpcs",
                        "pinpoint_update_email_channel",
                        "ds_create_snapshot",
                        "appstream_update_stack",
                        "vpc_attach_volume",
                        "lightsail_close_instance_public_ports",
                        "organizations_describe_create_account_status",
                        "redshift_create_hsm_configuration",
                        "datapipeline_evaluate_expression",
                        "waf-regional_get_sql_injection_match_set",
                        "apigateway_create_request_validator",
                        "cognito-sync_bulk_publish",
                        "ec2_describe_spot_datafeed_subscription",
                        "elastictranscoder_update_pipeline_notifications",
                        "ec2_delete_vpc_endpoints",
                        "ssm_get_maintenance_window_execution_task",
                        "machinelearning_delete_data_source",
                        "redshift_describe_event_subscriptions",
                        "gamelift_create_player_session",
                        "route53domains_update_domain_contact_privacy",
                        "lambda_invoke",
                        "elasticache_purchase_reserved_cache_nodes_offering",
                        "workdocs_describe_resource_permissions",
                        "kms_list_retirable_grants",
                        "codebuild_start_build",
                        "clouddirectory_create_typed_link_facet",
                        "ec2_describe_key_pairs",
                        "lightsail_detach_static_ip",
                        "iam_put_user_policy",
                        "autoscaling_delete_policy",
                        "dax_describe_parameters",
                        "codestar_create_project",
                        "appstream_describe_stacks",
                        "ec2_disassociate_subnet_cidr_block",
                        "ec2_server_name",
                        "rds_describe_events",
                        "sqs_get_path",
                        "cloudsearch_delete_suggester",
                        "ec2_describe_volumes",
                        "lambda_delete_event_source_mapping",
                        "ec2_confirm_product_instance",
                        "s3_get_http_connection",
                        "elasticache_modify_cache_parameter_group",
                        "cognito-idp_create_user_import_job",
                        "gamelift_describe_fleet_utilization",
                        "pinpoint_update_campaign",
                        "s3_get_object_acl",
                        "ec2_associate_address",
                        "gamelift_list_fleets",
                        "sns_list_platform_applications",
                        "pinpoint_get_segment",
                        "cloudtrail_start_logging",
                        "rds_authorize_dbsecurity_group",
                        "opsworks_describe_agent_versions",
                        "ec2_modify_volume",
                        "vpc_delete_network_acl",
                        "servicecatalog_update_provisioning_artifact",
                        "servicecatalog_scan_provisioned_products",
                        "s3_delete_bucket_lifecycle",
                        "waf_list_xss_match_sets",
                        "workdocs_remove_all_resource_permissions",
                        "vpc_skip_proxy",
                        "cognito-idp_delete_user_attributes",
                        "cognito-identity_get_credentials_for_identity",
                        "discovery_describe_export_configurations",
                        "s3_copy_object",
                        "dax_tag_resource",
                        "organizations_list_targets_for_policy",
                        "ecs_stop_task",
                        "workdocs_abort_document_version_upload",
                        "rds_remove_role_from_db_cluster",
                        "cf_build_base_http_request",
                        "ecs_update_container_instances_state",
                        "importexport_update_job",
                        "lightsail_release_static_ip",
                        "codepipeline_put_action_revision",
                        "cognito-idp_get_device",
                        "elasticache_test_failover",
                        "lex-models_get_builtin_intent",
                        "ssm_get_inventory",
                        "xray_get_service_graph",
                        "dms_describe_event_subscriptions",
                        "rds_modify_db_parameter_group",
                        "glacier_abort_multipart_upload",
                        "workspaces_describe_workspace_bundles",
                        "cognito-idp_add_custom_attributes",
                        "redshift_authorize_cluster_security_group_ingress",
                        "iot_delete_thing",
                        "elbv2_describe_target_health",
                        "iot_delete_policy",
                        "inspector_describe_rules_packages",
                        "route53_associate_vpc_with_hosted_zone",
                        "vpc_disable_vgw_route_propagation",
                        "mturk_reject_assignment",
                        "swf_get_workflow_execution_history",
                        "greengrass_list_logger_definitions",
                        "servicecatalog_describe_product_view",
                        "vpc_delete_network_interface",
                        "ecs_start_task",
                        "workdocs_activate_user",
                        "lambda_delete_alias",
                        "route53_get_health_check",
                        "ec2_modify_snapshot_attribute",
                        "apigateway_get_resource",
                        "servicecatalog_list_record_history",
                        "config_get_resource_config_history",
                        "iam_get_saml_provider",
                        "s3_create_multipart_upload",
                        "batch_describe_jobs",
                        "servicecatalog_describe_provisioning_parameters",
                        "kinesisanalytics_delete_application_output",
                        "rds_create_parameter_group",
                        "vpc_create_vpc",
                        "ec2_enable_vpc_classic_link_dns_support",
                        "elb_describe_load_balancer_attributes",
                        "apigateway_update_authorizer",
                        "pinpoint_get_event_stream",
                        "s3_list_objects",
                        "route53domains_renew_domain",
                        "lambda_tag_resource",
                        "cognito-idp_confirm_device",
                        "ec2_create_key_pair",
                        "greengrass_create_device_definition",
                        "autoscaling_put_scaling_policy",
                        "dms_describe_table_statistics",
                        "cloudfront_untag_resource",
                        "redshift_describe_reserved_nodes",
                        "ec2_describe_flow_logs",
                        "kinesisanalytics_add_application_cloud_watch_logging_option",
                        "apigateway_delete_method_response",
                        "ssm_describe_document",
                        "vpc_proxy_ssl",
                        "iot_update_ca_certificate",
                        "codedeploy_delete_deployment_group",
                        "kinesisanalytics_update_application",
                        "batch_create_job_queue",
                        "storagegateway_describe_cachedi_scsi_volumes",
                        "lex-models_get_builtin_slot_types",
                        "opsworks_describe_elastic_ips",
                        "firehose_list_delivery_streams",
                        "rds_delete_db_cluster_parameter_group",
                        "lightsail_get_static_ips",
                        "dax_describe_default_parameters",
                        "logs_delete_subscription_filter",
                        "opsworks_get_hostname_suggestion",
                        "rds_get_all_db_subnet_groups",
                        "route53_test_dns_answer",
                        "opsworkscm_start_maintenance",
                        "sms_get_replication_runs",
                        "cognito-identity_get_identity_pool_roles",
                        "ec2_get_all_snapshots",
                        "ec2_get_reserved_instances_exchange_quote",
                        "rds_copy_db_cluster_parameter_group",
                        "ec2_describe_export_tasks",
                        "workdocs_delete_folder",
                        "s3_list_objects_v2",
                        "budgets_describe_subscribers_for_notification",
                        "route53_list_resource_record_sets",
                        "vpc_delete_vpn_connection_route",
                        "workdocs_delete_notification_subscription",
                        "codebuild_create_project",
                        "vpc_build_list_params",
                        "servicecatalog_associate_product_with_portfolio",
                        "cloudwatch_list_metrics",
                        "mturk_reject_qualification_request",
                        "kinesisanalytics_delete_application_reference_data_source",
                        "route53_create_reusable_delegation_set",
                        "xray_get_trace_summaries",
                        "ec2_create_flow_logs",
                        "codedeploy_batch_get_deployment_groups",
                        "clouddirectory_list_facet_attributes",
                        "cloudsearchdomain_upload_documents",
                        "ds_enable_radius",
                        "redshift_revoke_snapshot_access",
                        "waf-regional_delete_rate_based_rule",
                        "r53_zone_update_mx",
                        "lex-models_get_bot_channel_associations",
                        "codestar_associate_team_member",
                        "vpc_detach_internet_gateway",
                        "ec2_purchase_scheduled_instances",
                        "servicecatalog_update_product",
                        "ecs_delete_cluster",
                        "opsworks_create_instance",
                        "lightsail_update_domain_entry",
                        "route53_update_traffic_policy_comment",
                        "ssm_get_inventory_schema",
                        "codebuild_stop_build",
                        "cloudhsm_modify_hapg",
                        "sdb_select",
                        "sns_list_phone_numbers_opted_out",
                        "cloudfront_get_distribution_config",
                        "autoscaling_describe_scaling_activities",
                        "inspector_preview_agents",
                        "directconnect_associate_hosted_connection",
                        "iam_build_complex_list_params",
                        "vpc_attach_network_interface",
                        "apigateway_update_usage",
                        "machinelearning_update_evaluation",
                        "s3_get_bucket_accelerate_configuration",
                        "appstream_create_streaming_url",
                        "lex-models_put_slot_type",
                        "ecs_describe_services",
                        "config_describe_configuration_recorders",
                        "storagegateway_describe_vtl_devices",
                        "iam_get_role",
                        "dynamodbstreams_list_streams",
                        "ec2_get_all_addresses",
                        "apigateway_flush_stage_cache",
                        "ecs_run_task",
                        "firehose_put_record",
                        "codebuild_list_curated_environment_images",
                        "ec2_describe_scheduled_instance_availability",
                        "ec2_enable_vgw_route_propagation",
                        "iam_update_access_key",
                        "cognito-idp_delete_group",
                        "route53_list_reusable_delegation_sets",
                        "dax_describe_clusters",
                        "workdocs_describe_folder_contents",
                        "datapipeline_set_status",
                        "apigateway_get_usage",
                        "ec2_describe_conversion_tasks",
                        "sqs_handle_proxy",
                        "cognito-identity_lookup_developer_identity",
                        "iam_get_context_keys_for_principal_policy",
                        "iam_delete_role_policy",
                        "workdocs_get_document_version",
                        "lambda_list_tags",
                        "datapipeline_report_task_runner_heartbeat",
                        "vpc_delete_spot_datafeed_subscription",
                        "kinesis_get_records",
                        "glacier_set_vault_notifications",
                        "s3_get_proxy_url_with_auth",
                        "waf-regional_create_xss_match_set",
                        "lex-runtime_post_content",
                        "efs_delete_tags",
                        "autoscaling_delete_launch_configuration",
                        "ec2_delete_security_group",
                        "cloudfront_delete_distribution",
                        "vpc_reset_snapshot_attribute",
                        "sns_delete_endpoint",
                        "iam_build_base_http_request",
                        "waf_get_rate_based_rule",
                        "support_describe_trusted_advisor_check_refresh_statuses",
                        "ecs_deregister_container_instance",
                        "dms_start_replication_task",
                        "swf_respond_decision_task_completed",
                        "devicefarm_update_device_pool",
                        "dms_describe_certificates",
                        "ssm_get_parameter_history",
                        "appstream_stop_fleet",
                        "opsworkscm_delete_backup",
                        "application-autoscaling_describe_scalable_targets",
                        "machinelearning_delete_evaluation",
                        "elasticache_create_snapshot",
                        "logs_describe_export_tasks",
                        "servicecatalog_list_principals_for_portfolio",
                        "emr_add_job_flow_steps",
                        "ssm_delete_parameters",
                        "servicecatalog_describe_portfolio",
                        "cognito-idp_admin_update_device_status",
                        "rds_describe_event_subscriptions",
                        "ec2_describe_placement_groups",
                        "iam_detach_group_policy",
                        "mturk_accept_qualification_request",
                        "dms_create_replication_task",
                        "cognito-sync_subscribe_to_dataset",
                        "budgets_create_budget",
                        "dynamodbstreams_get_records",
                        "workspaces_describe_tags",
                        "opsworks_start_stack",
                        "r53_zone_add_mx",
                        "ec2_attach_classic_link_vpc",
                        "cloudtrail_put_event_selectors",
                        "elbv2_describe_tags",
                        "apigateway_delete_integration_response",
                        "mturk_get_assignment",
                        "rds_describe_db_security_groups",
                        "ec2_delete_nat_gateway",
                        "clouddirectory_create_facet",
                        "elasticache_describe_events",
                        "opsworks_describe_user_profiles",
                        "kms_create_key",
                        "snowball_cancel_cluster",
                        "vpc_revoke_security_group",
                        "rds_build_complex_list_params",
                        "waf_delete_rule",
                        "ses_describe_receipt_rule_set",
                        "redshift_describe_hsm_client_certificates",
                        "elasticache_describe_replication_groups",
                        "iot_create_topic_rule",
                        "devicefarm_get_run",
                        "vpc_get_proxy_auth_header",
                        "vpc_purchase_reserved_instance_offering",
                        "elasticbeanstalk_check_dns_availability",
                        "greengrass_update_group",
                        "iam_delete_ssh_public_key",
                        "codedeploy_create_deployment_group",
                        "machinelearning_delete_batch_prediction",
                        "waf-regional_get_ip_set",
                        "s3_delete_bucket_replication",
                        "gamelift_delete_alias",
                        "lex-models_get_slot_type_versions",
                        "sms_create_replication_job",
                        "ec2_revoke_security_group_deprecated",
                        "iam_delete_user_policy",
                        "swf_list_activity_types",
                        "elasticbeanstalk_update_configuration_template",
                        "cognito-idp_admin_list_groups_for_user",
                        "kms_encrypt",
                        "waf_get_sampled_requests",
                        "ec2_create_placement_group",
                        "opsworks_assign_instance",
                        "apigateway_delete_documentation_part",
                        "cognito-idp_admin_delete_user",
                        "elasticache_describe_snapshots",
                        "cognito-sync_describe_identity_usage",
                        "elasticache_modify_replication_group",
                        "route53_get_checker_ip_ranges",
                        "ssm_register_default_patch_baseline",
                        "ec2_prefix_proxy_to_path",
                        "ses_get_identity_notification_attributes",
                        "ec2_describe_tags",
                        "s3_new_http_connection",
                        "codepipeline_get_pipeline_execution",
                        "workspaces_create_tags",
                        "cognito-idp_delete_user_pool_client",
                        "iam_list_groups",
                        "ec2_delete_vpn_gateway",
                        "vpc_get_all_internet_gateways",
                        "pinpoint_get_email_channel",
                        "cloudwatch_put_metric_data",
                        "support_resolve_case",
                        "vpc_create_vpn_gateway",
                        "workdocs_add_resource_permissions",
                        "ec2_delete_vpn_connection",
                        "iam_delete_saml_provider",
                        "budgets_describe_notifications_for_budget",
                        "ses_reorder_receipt_rule_set",
                        "mturk_approve_assignment",
                        "dynamodb_put_item",
                        "firehose_delete_delivery_stream",
                        "iam_put_group_policy",
                        "workspaces_reboot_workspaces",
                        "iam_create_access_key",
                        "firehose_create_delivery_stream",
                        "lightsail_unpeer_vpc",
                        "s3_generate_url",
                        "cf_get_object",
                        "vpc_modify_volume_attribute",
                        "ec2_describe_import_snapshot_tasks",
                        "codecommit_get_differences",
                        "kms_generate_data_key",
                        "ec2_describe_vpc_classic_link",
                        "vpc_enable_volume_io",
                        "lambda_get_account_settings",
                        "vpc_attach_classic_link_vpc",
                        "greengrass_disassociate_service_role_from_account",
                        "cloudformation_create_stack",
                        "sns_set_subscription_attributes",
                        "vpc_modify_network_interface_attribute",
                        "codecommit_update_repository_description",
                        "discovery_associate_configuration_items_to_application",
                        "storagegateway_describe_bandwidth_rate_limit",
                        "gamelift_describe_instances",
                        "inspector_delete_assessment_template",
                        "ec2_start_instances",
                        "ecs_list_tasks",
                        "config_put_evaluations",
                        "vpc_trim_snapshots",
                        "r53_create_health_check",
                        "iam_get_login_profiles",
                        "ec2_delete_volume",
                        "gamelift_resolve_alias",
                        "ses_verify_domain_dkim",
                        "cognito-idp_resend_confirmation_code",
                        "apigateway_test_invoke_authorizer",
                        "events_list_rule_names_by_target",
                        "ec2_delete_network_acl_entry",
                        "ec2_import_instance",
                        "iam_get_object",
                        "redshift_delete_cluster_subnet_group",
                        "cf_describe_stack_resources",
                        "waf-regional_list_byte_match_sets",
                        "mturk_create_hit_with_hit_type",
                        "iam_put_http_connection",
                        "meteringmarketplace_resolve_customer",
                        "health_describe_entity_aggregates",
                        "route53_get_geo_location",
                        "elb_delete_load_balancer_policy",
                        "appstream_create_stack",
                        "glacier_delete_vault",
                        "waf-regional_create_web_acl",
                        "rds_delete_dbsecurity_group",
                        "datapipeline_put_pipeline_definition",
                        "ds_deregister_event_topic",
                        "sqs_get_status",
                        "ec2_deregister_image",
                        "waf_list_byte_match_sets",
                        "sts_assume_role_with_saml",
                        "opsworks_delete_instance",
                        "lightsail_get_regions",
                        "ssm_get_maintenance_window_execution",
                        "rds_delete_parameter_group",
                        "rds_copy_dbsnapshot",
                        "pinpoint_send_messages",
                        "elasticache_remove_tags_from_resource",
                        "glacier_get_vault_lock",
                        "ds_describe_directories",
                        "kinesis_enable_enhanced_monitoring",
                        "rds_delete_option_group",
                        "redshift_modify_event_subscription",
                        "ec2_associate_vpc_cidr_block",
                        "workspaces_create_workspaces",
                        "waf_delete_size_constraint_set",
                        "rds_restore_db_instance_to_point_in_time",
                        "servicecatalog_list_accepted_portfolio_shares",
                        "ec2_cancel_import_task",
                        "apigateway_get_sdk_type",
                        "sns_unsubscribe",
                        "storagegateway_describe_working_storage",
                        "workdocs_delete_user",
                        "devicefarm_list_artifacts",
                        "ssm_describe_automation_executions",
                        "storagegateway_delete_gateway",
                        "iam_get_list",
                        "workdocs_initiate_document_version_upload",
                        "emr_describe_cluster",
                        "opsworks_create_app",
                        "appstream_update_fleet",
                        "codedeploy_continue_deployment",
                        "directconnect_describe_tags",
                        "codedeploy_list_deployment_configs",
                        "sts_decode_authorization_message",
                        "route53_get_health_check_count",
                        "route53_list_traffic_policies",
                        "clouddirectory_list_published_schema_arns",
                        "route53domains_get_domain_suggestions",
                        "r53_zone_delete_record",
                        "greengrass_list_groups",
                        "marketplacecommerceanalytics_start_support_data_export",
                        "cognito-idp_admin_forget_device",
                        "codestar_list_projects",
                        "codestar_list_team_members",
                        "lambda_list_aliases",
                        "dms_create_replication_instance",
                        "ec2_get_status",
                        "elb_create_lb_cookie_stickiness_policy",
                        "opsworks_update_stack",
                        "ds_describe_trusts",
                        "clouddirectory_list_tags_for_resource",
                        "stepfunctions_list_activities",
                        "elbv2_create_rule",
                        "iam_get_proxy_url_with_auth",
                        "elasticbeanstalk_update_application_version",
                        "s3_delete_objects",
                        "ec2_detach_volume",
                        "elbv2_describe_account_limits",
                        "batch_deregister_job_definition",
                        "iam_list_server_certificates",
                        "ecr_get_repository_policy",
                        "emr_terminate_job_flows",
                        "iam_delete_account_alias",
                        "s3_put_object_acl",
                        "directconnect_confirm_connection",
                        "vpc_monitor_instances",
                        "cognito-idp_get_identity_provider_by_identifier",
                        "cloudhsm_delete_luna_client",
                        "iam_list_account_aliases",
                        "application-autoscaling_put_scaling_policy",
                        "rds_describe_source_regions",
                        "iam_list_entities_for_policy",
                        "datapipeline_set_task_status",
                        "elasticache_describe_engine_default_parameters",
                        "rds_make_request",
                        "redshift_describe_table_restore_status",
                        "ssm_describe_effective_instance_associations",
                        "vpc_get_params",
                        "swf_poll_for_activity_task",
                        "dynamodb_describe_table",
                        "polly_list_lexicons",
                        "s3_put_bucket_lifecycle",
                        "swf_deprecate_activity_type",
                        "vpc_get_all_bundle_tasks",
                        "sts_assume_role",
                        "waf-regional_create_rule",
                        "dax_untag_resource",
                        "clouddirectory_disable_directory",
                        "ssm_list_document_versions",
                        "dax_create_parameter_group",
                        "sqs_get_dead_letter_source_queues",
                        "greengrass_get_core_definition_version",
                        "workdocs_delete_custom_metadata",
                        "redshift_create_hsm_client_certificate",
                        "emr_list_instance_fleets",
                        "elb_configure_health_check",
                        "codedeploy_get_application_revision",
                        "polly_synthesize_speech",
                        "lex-runtime_post_text",
                        "iam_list_attached_group_policies",
                        "ssm_get_automation_execution",
                        "emr_list_instances",
                        "support_describe_cases",
                        "codepipeline_poll_for_third_party_jobs",
                        "sqs_prefix_proxy_to_path",
                        "clouddirectory_lookup_policy",
                        "codestar_create_user_profile",
                        "autoscaling_describe_tags",
                        "rds_copy_db_parameter_group",
                        "ssm_describe_activations",
                        "datapipeline_add_tags",
                        "athena_batch_get_named_query",
                        "cloudwatch_set_alarm_state",
                        "opsworks_associate_elastic_ip",
                        "cloudformation_list_stacks",
                        "firehose_update_destination",
                        "greengrass_update_connectivity_info",
                        "s3_put_object",
                        "ec2_create_fpga_image",
                        "ssm_update_maintenance_window",
                        "iam_get_all_users",
                        "ec2_get_only_instances",
                        "mturk_update_hit_type_of_hit",
                        "vpc_delete_network_acl_entry",
                        "mturk_update_notification_settings",
                        "cognito-identity_get_id",
                        "workdocs_delete_labels",
                        "codestar_describe_project",
                        "ses_send_email",
                        "xray_put_trace_segments",
                        "discovery_update_application",
                        "iot_detach_thing_principal",
                        "codecommit_list_branches",
                        "mturk_list_bonus_payments",
                        "ec2_replace_route",
                        "efs_create_file_system",
                        "route53_delete_hosted_zone",
                        "apigateway_import_api_keys",
                        "ds_create_conditional_forwarder",
                        "codecommit_get_blob",
                        "iot_list_principal_things",
                        "pinpoint_get_segments",
                        "ec2_get_all_kernels",
                        "lambda_get_function",
                        "apigateway_get_api_key",
                        "s3_complete_multipart_upload",
                        "ec2_describe_identity_id_format",
                        "iam_list_server_certs",
                        "sdb_create_domain",
                        "logs_delete_log_group",
                        "dynamodbstreams_describe_stream",
                        "codecommit_put_repository_triggers",
                        "logs_describe_log_groups",
                        "ec2_detach_vpn_gateway",
                        "rds_delete_event_subscription",
                        "iam_delete_role",
                        "storagegateway_list_gateways",
                        "ssm_describe_document_permission",
                        "dynamodb_list_tables",
                        "ses_get_identity_dkim_attributes",
                        "vpc_create_spot_datafeed_subscription",
                        "codebuild_delete_project",
                        "iot_get_registration_code",
                        "cloudfront_list_distributions",
                        "emr_list_bootstrap_actions",
                        "stepfunctions_stop_execution",
                        "cloudhsm_modify_luna_client",
                        "route53_create_health_check",
                        "route53domains_get_domain_detail",
                        "ses_set_identity_mail_from_domain",
                        "kms_re_encrypt",
                        "glacier_complete_multipart_upload",
                        "iot_delete_policy_version",
                        "rds_describe_option_groups",
                        "rds_get_proxy_auth_header",
                        "organizations_list_roots",
                        "ecs_list_services",
                        "cognito-idp_create_identity_provider",
                        "codedeploy_create_application",
                        "devicefarm_get_test",
                        "dms_create_event_subscription",
                        "ec2_set_request_hook",
                        "cloudsearch_define_analysis_scheme",
                        "devicefarm_create_device_pool",
                        "ec2_delete_key_pair",
                        "route53_create_traffic_policy_version",
                        "sqs_add_permission",
                        "pinpoint_update_segment",
                        "lex-models_delete_intent",
                        "directconnect_confirm_private_virtual_interface",
                        "apigateway_get_model",
                        "apigateway_generate_client_certificate",
                        "clouddirectory_delete_object",
                        "resourcegroupstaggingapi_tag_resources",
                        "ssm_delete_maintenance_window",
                        "waf-regional_create_byte_match_set",
                        "ssm_deregister_managed_instance",
                        "cloudsearch_define_index_field",
                        "redshift_create_snapshot_copy_grant",
                        "iam_get_user_policy",
                        "ssm_send_command",
                        "iam_remove_role_from_instance_profile",
                        "directconnect_confirm_public_virtual_interface",
                        "discovery_create_application",
                        "codepipeline_start_pipeline_execution",
                        "devicefarm_get_device",
                        "dax_update_subnet_group",
                        "rds_restore_db_cluster_from_s3",
                        "ecr_get_download_url_for_layer",
                        "ec2_build_tag_param_list",
                        "cognito-idp_list_identity_providers",
                        "autoscaling_attach_load_balancer_target_groups",
                        "gamelift_get_game_session_log_url",
                        "clouddirectory_get_directory",
                        "vpc_get_all_classic_link_vpcs",
                        "iam_update_signing_certificate",
                        "lambda_create_function",
                        "ssm_describe_instance_patches",
                        "cognito-sync_update_records",
                        "workdocs_update_document",
                        "devicefarm_delete_project",
                        "ecs_describe_task_definition",
                        "rds_restore_db_cluster_from_snapshot",
                        "stepfunctions_describe_state_machine",
                        "cloudsearch_build_suggesters",
                        "swf_register_domain",
                        "waf-regional_update_rule",
                        "ec2_create_security_group",
                        "ec2_describe_hosts",
                        "cloudformation_validate_template",
                        "rds_describe_db_cluster_snapshots",
                        "organizations_describe_account",
                        "route53_list_geo_locations",
                        "codepipeline_put_job_failure_result",
                        "elb_register_instances_with_load_balancer",
                        "devicefarm_list_suites",
                        "vpc_get_all_network_acls",
                        "codedeploy_batch_get_deployment_instances",
                        "elasticbeanstalk_describe_platform_version",
                        "ec2_purchase_reserved_instance_offering",
                        "iot_attach_principal_policy",
                        "apigateway_create_base_path_mapping",
                        "dynamodb_update_table",
                        "cognito-idp_admin_confirm_sign_up",
                        "cognito-sync_get_bulk_publish_details",
                        "organizations_move_account",
                        "iam_skip_proxy",
                        "apigateway_get_api_keys",
                        "lex-models_delete_bot_version",
                        "kms_tag_resource",
                        "rds_delete_db_cluster",
                        "ssm_register_patch_baseline_for_patch_group",
                        "cf_set_stack_policy",
                        "vpc_delete_tags",
                        "redshift_delete_event_subscription",
                        "lightsail_open_instance_public_ports",
                        "dynamodb_create_table",
                        "greengrass_list_group_versions",
                        "iot_create_thing",
                        "ecr_list_images",
                        "devicefarm_list_offerings",
                        "kinesis_create_stream",
                        "rds_reboot_db_instance",
                        "ec2_describe_subnets",
                        "ec2_build_list_params",
                        "iam_list_role_policies",
                        "storagegateway_describe_maintenance_start_time",
                        "directconnect_describe_interconnect_loa",
                        "rds_describe_db_cluster_parameter_groups",
                        "cloudwatch_disable_alarm_actions",
                        "workdocs_describe_activities",
                        "devicefarm_delete_network_profile",
                        "kinesis_remove_tags_from_stream",
                        "r53_get_http_connection",
                        "directconnect_delete_connection",
                        "route53_delete_reusable_delegation_set",
                        "logs_create_log_group",
                        "elasticache_add_tags_to_resource",
                        "ecs_discover_poll_endpoint",
                        "elb_deregister_instances_from_load_balancer",
                        "greengrass_disassociate_role_from_group",
                        "sts_assume_role_with_web_identity",
                        "ecs_list_attributes",
                        "r53_get_hosted_zone_by_name",
                        "cloudsearch_delete_analysis_scheme",
                        "lightsail_create_instances_from_snapshot",
                        "opsworks_untag_resource",
                        "rekognition_search_faces",
                        "shield_list_attacks",
                        "dax_increase_replication_factor",
                        "swf_count_pending_activity_tasks",
                        "sts_get_federation_token",
                        "storagegateway_create_cachedi_scsi_volume",
                        "redshift_describe_default_cluster_parameters",
                        "codedeploy_get_on_premises_instance",
                        "ec2_create_dhcp_options",
                        "opsworkscm_describe_servers",
                        "datapipeline_describe_objects",
                        "batch_terminate_job",
                        "opsworks_deregister_ecs_cluster",
                        "gamelift_list_aliases",
                        "opsworks_list_tags",
                        "cognito-idp_confirm_sign_up",
                        "config_delete_config_rule",
                        "ec2_modify_instance_attribute",
                        "iam_update_ssh_public_key",
                        "lambda_delete_function",
                        "rds_describe_reserved_db_instances_offerings",
                        "vpc_delete_security_group",
                        "pinpoint_get_gcm_channel",
                        "ssm_register_task_with_maintenance_window",
                        "iam_list_instance_profiles",
                        "apigateway_update_documentation_version",
                        "opsworkscm_update_server_engine_attributes",
                        "waf_update_sql_injection_match_set",
                        "glacier_delete_vault_access_policy",
                        "ds_delete_trust",
                        "mturk_get_account_balance",
                        "elasticbeanstalk_describe_events",
                        "vpc_replace_route_table_assocation",
                        "ds_describe_event_topics",
                        "organizations_enable_all_features",
                        "ses_list_receipt_filters",
                        "cognito-identity_unlink_identity",
                        "dms_describe_replication_instances",
                        "apigateway_delete_resource",
                        "iam_create_login_profile",
                        "acm_resend_validation_email",
                        "cloudfront_list_cloud_front_origin_access_identities",
                        "vpc_associate_network_acl",
                        "kinesis_describe_stream",
                        "gamelift_create_build",
                        "gamelift_describe_alias",
                        "emr_describe_step",
                        "vpc_detach_vpn_gateway",
                        "organizations_list_handshakes_for_organization",
                        "opsworks_deregister_volume",
                        "iam_delete_policy_version",
                        "inspector_subscribe_to_event",
                        "storagegateway_retrieve_tape_recovery_point",
                        "organizations_accept_handshake",
                        "rekognition_recognize_celebrities",
                        "iam_get_server_certificate",
                        "rds_modify_db_instance",
                        "codedeploy_batch_get_on_premises_instances",
                        "sdb_domain_metadata",
                        "route53_list_traffic_policy_versions",
                        "codebuild_update_project",
                        "ecs_list_clusters",
                        "iam_create_service_linked_role",
                        "workdocs_create_folder",
                        "kms_get_key_rotation_status",
                        "waf_get_change_token",
                        "resourcegroupstaggingapi_get_tag_values",
                        "iam_get_groups_for_user",
                        "rds_create_dbsnapshot",
                        "batch_describe_job_queues",
                        "lex-models_delete_bot",
                        "dynamodb_query",
                        "sns_set_sms_attributes",
                        "vpc_get_all_dhcp_options",
                        "ds_create_microsoft_ad",
                        "importexport_list_jobs",
                        "gamelift_list_builds",
                        "elasticbeanstalk_swap_environment_cnam_es",
                        "vpc_reset_image_attribute",
                        "budgets_delete_budget",
                        "snowball_create_job",
                        "snowball_update_cluster",
                        "ec2_create_instance_export_task",
                        "resourcegroupstaggingapi_get_resources",
                        "route53_get_traffic_policy",
                        "cloudhsm_list_luna_clients",
                        "elasticache_delete_replication_group",
                        "rds_restore_dbinstance_from_point_in_time",
                        "vpc_authorize_security_group_egress",
                        "mturk_create_hit_type",
                        "mturk_send_test_event_notification",
                        "codedeploy_list_on_premises_instances",
                        "directconnect_describe_loa",
                        "swf_start_workflow_execution",
                        "s3_make_request",
                        "cognito-identity_set_identity_pool_roles",
                        "r53_zone_get_mx",
                        "ds_delete_snapshot",
                        "clouddirectory_tag_resource",
                        "pinpoint_update_endpoints_batch",
                        "es_describe_elasticsearch_domain_config",
                        "opsworks_detach_elastic_load_balancer",
                        "rds_describe_pending_maintenance_actions",
                        "kms_list_resource_tags",
                        "elbv2_modify_rule",
                        "rds_failover_db_cluster",
                        "rds_list_tags_for_resource",
                        "cf_create_stack",
                        "devicefarm_get_network_profile",
                        "storagegateway_describe_snapshot_schedule",
                        "route53_get_traffic_policy_instance",
                        "rds_describe_db_parameters",
                        "opsworkscm_create_server",
                        "directconnect_create_lag",
                        "cloudfront_update_cloud_front_origin_access_identity",
                        "firehose_describe_delivery_stream",
                        "devicefarm_install_to_remote_access_session",
                        "lex-models_delete_intent_version",
                        "codedeploy_create_deployment_config",
                        "ec2_get_http_connection",
                        "ec2_reject_vpc_peering_connection",
                        "clouddirectory_create_directory",
                        "ssm_stop_automation_execution",
                        "ecr_batch_delete_image",
                        "ssm_remove_tags_from_resource",
                        "kms_get_key_policy",
                        "apigateway_get_documentation_parts",
                        "ec2_describe_network_interface_attribute",
                        "autoscaling_detach_load_balancer_target_groups",
                        "rds_describe_db_cluster_parameters",
                        "sqs_send_message",
                        "discovery_delete_tags",
                        "ec2_delete_subnet",
                        "kms_delete_alias",
                        "iam_upload_signing_certificate",
                        "pinpoint_delete_apns_sandbox_channel",
                        "cognito-idp_admin_remove_user_from_group",
                        "config_describe_delivery_channels",
                        "ec2_get_all_reservations",
                        "s3_get_proxy_auth_header",
                        "elbv2_modify_listener",
                        "servicecatalog_delete_product",
                        "vpc_describe_vpc_attribute",
                        "iam_list_service_specific_credentials",
                        "storagegateway_shutdown_gateway",
                        "s3_put_bucket_cors",
                        "ses_verify_domain_identity",
                        "logs_put_destination_policy",
                        "resourcegroupstaggingapi_untag_resources",
                        "workspaces_stop_workspaces",
                        "appstream_associate_fleet",
                        "r53_zone_add_a",
                        "stepfunctions_delete_activity",
                        "elasticbeanstalk_compose_environments",
                        "ec2_replace_route_table_association",
                        "budgets_update_budget",
                        "iot_create_thing_type",
                        "greengrass_list_subscription_definition_versions",
                        "gamelift_create_game_session",
                        "ec2_associate_subnet_cidr_block",
                        "ecr_delete_repository",
                        "rds_promote_read_replica_db_cluster",
                        "dynamodb_list_tags_of_resource",
                        "iam_delete_open_id_connect_provider",
                        "glacier_list_provisioned_capacity",
                        "lightsail_put_instance_public_ports",
                        "workdocs_remove_resource_permission",
                        "apigateway_get_base_path_mappings",
                        "clouddirectory_apply_schema",
                        "iam_delete_virtual_mfa_device",
                        "elasticache_describe_reserved_cache_nodes",
                        "vpc_get_all_images",
                        "ecr_initiate_layer_upload",
                        "elb_describe_load_balancer_policy_types",
                        "ds_disable_radius",
                        "apigateway_get_rest_api",
                        "directconnect_describe_connections_on_interconnect",
                        "ssm_get_deployable_patch_snapshot_for_instance",
                        "swf_list_domains",
                        "elb_disable_availability_zones_for_load_balancer",
                        "opsworkscm_associate_node",
                        "elasticbeanstalk_delete_platform_version",
                        "dynamodbstreams_get_shard_iterator",
                        "cloudtrail_stop_logging",
                        "ec2_disable_vgw_route_propagation",
                        "ec2_describe_scheduled_instances",
                        "cognito-idp_respond_to_auth_challenge",
                        "elb_delete_load_balancer_listeners",
                        "clouddirectory_list_attached_indices",
                        "clouddirectory_enable_directory",
                        "vpc_assign_private_ip_addresses",
                        "redshift_create_cluster_security_group",
                        "codedeploy_batch_get_deployments",
                        "iam_get_group",
                        "ds_connect_directory",
                        "rds_copy_db_cluster_snapshot",
                        "cognito-idp_admin_enable_user",
                        "codebuild_list_builds_for_project",
                        "ses_delete_identity",
                        "opsworks_deregister_instance",
                        "sqs_get_queue_url",
                        "emr_run_job_flow",
                        "lex-models_get_bot_channel_association",
                        "acm_add_tags_to_certificate",
                        "inspector_describe_assessment_runs",
                        "cf_estimate_template_cost",
                        "vpc_get_key_pair",
                        "route53_list_vpc_association_authorizations",
                        "waf_create_web_acl",
                        "rds_create_db_cluster_snapshot",
                        "elasticbeanstalk_describe_environments",
                        "ses_create_receipt_rule_set",
                        "iam_list_signing_certificates",
                        "ec2_get_all_volume_status",
                        "lambda_create_event_source_mapping",
                        "apigateway_delete_domain_name",
                        "r53_skip_proxy",
                        "greengrass_get_deployment_status",
                        "shield_delete_subscription",
                        "autoscaling_set_desired_capacity",
                        "iam_delete_instance_profile",
                        "iam_get_all_signing_certs",
                        "s3_handle_proxy",
                        "r53_create_hosted_zone",
                        "apigateway_delete_usage_plan",
                        "codepipeline_list_action_types",
                        "codedeploy_list_deployment_groups",
                        "ssm_deregister_target_from_maintenance_window",
                        "elasticache_copy_snapshot",
                        "opsworks_describe_deployments",
                        "ec2_attach_vpn_gateway",
                        "pinpoint_delete_email_channel",
                        "ssm_describe_parameters",
                        "codepipeline_delete_pipeline",
                        "elasticbeanstalk_apply_environment_managed_action",
                        "cf_describe_stacks",
                        "ec2_describe_reserved_instances",
                        "s3_get_object_torrent",
                        "ec2_get_proxy_auth_header",
                        "greengrass_create_group",
                        "s3_put_bucket_versioning",
                        "batch_register_job_definition",
                        "rds_get_log_file",
                        "opsworks_describe_instances",
                        "config_put_delivery_channel",
                        "mturk_send_bonus",
                        "iam_delete_login_profile",
                        "ec2_describe_snapshots",
                        "vpc_get_all_kernels",
                        "vpc_delete_snapshot",
                        "cf_server_name",
                        "codedeploy_create_deployment",
                        "devicefarm_list_offering_transactions",
                        "ec2_restore_address_to_classic",
                        "redshift_modify_cluster",
                        "machinelearning_describe_data_sources",
                        "efs_delete_mount_target",
                        "route53domains_update_tags_for_domain",
                        "directconnect_allocate_private_virtual_interface",
                        "ds_update_radius",
                        "gamelift_describe_game_sessions",
                        "organizations_list_organizational_units_for_parent",
                        "directconnect_create_bgp_peer",
                        "clouddirectory_detach_object",
                        "servicecatalog_create_provisioning_artifact",
                        "mturk_list_worker_blocks",
                        "cloudhsm_list_hsms",
                        "apigateway_get_usage_plan_key",
                        "s3_proxy_ssl",
                        "waf-regional_create_rate_based_rule",
                        "greengrass_list_function_definition_versions",
                        "vpc_start_instances",
                        "ec2_wait_for_state",
                        "servicecatalog_create_constraint",
                        "elb_delete_load_balancer",
                        "apigateway_create_usage_plan",
                        "events_put_rule",
                        "cognito-idp_change_password",
                        "ec2_describe_customer_gateways",
                        "ds_describe_conditional_forwarders",
                        "ses_verify_email_identity",
                        "ses_set_identity_notification_topic",
                        "cur_describe_report_definitions",
                        "r53_get_zones",
                        "snowball_describe_job",
                        "elbv2_describe_ssl_policies",
                        "dms_modify_replication_subnet_group",
                        "ds_update_conditional_forwarder",
                        "lex-models_get_slot_types",
                        "inspector_list_assessment_templates",
                        "ds_restore_from_snapshot",
                        "ssm_delete_activation",
                        "iot_describe_ca_certificate",
                        "vpc_replace_route_table_association_with_assoc",
                        "ds_delete_directory",
                        "rds_describe_engine_default_parameters",
                        "ec2_get_volume_attribute",
                        "events_remove_targets",
                        "emr_cancel_steps",
                        "cloudtrail_create_trail",
                        "rds_get_all_dbsnapshots",
                        "apigateway_delete_request_validator",
                        "apigateway_delete_stage",
                        "autoscaling_set_instance_health",
                        "machinelearning_update_batch_prediction",
                        "batch_list_jobs",
                        "waf-regional_update_web_acl",
                        "cloudwatch_enable_alarm_actions",
                        "vpc_get_all_regions",
                        "athena_batch_get_query_execution",
                        "swf_deprecate_domain",
                        "servicecatalog_list_portfolios_for_product",
                        "apigateway_delete_rest_api",
                        "waf_delete_byte_match_set",
                        "apigateway_delete_api_key",
                        "clouddirectory_list_incoming_typed_links",
                        "redshift_describe_cluster_snapshots",
                        "iam_server_name",
                        "sns_set_endpoint_attributes",
                        "sns_list_subscriptions_by_topic",
                        "sns_create_platform_application",
                        "waf-regional_get_rate_based_rule",
                        "elb_remove_tags",
                        "waf_get_web_acl",
                        "vpc_get_all_volumes",
                        "opsworkscm_restore_server",
                        "cf_describe_stack_resource",
                        "ec2_bundle_instance",
                        "servicecatalog_describe_provisioning_artifact",
                        "ds_remove_tags_from_resource",
                        "route53_get_hosted_zone_count",
                        "directconnect_untag_resource",
                        "s3_build_post_policy",
                        "clouddirectory_list_typed_link_facet_names",
                        "clouddirectory_get_facet",
                        "dms_describe_account_attributes",
                        "vpc_unmonitor_instances",
                        "ec2_describe_vpc_endpoints",
                        "codepipeline_poll_for_jobs",
                        "cognito-idp_update_device_status",
                        "elasticache_delete_snapshot",
                        "gamelift_delete_build",
                        "kinesisanalytics_discover_input_schema",
                        "servicecatalog_describe_product",
                        "cloudtrail_list_public_keys",
                        "sdb_list_domains",
                        "elasticache_reset_cache_parameter_group",
                        "ec2_get_spot_price_history",
                        "acm_import_certificate",
                        "ssm_get_default_patch_baseline",
                        "glacier_purchase_provisioned_capacity",
                        "waf_get_xss_match_set",
                        "cloudfront_get_streaming_distribution",
                        "opsworks_register_volume",
                        "redshift_reboot_cluster",
                        "sms_get_servers",
                        "ds_create_trust",
                        "opsworks_delete_app",
                        "gamelift_create_fleet",
                        "s3_get_bucket_replication",
                        "cognito-idp_admin_initiate_auth",
                        "lambda_update_event_source_mapping",
                        "storagegateway_reset_cache",
                        "ses_set_active_receipt_rule_set",
                        "vpc_disassociate_route_table",
                        "cognito-identity_merge_developer_identities",
                        "ec2_copy_snapshot",
                        "ec2_purchase_host_reservation",
                        "dms_describe_endpoints",
                        "swf_deprecate_workflow_type",
                        "r53_new_http_connection",
                        "ec2_get_console_output",
                        "dms_refresh_schemas",
                        "redshift_disable_logging",
                        "iam_get_all_access_keys",
                        "dms_describe_endpoint_types",
                        "s3_get_bucket_website",
                        "organizations_list_children",
                        "dms_delete_endpoint",
                        "iam_update_user",
                        "elb_attach_load_balancer_to_subnets",
                        "ec2_put_http_connection",
                        "support_describe_trusted_advisor_check_result",
                        "datapipeline_deactivate_pipeline",
                        "opsworks_create_deployment",
                        "marketplace-entitlement_get_entitlements",
                        "efs_modify_mount_target_security_groups",
                        "vpc_revoke_security_group_deprecated",
                        "lex-models_get_slot_type",
                        "cloudhsm_modify_hsm",
                        "ec2_enable_vpc_classic_link",
                        "ec2_describe_vpn_connections",
                        "ec2_describe_security_group_references",
                        "ecs_describe_tasks",
                        "route53_create_vpc_association_authorization",
                        "cloudsearch_define_expression",
                        "greengrass_get_group_version",
                        "kms_import_key_material",
                        "servicecatalog_disassociate_principal_from_portfolio",
                        "ecs_submit_task_state_change",
                        "opsworks_describe_volumes",
                        "opsworkscm_delete_server",
                        "iam_update_assume_role_policy",
                        "ses_create_configuration_set",
                        "datapipeline_delete_pipeline",
                        "ses_set_identity_dkim_enabled",
                        "vpc_get_all_network_interfaces",
                        "ec2_get_path",
                        "waf_delete_sql_injection_match_set",
                        "sns_list_endpoints_by_platform_application",
                        "vpc_create_reserved_instances_listing",
                        "ec2_get_list",
                        "cognito-idp_create_group",
                        "pinpoint_get_campaign_activities",
                        "waf-regional_list_web_ac_ls",
                        "iam_update_server_cert",
                        "greengrass_get_device_definition",
                        "cloudfront_get_cloud_front_origin_access_identity",
                        "rekognition_delete_faces",
                        "vpc_get_all_placement_groups",
                        "workspaces_describe_workspace_directories",
                        "rds_modify_db_cluster_snapshot_attribute",
                        "elasticbeanstalk_list_platform_versions",
                        "elastictranscoder_create_preset",
                        "apigateway_get_documentation_version",
                        "ssm_delete_association",
                        "elb_describe_load_balancer_policies",
                        "storagegateway_describe_tape_archives",
                        "workdocs_create_custom_metadata",
                        "kinesisanalytics_delete_application",
                        "elb_create_app_cookie_stickiness_policy",
                        "rds_describe_account_attributes",
                        "ec2_associate_address_object",
                        "waf_create_xss_match_set",
                        "vpc_describe_account_attributes",
                        "codedeploy_list_git_hub_account_token_names",
                        "greengrass_delete_core_definition",
                        "kinesis_list_tags_for_stream",
                        "swf_register_workflow_type",
                        "elastictranscoder_read_pipeline",
                        "r53_get_checker_ip_ranges",
                        "ds_get_directory_limits",
                        "opsworks_describe_elastic_load_balancers",
                        "inspector_start_assessment_run",
                        "codepipeline_get_pipeline_state",
                        "elbv2_set_ip_address_type",
                        "ec2_get_all_network_interfaces",
                        "autoscaling_detach_load_balancers",
                        "waf-regional_update_ip_set",
                        "iot-data_get_thing_shadow",
                        "vpc_attach_internet_gateway",
                        "mturk_get_file_upload_url",
                        "vpc_get_all_volume_status",
                        "ssm_describe_patch_baselines",
                        "pinpoint_delete_campaign",
                        "s3_put_bucket_tagging",
                        "servicecatalog_delete_portfolio_share",
                        "rds_modify_db_cluster",
                        "cloudhsm_create_luna_client",
                        "autoscaling_detach_instances",
                        "ssm_describe_patch_groups",
                        "organizations_list_accounts",
                        "rds_describe_db_engine_versions",
                        "vpc_put_http_connection",
                        "devicefarm_list_samples",
                        "lightsail_start_instance",
                        "redshift_describe_cluster_versions",
                        "mturk_update_expiration_for_hit",
                        "codedeploy_delete_deployment_config",
                        "r53_close",
                        "s3_get_bucket_versioning",
                        "opsworks_describe_service_errors",
                        "codepipeline_create_custom_action_type",
                        "waf-regional_get_web_acl_for_resource",
                        "lightsail_reboot_instance",
                        "autoscaling_enable_metrics_collection",
                        "cloudhsm_get_config",
                        "gamelift_stop_game_session_placement",
                        "opsworks_update_user_profile",
                        "rds_describe_certificates",
                        "codecommit_get_repository",
                        "iam_get_all_server_certs",
                        "opsworks_update_layer",
                        "cognito-idp_list_users",
                        "emr_remove_tags",
                        "iam_get_all_group_policies",
                        "mturk_list_reviewable_hi_ts",
                        "lightsail_delete_key_pair",
                        "directconnect_update_lag",
                        "devicefarm_purchase_offering",
                        "devicefarm_update_network_profile",
                        "directconnect_create_private_virtual_interface",
                        "kms_describe_key",
                        "athena_start_query_execution",
                        "redshift_enable_logging",
                        "cf_get_list",
                        "apigateway_create_deployment",
                        "iot_list_policy_principals",
                        "route53_list_traffic_policy_instances_by_policy",
                        "s3_build_base_http_request",
                        "rds_new_http_connection",
                        "ec2_replace_network_acl_entry",
                        "storagegateway_delete_snapshot_schedule",
                        "ec2_allocate_hosts",
                        "lex-models_get_intents",
                        "organizations_detach_policy",
                        "autoscaling_put_lifecycle_hook",
                        "r53_get_all_rrsets",
                        "ecs_create_cluster",
                        "sqs_get_queue",
                        "sqs_change_message_visibility_batch",
                        "dms_modify_replication_instance",
                        "opsworks_register_instance",
                        "mturk_create_hit",
                        "cognito-idp_list_users_in_group",
                        "machinelearning_describe_evaluations",
                        "servicecatalog_list_provisioning_artifacts",
                        "iot_cancel_certificate_transfer",
                        "iam_delete_group",
                        "autoscaling_put_notification_configuration",
                        "waf_get_rule",
                        "cognito-idp_global_sign_out",
                        "cloudhsm_delete_hsm",
                        "greengrass_list_core_definitions",
                        "swf_list_workflow_types",
                        "iot_get_policy_version",
                        "apigateway_put_method",
                        "cf_validate_template",
                        "lambda_remove_permission",
                        "ec2_copy_image",
                        "elastictranscoder_delete_preset",
                        "redshift_delete_hsm_client_certificate",
                        "vpc_create_volume",
                        "iam_update_signing_cert",
                        "cloudfront_list_invalidations",
                        "cf_get_proxy_url_with_auth",
                        "greengrass_update_group_certificate_configuration",
                        "cloudformation_describe_stack_resource",
                        "events_test_event_pattern",
                        "kms_disable_key",
                        "ec2_get_instance_attribute",
                        "servicecatalog_create_portfolio",
                        "mturk_list_qualification_types",
                        "appstream_delete_fleet",
                        "vpc_create_vpn_connection_route",
                        "inspector_create_assessment_template",
                        "waf-regional_list_rate_based_rules",
                        "apigateway_delete_model",
                        "ec2_disassociate_route_table",
                        "importexport_create_job",
                        "s3_put_object_tagging",
                        "organizations_delete_organizational_unit",
                        "ses_describe_configuration_set",
                        "cloudfront_update_streaming_distribution",
                        "opsworks_describe_apps",
                        "sqs_change_message_visibility",
                        "cognito-idp_delete_user_pool_domain",
                        "mturk_create_worker_block",
                        "snowball_create_address",
                        "vpc_create_route",
                        "ec2_authorize_security_group_ingress",
                        "redshift_restore_from_cluster_snapshot",
                        "rds_get_all_events",
                        "iam_delete_access_key",
                        "dms_describe_events",
                        "elb_modify_load_balancer_attributes",
                        "opsworks_describe_stack_summary",
                        "ssm_describe_maintenance_window_executions",
                        "discovery_describe_configurations",
                        "clouddirectory_list_facet_names",
                        "waf-regional_get_change_token_status",
                        "iam_create_account_alias",
                        "vpc_detach_volume",
                        "waf-regional_delete_rule",
                        "ssm_list_inventory_entries",
                        "greengrass_create_core_definition",
                        "iot_list_policies",
                        "cognito-identity_get_open_id_token_for_developer_identity",
                        "iam_list_mfa_devices",
                        "apigateway_create_authorizer",
                        "elb_add_tags",
                        "cloudhsm_describe_hapg",
                        "cognito-identity_delete_identity_pool",
                        "rds_start_db_instance",
                        "iam_attach_role_policy",
                        "ec2_modify_subnet_attribute",
                        "servicecatalog_update_portfolio",
                        "es_list_elasticsearch_instance_types",
                        "apigateway_put_integration_response",
                        "rds_authorize_db_security_group_ingress",
                        "directconnect_disassociate_connection_from_lag",
                        "lex-models_put_bot_alias",
                        "ec2_delete_vpc_peering_connection",
                        "lightsail_get_instance_state",
                        "cloudfront_get_cloud_front_origin_access_identity_config",
                        "cognito-sync_set_identity_pool_configuration",
                        "devicefarm_schedule_run",
                        "route53_update_hosted_zone_comment",
                        "codepipeline_retry_stage_execution",
                        "iam_create_user",
                        "autoscaling_describe_notification_configurations",
                        "ec2_describe_host_reservation_offerings",
                        "clouddirectory_list_index",
                        "rds_get_all_dbparameters",
                        "vpc_delete_placement_group",
                        "codecommit_update_default_branch",
                        "s3_delete_bucket_analytics_configuration",
                        "vpc_get_object",
                        "acm_list_certificates",
                        "cloudfront_delete_cloud_front_origin_access_identity",
                        "elastictranscoder_list_jobs_by_pipeline",
                        "dms_import_certificate",
                        "cloudsearch_describe_domains",
                        "inspector_list_findings",
                        "ds_get_snapshot_limits",
                        "s3_get_object_tagging",
                        "iam_put_role_policy",
                        "emr_put_auto_scaling_policy",
                        "rds_prefix_proxy_to_path",
                        "codebuild_list_builds",
                        "directconnect_describe_hosted_connections",
                        "waf-regional_list_resources_for_web_acl",
                        "redshift_disable_snapshot_copy",
                        "waf-regional_update_xss_match_set",
                        "rekognition_create_collection",
                        "s3_get_bucket_policy",
                        "waf_list_size_constraint_sets",
                        "rekognition_index_faces",
                        "ec2_get_key_pair",
                        "iot-data_update_thing_shadow",
                        "sns_confirm_subscription",
                        "opsworks_attach_elastic_load_balancer",
                        "waf_list_rules",
                        "iam_list_roles",
                        "iam_get_context_keys_for_custom_policy",
                        "ec2_modify_hosts",
                        "iam_list_policies",
                        "iot_reject_certificate_transfer",
                        "kms_update_alias",
                        "ec2_disassociate_address",
                        "elasticache_create_cache_security_group",
                        "clouddirectory_update_object_attributes",
                        "cf_describe_stack_events",
                        "sqs_get_utf8_value",
                        "apigateway_put_method_response",
                        "budgets_describe_budgets",
                        "inspector_unsubscribe_from_event",
                        "iot_list_thing_principals",
                        "vpc_register_image",
                        "opsworks_update_rds_db_instance",
                        "vpc_import_key_pair",
                        "kms_enable_key",
                        "cf_set_request_hook",
                        "ds_add_tags_to_resource",
                        "greengrass_get_group_certificate_configuration",
                        "route53_get_traffic_policy_instance_count",
                        "logs_filter_log_events",
                        "emr_add_tags",
                        "logs_put_subscription_filter",
                        "ec2_create_vpc_peering_connection",
                        "apigateway_update_model",
                        "cognito-idp_list_devices",
                        "batch_cancel_job",
                        "greengrass_create_subscription_definition",
                        "iam_attach_user_policy",
                        "opsworks_disassociate_elastic_ip",
                        "rds_reset_parameter_group",
                        "cloudsearch_describe_availability_options",
                        "discovery_list_configurations",
                        "ec2_describe_route_tables",
                        "directconnect_delete_bgp_peer",
                        "directconnect_allocate_hosted_connection",
                        "cloudhsm_delete_hapg",
                        "elasticbeanstalk_restart_app_server",
                        "lightsail_get_instances",
                        "s3_set_host_header",
                        "pinpoint_update_endpoint",
                        "greengrass_create_logger_definition",
                        "sqs_create_queue",
                        "inspector_list_event_subscriptions",
                        "rds_add_tags_to_resource",
                        "apigateway_delete_deployment",
                        "cognito-idp_admin_list_devices",
                        "opsworks_tag_resource",
                        "rekognition_list_collections",
                        "r53_delete_hosted_zone",
                        "opsworks_describe_rds_db_instances",
                        "iot_list_topic_rules",
                        "lambda_list_event_source_mappings",
                        "inspector_create_assessment_target",
                        "health_describe_event_aggregates",
                        "ec2_reset_snapshot_attribute",
                        "rds_create_db_subnet_group",
                        "r53_zone_update_a",
                        "logs_put_destination",
                        "ec2_revoke_security_group",
                        "vpc_prefix_proxy_to_path",
                        "ec2_import_image",
                        "apigateway_delete_authorizer",
                        "elasticbeanstalk_delete_environment_configuration",
                        "s3_delete_bucket_policy",
                        "r53_create_zone",
                        "pinpoint_update_application_settings",
                        "elb_enable_availability_zones_for_load_balancer",
                        "waf_get_ip_set",
                        "elasticache_create_replication_group",
                        "storagegateway_cancel_archival",
                        "cloudsearch_update_availability_options",
                        "clouddirectory_attach_to_index",
                        "greengrass_get_group_certificate_authority",
                        "datapipeline_create_pipeline",
                        "ec2_create_vpc_endpoint",
                        "workdocs_update_document_version",
                        "cognito-sync_delete_dataset",
                        "r53_put_http_connection",
                        "rds_create_db_cluster",
                        "sqs_lookup",
                        "iot_deprecate_thing_type",
                        "swf_respond_activity_task_completed",
                        "gamelift_describe_player_sessions",
                        "ssm_describe_instance_information",
                        "devicefarm_list_tests",
                        "rds_modify_parameter_group",
                        "iam_detach_role_policy",
                        "ecs_register_container_instance",
                        "r53_zone_delete_cname",
                        "iot_delete_topic_rule",
                        "redshift_revoke_cluster_security_group_ingress",
                        "sdb_delete_attributes",
                        "glacier_list_vaults",
                        "dms_describe_replication_subnet_groups",
                        "servicecatalog_list_portfolios",
                        "waf_delete_rate_based_rule",
                        "servicecatalog_reject_portfolio_share",
                        "vpc_delete_subnet",
                        "apigateway_delete_usage_plan_key",
                        "s3_put_bucket_inventory_configuration",
                        "rds_create_dbinstance_read_replica",
                        "sms_delete_replication_job",
                        "apigateway_get_integration_response",
                        "codecommit_create_repository",
                        "iot_describe_thing_type",
                        "logs_put_log_events",
                        "elbv2_describe_target_group_attributes",
                        "snowball_cancel_job",
                        "emr_add_instance_fleet",
                        "elastictranscoder_delete_pipeline",
                        "cognito-idp_delete_user_pool",
                        "snowball_describe_cluster",
                        "iot_list_thing_types",
                        "sms_disassociate_connector",
                        "cloudsearch_index_documents",
                        "route53domains_list_domains",
                        "ssm_describe_association",
                        "r53_get_all_hosted_zones",
                        "sqs_set_queue_attributes",
                        "dax_list_tags",
                        "iam_list_access_keys",
                        "waf-regional_create_ip_set",
                        "s3_delete_bucket",
                        "cloudformation_describe_account_limits",
                        "cf_list_stack_resources",
                        "iam_get_user",
                        "snowball_get_snowball_usage",
                        "ec2_delete_tags",
                        "swf_describe_workflow_type",
                        "cognito-idp_verify_user_attribute",
                        "redshift_describe_cluster_parameters",
                        "es_create_elasticsearch_domain",
                        "ec2_describe_spot_instance_requests",
                        "apigateway_get_model_template",
                        "inspector_register_cross_account_access_role",
                        "cognito-identity_delete_identities",
                        "vpc_copy_snapshot",
                        "ec2_disassociate_vpc_cidr_block",
                        "elastictranscoder_test_role",
                        "waf_get_size_constraint_set",
                        "s3_get_bucket",
                        "pinpoint_get_apns_channel",
                        "elasticache_delete_cache_security_group",
                        "rds_describe_engine_default_cluster_parameters",
                        "machinelearning_describe_ml_models",
                        "logs_describe_destinations",
                        "workspaces_start_workspaces",
                        "greengrass_delete_group",
                        "devicefarm_renew_offering",
                        "sns_subscribe",
                        "apigateway_update_client_certificate",
                        "ses_set_identity_feedback_forwarding_enabled",
                        "devicefarm_get_remote_access_session",
                        "iam_create_saml_provider",
                        "glacier_get_data_retrieval_policy",
                        "lambda_get_policy",
                        "config_describe_config_rule_evaluation_status",
                        "athena_get_query_execution",
                        "redshift_delete_hsm_configuration",
                        "pinpoint_get_campaign",
                        "polly_get_lexicon",
                        "clouddirectory_delete_typed_link_facet",
                        "ec2_describe_stale_security_groups",
                        "ecr_put_image",
                        "iam_update_group",
                        "apigateway_get_rest_apis",
                        "rds_create_db_security_group",
                        "ssm_list_command_invocations",
                        "redshift_create_cluster_parameter_group",
                        "vpc_get_image_attribute",
                        "rds_copy_option_group",
                        "glacier_get_vault_access_policy",
                        "ds_start_schema_extension",
                        "codedeploy_list_deployment_instances",
                        "directconnect_describe_interconnects",
                        "rds_create_db_parameter_group",
                        "organizations_list_handshakes_for_account",
                        "gamelift_delete_game_session_queue",
                        "devicefarm_update_project",
                        "ssm_describe_effective_patches_for_patch_baseline",
                        "pinpoint_update_sms_channel",
                        "config_describe_compliance_by_config_rule",
                        "cloudsearch_define_suggester",
                        "ec2_unassign_ipv6_addresses",
                        "stepfunctions_get_activity_task",
                        "ds_create_directory",
                        "waf_update_rule",
                        "opsworkscm_disassociate_node",
                        "ssm_create_association_batch",
                        "ec2_cancel_bundle_task",
                        "sns_set_platform_application_attributes",
                        "autoscaling_set_instance_protection",
                        "pinpoint_delete_apns_channel",
                        "vpc_set_request_hook",
                        "s3_get_object",
                        "mturk_delete_qualification_type",
                        "codedeploy_update_application",
                        "rds_server_name",
                        "mturk_notify_workers",
                        "waf_create_byte_match_set",
                        "codepipeline_list_pipeline_executions",
                        "iot_get_policy",
                        "rds_restore_db_cluster_to_point_in_time",
                        "budgets_create_notification",
                        "gamelift_update_alias",
                        "cloudsearch_describe_service_access_policies",
                        "ecr_describe_images",
                        "cloudhsm_list_tags_for_resource",
                        "sqs_list_dead_letter_source_queues",
                        "lambda_untag_resource",
                        "iam_enable_mfa_device",
                        "opsworks_start_instance",
                        "support_add_communication_to_case",
                        "apigateway_get_domain_name",
                        "storagegateway_describe_gateway_information",
                        "ssm_update_document",
                        "elasticbeanstalk_describe_environment_resources",
                        "lex-models_delete_bot_alias",
                        "discovery_start_export_task",
                        "gamelift_request_upload_credentials",
                        "ssm_describe_patch_group_state",
                        "elastictranscoder_create_pipeline",
                        "storagegateway_add_cache",
                        "mturk_get_qualification_type",
                        "greengrass_get_connectivity_info",
                        "autoscaling_delete_tags",
                        "iam_list_users",
                        "organizations_list_policies",
                        "opsworks_unassign_volume",
                        "acm_delete_certificate",
                        "ssm_create_patch_baseline",
                        "codepipeline_create_pipeline",
                        "rds_describe_db_log_files",
                        "ec2_accept_reserved_instances_exchange_quote",
                        "glacier_list_tags_for_vault",
                        "dax_delete_parameter_group",
                        "apigateway_delete_client_certificate",
                        "storagegateway_add_working_storage",
                        "devicefarm_list_devices",
                        "iam_get_account_authorization_details",
                        "codepipeline_acknowledge_third_party_job",
                        "elbv2_describe_rules",
                        "acm_remove_tags_from_certificate",
                        "opsworks_update_instance",
                        "route53_delete_traffic_policy",
                        "ec2_modify_instance_placement",
                        "ec2_create_route",
                        "meteringmarketplace_batch_meter_usage",
                        "elbv2_remove_tags",
                        "dms_remove_tags_from_resource",
                        "apigateway_get_stage",
                        "ses_list_receipt_rule_sets",
                        "rds_describe_db_subnet_groups",
                        "storagegateway_disable_gateway",
                        "iam_delete_policy",
                        "autoscaling_update_auto_scaling_group",
                        "vpc_cancel_spot_instance_requests",
                        "cloudfront_create_streaming_distribution",
                        "rds_apply_pending_maintenance_action",
                        "iam_get_ssh_public_key",
                        "waf_create_ip_set",
                        "sns_remove_permission",
                        "vpc_create_subnet",
                        "dms_delete_replication_subnet_group",
                        "cf_encode_bool",
                        "waf-regional_associate_web_acl",
                        "cognito-sync_register_device",
                        "workdocs_get_current_user",
                        "cognito-identity_get_open_id_token",
                        "firehose_put_record_batch",
                        "ssm_create_document",
                        "mturk_delete_hit",
                        "opsworks_register_ecs_cluster",
                        "waf-regional_delete_size_constraint_set",
                        "vpc_create_internet_gateway",
                        "gamelift_update_fleet_attributes",
                        "lex-models_get_bot_aliases",
                        "iot_list_ca_certificates",
                        "waf_get_sql_injection_match_set",
                        "dms_describe_connections",
                        "cognito-idp_get_user_attribute_verification_code",
                        "rds_describe_db_clusters",
                        "ec2_create_reserved_instances_listing",
                        "storagegateway_describe_tapes",
                        "clouddirectory_list_object_policies",
                        "snowball_list_cluster_jobs",
                        "vpc_get_spot_datafeed_subscription",
                        "athena_get_query_results",
                        "kms_disable_key_rotation",
                        "vpc_get_all_route_tables",
                        "vpc_reboot_instances",
                        "devicefarm_list_uploads",
                        "apigateway_update_integration_response",
                        "cf_prefix_proxy_to_path",
                        "support_refresh_trusted_advisor_check",
                        "ec2_disassociate_iam_instance_profile",
                        "ec2_reboot_instances",
                        "sqs_remove_permission",
                        "ec2_describe_instances",
                        "route53_get_reusable_delegation_set",
                        "ec2_describe_moving_addresses",
                        "r53_delete_health_check",
                        "apigateway_create_resource",
                        "redshift_delete_cluster_snapshot",
                        "rds_modify_db_subnet_group",
                        "dms_reload_tables",
                        "waf-regional_create_size_constraint_set",
                        "s3_get_bucket_cors",
                        "servicecatalog_describe_provisioned_product",
                        "ec2_reset_image_attribute",
                        "greengrass_get_logger_definition",
                        "redshift_create_cluster",
                        "ec2_cancel_reserved_instances_listing",
                        "lightsail_get_active_names",
                        "route53domains_get_contact_reachability_status",
                        "autoscaling_describe_load_balancers",
                        "apigateway_create_domain_name",
                        "iam_list_attached_role_policies",
                        "kms_list_grants",
                        "clouddirectory_detach_from_index",
                        "directconnect_associate_virtual_interface",
                        "storagegateway_update_nfs_file_share",
                        "vpc_get_list",
                        "kinesis_increase_stream_retention_period",
                        "iam_get_path",
                        "iot_replace_topic_rule",
                        "greengrass_create_function_definition",
                        "s3_put_bucket_website",
                        "ec2_revoke_security_group_egress",
                        "cloudtrail_get_trail_status",
                        "ec2_handle_proxy",
                        "ec2_describe_fpga_images",
                        "rds_promote_read_replica",
                        "swf_respond_activity_task_canceled",
                        "rds_create_dbsecurity_group",
                        "sqs_build_list_params",
                        "elasticbeanstalk_retrieve_environment_info",
                        "elasticbeanstalk_rebuild_environment",
                        "ecs_delete_attributes",
                        "cloudformation_cancel_update_stack",
                        "opsworks_set_permission",
                        "gamelift_describe_fleet_capacity",
                        "rekognition_detect_faces",
                        "vpc_build_tag_param_list",
                        "rds_describe_db_cluster_snapshot_attributes",
                        "sqs_get_list",
                        "elasticbeanstalk_delete_application_version",
                        "codepipeline_get_third_party_job_details",
                        "s3_put_bucket_lifecycle_configuration",
                        "appstream_list_associated_stacks",
                        "rekognition_get_celebrity_info",
                        "ec2_get_all_instance_types",
                        "pinpoint_delete_sms_channel",
                        "shield_describe_protection",
                        "r53_prefix_proxy_to_path",
                        "application-autoscaling_describe_scaling_activities",
                        "elbv2_set_rule_priorities",
                        "s3_put_bucket_accelerate_configuration",
                        "elb_set_load_balancer_policies_of_listener",
                        "rds_modify_db_snapshot",
                        "ec2_describe_import_image_tasks",
                        "ssm_describe_maintenance_window_targets",
                        "iot_enable_topic_rule",
                        "redshift_delete_tags",
                        "snowball_create_cluster",
                        "logs_delete_metric_filter",
                        "sqs_server_name",
                        "swf_list_closed_workflow_executions",
                        "cloudfront_get_streaming_distribution_config",
                        "ec2_get_all_ramdisks",
                        "waf_list_web_ac_ls",
                        "route53_list_traffic_policy_instances",
                        "ec2_modify_vpc_endpoint",
                        "ssm_get_patch_baseline",
                        "logs_delete_retention_policy",
                        "redshift_create_event_subscription",
                        "ec2_describe_bundle_tasks",
                        "batch_delete_job_queue",
                        "ec2_describe_nat_gateways",
                        "iot_get_topic_rule",
                        "opsworks_set_time_based_auto_scaling",
                        "redshift_describe_cluster_subnet_groups",
                        "opsworks_update_my_user_profile",
                        "iot_update_thing",
                        "iam_get_response",
                        "ecs_list_task_definitions",
                        "codebuild_batch_get_projects",
                        "servicecatalog_delete_constraint",
                        "pinpoint_get_campaign_version",
                        "vpc_modify_vpc_attribute",
                        "cf_get_utf8_value",
                        "ec2_get_all_instance_status",
                        "ec2_describe_account_attributes",
                        "greengrass_create_group_certificate_authority",
                        "ec2_create_vpn_gateway",
                        "organizations_describe_policy",
                        "events_put_events",
                        "kinesis_add_tags_to_stream",
                        "batch_update_job_queue",
                        "codedeploy_batch_get_application_revisions",
                        "devicefarm_delete_upload",
                        "elasticache_modify_cache_subnet_group",
                        "pinpoint_get_endpoint",
                        "ses_set_receipt_rule_position",
                        "s3_list_multipart_uploads",
                        "cloudsearch_update_service_access_policies",
                        "r53_get_proxy_url_with_auth",
                        "pinpoint_get_apns_sandbox_channel",
                        "iam_list_attached_user_policies",
                        "cloudsearch_delete_index_field",
                        "elasticbeanstalk_describe_environment_managed_action_history",
                        "cognito-sync_list_records",
                        "ssm_describe_instance_associations_status",
                        "waf-regional_delete_web_acl",
                        "cloudwatch_get_metric_statistics",
                        "inspector_delete_assessment_run",
                        "r53_zone_get_nameservers",
                        "cognito-idp_update_user_pool",
                        "storagegateway_delete_bandwidth_rate_limit",
                        "s3_close",
                        "iot-data_delete_thing_shadow",
                        "mturk_update_qualification_type",
                        "ssm_describe_instance_patch_states",
                        "sqs_send_message_batch",
                        "dax_describe_parameter_groups",
                        "codedeploy_get_deployment_group",
                        "dax_describe_subnet_groups",
                        "mturk_list_hi_ts_for_qualification_type",
                        "workdocs_create_notification_subscription",
                        "greengrass_update_subscription_definition",
                        "lightsail_download_default_key_pair",
                        "ses_delete_receipt_rule",
                        "lightsail_delete_instance_snapshot",
                        "apigateway_get_documentation_part",
                        "cur_delete_report_definition",
                        "ecr_batch_check_layer_availability",
                        "vpc_accept_vpc_peering_connection",
                        "ds_verify_trust",
                        "discovery_list_server_neighbors",
                        "autoscaling_delete_scheduled_action",
                        "iam_create_policy",
                        "redshift_describe_logging_status",
                        "inspector_describe_assessment_targets",
                        "s3_list_object_versions",
                        "autoscaling_describe_lifecycle_hooks",
                        "iam_upload_signing_cert",
                        "ec2_import_snapshot",
                        "opsworks_register_rds_db_instance",
                        "cf_build_list_params",
                        "apigateway_get_sdk_types",
                        "budgets_create_subscriber",
                        "rds_describe_event_categories",
                        "ec2_create_network_acl_entry",
                        "clouddirectory_update_typed_link_facet"
                    ]
                },
                "aliases": {
                    "count": 3,
                    "resources": [
                        "ec2_get_all_instances",
                        "ec2_stop_instances",
                        "ec2_start_instances"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "ServiceNotificationsSensor",
                        "AWSSQSSensor"
                    ]
                },
                "tests": {
                    "count": 5,
                    "resources": [
                        "test_action_get_bucket.py",
                        "test_sensor_sqs.py",
                        "test_action_cloudformation.py",
                        "test_action_vpc_get_all_subnets.py",
                        "aws_base_action_test_case.py"
                    ]
                }
            },
            "description": "st2 content pack containing Amazon Web Services integrations.",
            "email": "info@stackstorm.com",
            "keywords": [
                "aws",
                "amazon web services",
                "amazon",
                "ec2",
                "sqs",
                "sns",
                "route53",
                "cloud",
                "iam",
                "vpc",
                "s3",
                "CloudFormation",
                "RDS",
                "SQS",
                "lambda",
                "kinesis"
            ],
            "name": "aws",
            "ref": "aws",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-aws",
            "version": "1.0.2"
        },
        "azure": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 16,
                    "resources": [
                        "create_vm",
                        "put_scaleset_size",
                        "delete_container",
                        "create_linked_resource_url",
                        "delete_object",
                        "list_container_objects",
                        "destroy_vm",
                        "create_resource",
                        "list_resource_groups",
                        "create_container",
                        "get_scaleset_size",
                        "reboot_vm",
                        "list_vms",
                        "list_containers",
                        "upload_file",
                        "list_public_ips"
                    ]
                },
                "aliases": {
                    "count": 2,
                    "resources": [
                        "put_scale_size",
                        "get_scale_size"
                    ]
                }
            },
            "description": "st2 content pack containing Microsoft Azure integrations.",
            "email": "info@stackstorm.com",
            "keywords": [
                "microsoft",
                "azure",
                "cloud",
                "libcloud",
                "servers",
                "virtual machines",
                "azure virtual machines",
                "azurerm"
            ],
            "name": "azure",
            "ref": "azure",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-azure",
            "version": "0.3.1"
        },
        "bitbucket": {
            "author": "Aamir",
            "content": {
                "actions": {
                    "count": 16,
                    "resources": [
                        "delete_repo",
                        "update_service",
                        "archive_repo",
                        "delete_ssh_key",
                        "list_ssh_keys",
                        "list_repos",
                        "list_services",
                        "list_branches",
                        "create_issue",
                        "associate_ssh_key",
                        "delete_services",
                        "create_repo",
                        "delete_issues",
                        "list_issues",
                        "update_issue",
                        "create_service"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "post_receive_webhook"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "RepositorySensor"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_repository_sensor.py"
                    ]
                }
            },
            "contributors": [
                "Edward Medvedev <edward.medvedev@gmail.com>",
                "Hiroyasu OHYAMA <user.localhost2000@gmail.com>"
            ],
            "description": "Pack which allows integration with Bitbucket.",
            "email": "raza.aamir01@gmail.com",
            "keywords": [
                "bitbucket",
                "vcs",
                "mercurial",
                "git",
                "source control"
            ],
            "name": "bitbucket",
            "ref": "bitbucket",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-bitbucket",
            "stackstorm_version": ">=2.1.0",
            "version": "0.5.4"
        },
        "bitcoin": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "getwalletinfo",
                        "sendtoaddresss",
                        "getaccountaddress"
                    ]
                }
            },
            "description": "bitcoin integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "bitcoin"
            ],
            "name": "bitcoin",
            "ref": "bitcoin",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-bitcoin",
            "version": "0.1.0"
        },
        "cassandra": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 12,
                    "resources": [
                        "clear_cass_data",
                        "remove_gossip_peer_info",
                        "nodetool",
                        "is_seed_node",
                        "wait_for_port_open",
                        "append_replace_address_env_file",
                        "list_seed_nodes",
                        "start_dse",
                        "replace_host",
                        "stop_dse",
                        "get_dse_status",
                        "remove_replace_address_env_file"
                    ]
                }
            },
            "description": "Apache Cassandra Integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "datastax",
                "cassandra"
            ],
            "name": "cassandra",
            "ref": "cassandra",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cassandra",
            "version": "0.1.1"
        },
        "check_mk": {
            "author": "codyaray",
            "content": {
                "rules": {
                    "count": 1,
                    "resources": [
                        "sample.on_disk_full_check"
                    ]
                },
                "triggers": {
                    "count": 1,
                    "resources": [
                        "event_handler"
                    ]
                }
            },
            "description": "Check_MK integrations",
            "email": "talktome@codyaray.com",
            "keywords": [
                "check_mk",
                "monitoring",
                "alerting"
            ],
            "name": "check_mk",
            "ref": "check_mk",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-check_mk",
            "version": "0.2.1"
        },
        "checkpoint": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "create_checkpoint_policy",
                        "delete_checkpoint_policy"
                    ]
                },
                "rules": {
                    "count": 2,
                    "resources": [
                        "create_policy",
                        "delete_policy"
                    ]
                }
            },
            "description": "St2 integration with CheckPoint Firewall",
            "email": "info@stackstorm.com",
            "keywords": [
                "firewalls",
                "threat",
                "security"
            ],
            "name": "checkpoint",
            "ref": "checkpoint",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-checkpoint",
            "version": "0.0.1"
        },
        "chef": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "ohai",
                        "solo",
                        "apply",
                        "install",
                        "client"
                    ]
                }
            },
            "description": "Chef Configuration Management",
            "email": "info@stackstorm.com",
            "keywords": [
                "chef",
                "chef-client",
                "chef-solo",
                "chef-apply",
                "cfg management",
                "configuration management",
                "opscode"
            ],
            "name": "chef",
            "ref": "chef",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-chef",
            "version": "0.1.2"
        },
        "circle_ci": {
            "author": "StackStorm dev",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "get_build_number",
                        "run_build",
                        "retry_build",
                        "get_build_info",
                        "cancel_build",
                        "wait_until_build_finishes"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "CircleCIWebhookSensor"
                    ]
                },
                "tests": {
                    "count": 2,
                    "resources": [
                        "test_get_build_number_action.py",
                        "test_wait_until_build_finishes.py"
                    ]
                }
            },
            "description": "CircleCI CI/CD Pipeline",
            "email": "support@stackstorm.com",
            "keywords": [
                "circle",
                "circle ci",
                "continous integration",
                "ci"
            ],
            "name": "Circle CI",
            "ref": "circle_ci",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-circle_ci",
            "version": "0.5.2"
        },
        "cisco_aci": {
            "author": "Paul Mulvihill",
            "content": {
                "actions": {
                    "count": 15,
                    "resources": [
                        "setup_epg",
                        "get_tenants",
                        "get_assigned_ports",
                        "get_static_bindings",
                        "link_domain",
                        "create_static_binding",
                        "get_sessionid",
                        "create_epg",
                        "get_epgs",
                        "create_ap",
                        "create_bd",
                        "get_bds",
                        "get_aps",
                        "test_endpoint",
                        "get_vrfs"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "Setup ACI EPG"
                    ]
                },
                "tests": {
                    "count": 15,
                    "resources": [
                        "test_action_test_endpoint.py",
                        "test_action_create_static_binding.py",
                        "test_action_link_domain.py",
                        "test_action_get_static_bindings.py",
                        "test_action_get_sessionid.py",
                        "aci_base_action_test_case.py",
                        "test_action_get_tenants.py",
                        "test_action_create_ap.py",
                        "test_action_get_bds.py",
                        "test_action_get_aps.py",
                        "test_action_create_epg.py",
                        "test_action_get_vrfs.py",
                        "test_action_create_bd.py",
                        "test_action_get_epgs.py",
                        "test_action_get_assigned_ports.py"
                    ]
                }
            },
            "description": "Cisco ACI pack",
            "email": "paul.mulvihill@pulsant.com",
            "keywords": [
                "cisco",
                "aci",
                "networking"
            ],
            "name": "cisco_aci",
            "ref": "cisco_aci",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cisco_aci",
            "version": "0.1.3"
        },
        "cisco_spark": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 20,
                    "resources": [
                        "delete_room",
                        "update_team",
                        "list_rooms",
                        "get_team",
                        "handle_webhook",
                        "update_room",
                        "get_webhook",
                        "delete_webhook",
                        "create_room",
                        "delete_team",
                        "create_team",
                        "delete_message",
                        "send_message",
                        "create_webhook",
                        "update_webhook",
                        "get_room",
                        "list_teams",
                        "get_message",
                        "list_messages",
                        "list_webhooks"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "chatops_webhook"
                    ]
                }
            },
            "description": "cisco spark communication pack",
            "email": "anthonyshaw@apache.org",
            "keywords": [
                "cisco",
                "spark",
                "video",
                "chat",
                "bot"
            ],
            "name": "cisco_spark",
            "ref": "cisco_spark",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cisco_spark",
            "version": "0.5.0"
        },
        "clicrud": {
            "author": "davidjohngee",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "ops_command",
                        "config_command"
                    ]
                }
            },
            "description": "CLICRUD integration for ST2",
            "email": "david.gee@ipengineer.net",
            "keywords": [
                "Extreme",
                "icx",
                "mlx",
                "cli",
                "clicrud",
                "vrouter",
                "vyatta"
            ],
            "name": "clicrud",
            "ref": "clicrud",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-clicrud",
            "version": "0.3.3"
        },
        "cloudflare": {
            "author": "Jon Middleton",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "get_ips"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_get_ips.py"
                    ]
                }
            },
            "description": "Cloudflare CDN",
            "email": "jon.middleton@pulsant.com",
            "keywords": [
                "cloudflare"
            ],
            "name": "cloudflare",
            "ref": "cloudflare",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cloudflare",
            "version": "0.3.3"
        },
        "cloudshark": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "upload"
                    ]
                }
            },
            "description": "CloudShark Packet Analysis",
            "email": "info@stackstorm.com",
            "keywords": [
                "cloudshark",
                "pcap",
                "wireshark",
                "tcpdump"
            ],
            "name": "CloudShark",
            "ref": "cloudshark",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cloudshark",
            "version": "0.1.0"
        },
        "consul": {
            "author": "jfryman",
            "content": {
                "actions": {
                    "count": 37,
                    "resources": [
                        "agent_maintenance",
                        "session_renew",
                        "catalog_services",
                        "catalog_nodes",
                        "agent_force_leave",
                        "agent_join",
                        "session_list",
                        "health_service",
                        "catalog_register",
                        "acl_destroy",
                        "session_create",
                        "kv_delete",
                        "catalog_datacenters",
                        "acl_list",
                        "health_node",
                        "health_checks",
                        "service_maintenance",
                        "agent_members",
                        "catalog_deregister",
                        "catalog_node",
                        "session_node",
                        "acl_create",
                        "kv_put",
                        "event_list",
                        "custom_lock",
                        "service_deregister",
                        "event_fire",
                        "custom_unlock",
                        "catalog_service",
                        "health_state",
                        "kv_list",
                        "agent_checks",
                        "session_destroy",
                        "service_register",
                        "kv_get",
                        "session_info",
                        "agent_services"
                    ]
                }
            },
            "description": "consul",
            "email": "james@fryman.io",
            "name": "consul",
            "ref": "consul",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-consul",
            "version": "0.6.3"
        },
        "csv": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "parse_file",
                        "format",
                        "parse"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_parse.py"
                    ]
                }
            },
            "description": "st2 content pack containing CSV integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "csv",
                "serialization",
                "deserialization",
                "text processing"
            ],
            "name": "csv",
            "ref": "csv",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-csv",
            "version": "0.4.2"
        },
        "cubesensors": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_device",
                        "list_devices",
                        "get_measurements"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "cubesensors_device_low_charge_notification"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "CubeSensorsMeasurementsSensor"
                    ]
                }
            },
            "description": "st2 content pack containing CubeSensors integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "cubesensors",
                "iot",
                "smart home",
                "sensors",
                "probes",
                "home automation"
            ],
            "name": "cubesensors",
            "ref": "cubesensors",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-cubesensors",
            "version": "0.3.1"
        },
        "datadog": {
            "author": "Lisa Bekdache",
            "content": {
                "actions": {
                    "count": 51,
                    "resources": [
                        "create_embed",
                        "get_all_timeboards",
                        "get_screenboard",
                        "unmute_all_monitors",
                        "delete_monitor",
                        "enable_embed",
                        "get_all_screenboards",
                        "unmute_host",
                        "get_event",
                        "create_screenboard",
                        "create_user",
                        "create_comment",
                        "create_timeboard",
                        "get_monitor",
                        "add_host_tags",
                        "delete_screenboard",
                        "mute_host",
                        "get_all_users",
                        "delete_timeboard",
                        "query_event_stream",
                        "mute_monitor",
                        "get_timeboard",
                        "update_host_tags",
                        "delete_comment",
                        "get_user",
                        "disable_user",
                        "edit_comment",
                        "delete_event",
                        "create_monitor",
                        "revoke_embed",
                        "post_ts_points",
                        "post_check_run",
                        "get_embed",
                        "get_tags",
                        "schedule_monitor_downtime",
                        "unmute_monitor",
                        "update_user",
                        "revoke_shared_screenboard",
                        "mute_all_monitors",
                        "search",
                        "remove_host_tags",
                        "get_all_embeds",
                        "share_screenboard",
                        "update_timeboard",
                        "edit_monitor",
                        "snapshot",
                        "get_host_tags",
                        "get_all_monitors",
                        "update_screenboard",
                        "post_event",
                        "query_ts_points"
                    ]
                }
            },
            "description": "datadog",
            "email": "lisa.bekdache@dailymotion.com",
            "keywords": [
                "monitoring",
                "alerting",
                "saas"
            ],
            "name": "datadog",
            "ref": "datadog",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-datadog",
            "version": "0.1.3"
        },
        "device42": {
            "author": "Device42 Inc.",
            "content": {
                "actions": {
                    "count": 14,
                    "resources": [
                        "get_lifecycle_events",
                        "get_lifecycle_event_objects",
                        "update_object_category_by_lifecycle_id",
                        "get_dns_zone",
                        "get_device_by_id",
                        "update_device",
                        "create_or_edit_ip",
                        "write_pxe_cfg",
                        "suggest_and_create_ip",
                        "device_name_list",
                        "create_dhcp_lease_reservation",
                        "suggest_next_ip",
                        "add_device_lifecycle",
                        "networking_lifecycle_automation"
                    ]
                },
                "rules": {
                    "count": 4,
                    "resources": [
                        "networking_lifecycle_automation_rule",
                        "lifecycle_triggered_object_category_change",
                        "d42_webhook_responder",
                        "device_created_initial_lifecycle"
                    ]
                }
            },
            "description": "Device42 Actions and Rules for StackStorm",
            "email": "support@device42.com",
            "name": "device42",
            "ref": "device42",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-device42",
            "version": "0.7.0"
        },
        "digitalocean": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 14,
                    "resources": [
                        "get_all_regions",
                        "get_all_droplets",
                        "get_action",
                        "get_all_sizes",
                        "get_my_images",
                        "get_domain",
                        "get_ssh_key",
                        "get_all_domains",
                        "get_global_images",
                        "get_all_images",
                        "get_all_sshkeys",
                        "get_data",
                        "get_image",
                        "get_droplet"
                    ]
                },
                "tests": {
                    "count": 2,
                    "resources": [
                        "digitalocean_base_action_test_case.py",
                        "test_do.py"
                    ]
                }
            },
            "description": "st2 content pack containing Digital Ocean integration.",
            "email": "info@stackstorm.com",
            "name": "Digital Ocean",
            "ref": "digitalocean",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-digitalocean",
            "version": "0.3.1"
        },
        "dimensiondata": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 67,
                    "resources": [
                        "delete_vlan",
                        "create_vm_mcp1",
                        "create_vlan",
                        "create_vm_mcp2",
                        "get_vlan_by_name",
                        "get_image",
                        "destroy_vm",
                        "update_monitoring_plan",
                        "list_pool_members",
                        "get_network_domain_by_name",
                        "add_storage_to_vm",
                        "create_firewall_rule",
                        "create_network_domain",
                        "create_public_ip_block",
                        "enable_monitoring",
                        "update_disk_size",
                        "get_network_by_name",
                        "get_image_by_name",
                        "list_balancers",
                        "list_vms",
                        "disable_monitoring",
                        "start_vm",
                        "balancer_detach_member",
                        "clone_vm_to_image",
                        "create_pool_member",
                        "delete_network_domain",
                        "get_vm_by_name",
                        "list_firewall_rules",
                        "shutdown_vm",
                        "delete_vlan",
                        "update_disk_speed",
                        "reset_vm",
                        "list_network_domains",
                        "get_balancer",
                        "balancer_delete_node",
                        "get_ipv6_address_of_vm",
                        "balancer_attach_member",
                        "list_networks",
                        "list_images",
                        "remove_storage_from_vm",
                        "attach_node_to_vlan",
                        "reconfigure_vm",
                        "update_vm",
                        "create_balancer",
                        "destroy_nic",
                        "wait_for_server_operation",
                        "list_public_ip_blocks",
                        "create_network",
                        "balancer_list_members",
                        "create_vip_node",
                        "delete_network",
                        "get_network_domain",
                        "list_vlans",
                        "list_locations",
                        "reboot_vm",
                        "list_balancer_nodes",
                        "get_vm",
                        "list_customer_images",
                        "list_default_health_monitors",
                        "power_off_vm",
                        "get_public_ip_block",
                        "update_vm_tools",
                        "get_balancer_by_name",
                        "configure",
                        "list_nat_rules",
                        "create_nat_rule",
                        "get_location_by_id"
                    ]
                }
            },
            "description": "Dimension Data Cloud integrations",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "cloud",
                "load balancers",
                "dimension data"
            ],
            "name": "dimensiondata",
            "ref": "dimensiondata",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-dimensiondata",
            "version": "0.1.2"
        },
        "docker": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "pull_image",
                        "push_image",
                        "build_image"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "DockerSensor"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_sensor_docker_sensor.py"
                    ]
                }
            },
            "description": "Docker Container integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "docker",
                "containers",
                "virtualization",
                "cgroups"
            ],
            "name": "docker",
            "ref": "docker",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-docker",
            "version": "0.3.2"
        },
        "dripstat": {
            "author": "James Fryman",
            "content": {
                "rules": {
                    "count": 1,
                    "resources": [
                        "test_rule"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "DripstatAlertSensor"
                    ]
                }
            },
            "description": "Integration with the Dripstat Application Performance Monitoring tool",
            "email": "james@fryman.io",
            "keywords": [
                "dripstat",
                "java",
                "monitoring",
                "performance monitoring"
            ],
            "name": "dripstat",
            "ref": "dripstat",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-dripstat",
            "version": "0.2.0"
        },
        "duo": {
            "author": "Jon Middleton",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "auth_wrap_demo",
                        "auth_chatops",
                        "auth_check",
                        "auth_auth",
                        "announce_success",
                        "auth_ping"
                    ]
                },
                "aliases": {
                    "count": 4,
                    "resources": [
                        "auth_demo",
                        "auth_check",
                        "auth_auth",
                        "auth_ping"
                    ]
                },
                "tests": {
                    "count": 4,
                    "resources": [
                        "test_action_auth_check.py",
                        "duo_base_test_case.py",
                        "test_action_auth_auth.py",
                        "test_action_auth_ping.py"
                    ]
                }
            },
            "description": "Use Duo 2FA authenication with StackStorm actions.",
            "email": "jon.middleton@pulsant.com",
            "keywords": [
                "2Fa",
                "Duo"
            ],
            "name": "duo",
            "ref": "duo",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-duo",
            "version": "0.3.2"
        },
        "elasticsearch": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 21,
                    "resources": [
                        "indices.replicas",
                        "indices.allocation",
                        "indices.index_settings",
                        "indices.reindex",
                        "indices.show",
                        "cluster.cluster_routing",
                        "snapshots.delete_snapshots",
                        "snapshots.show",
                        "snapshots.restore",
                        "indices.optimize",
                        "search.body",
                        "indices.shrink",
                        "indices.close",
                        "search.q",
                        "indices.create_index",
                        "indices.alias",
                        "indices.open",
                        "indices.snapshot",
                        "indices.delete_indices",
                        "indices.rollover",
                        "indices.forcemerge"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "ElasticsearchCountSensor"
                    ]
                }
            },
            "description": "st2 elasticsearch integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "elasticsearch",
                "curator",
                "databases"
            ],
            "name": "elasticsearch",
            "ref": "elasticsearch",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-elasticsearch",
            "version": "1.1.0"
        },
        "email": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "send_email"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "Sample"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "SMTPSensor",
                        "IMAPSensor"
                    ]
                }
            },
            "description": "E-Mail Actions/Sensors for StackStorm",
            "email": "james@stackstorm.com",
            "keywords": [
                "email",
                "messaging",
                "imap"
            ],
            "name": "email",
            "ref": "email",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-email",
            "version": "1.0.3"
        },
        "excel": {
            "author": "Tim Braly",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "get_keys_for_columns",
                        "get_variables",
                        "set_variables",
                        "get_keys_for_rows",
                        "get_sheets"
                    ]
                }
            },
            "description": "Read and Write Excel spreadsheets",
            "email": "tbraly@brocade.com",
            "name": "excel",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-excel",
            "version": "0.2.4"
        },
        "exos": {
            "author": "Extreme Networks",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "cmd"
                    ]
                }
            },
            "description": "Actions for managing Extreme Networks EXOS devices",
            "email": "support@extremenetworks.com",
            "keywords": [
                "exos",
                "extreme",
                "networking"
            ],
            "name": "EXOS",
            "ref": "exos",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-exos",
            "version": "0.0.2"
        },
        "fireeye": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "view_ax_config",
                        "get_submission_results",
                        "submit_malware",
                        "get_submission_status",
                        "get_alert_query"
                    ]
                }
            },
            "description": "FireEye CM Series Integration",
            "email": "james@stackstorm.com",
            "keywords": [
                "security"
            ],
            "name": "fireeye",
            "ref": "fireeye",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-fireeye",
            "version": "0.3.1"
        },
        "foreman": {
            "author": "Daniel Chamot",
            "content": {
                "actions": {
                    "count": 682,
                    "resources": [
                        "hosts.hosts_bulk_actions_add_subscriptions",
                        "repositories.republish",
                        "organizations.activation_keys_index",
                        "puppetclasses.smart_class_parameters_index",
                        "hosts.host_errata_index",
                        "hostgroups.update",
                        "compute_resources.id_available_storage_available_storage_podspods",
                        "products.show",
                        "job_templates.update",
                        "products.repository_sets_index",
                        "smart_class_parameters.index",
                        "sync_plans.update",
                        "content_views.content_view_puppet_modules_index",
                        "repositories.import_uploads",
                        "common_parameters.index",
                        "hostgroups.template_combinations_create",
                        "mail_notifications.index",
                        "environments.lifecycle_environments_destroy",
                        "hostgroups.clone",
                        "compute_resources.available_storage_domains",
                        "products.destroy",
                        "settings.update",
                        "content_view_versions.index",
                        "content_view_filters.content_view_filter_rules_ontent_view_updatefilters",
                        "content_view_filters.destroy",
                        "content_views.content_view_filters_ontent_destroyviews",
                        "locations.subnets_index",
                        "sync_plans.products_index",
                        "hosts.enc",
                        "config_templates.template_combinations_config_template_id_template_showcombinations",
                        "job_templates.index",
                        "templates.template_inputs_create",
                        "fact_values.index",
                        "discovery_rules.index",
                        "content_views.remove",
                        "domains.destroy",
                        "users.destroy",
                        "hosts.hosts_bulk_actions_remove_subscriptions",
                        "provisioning_templates.index",
                        "discovery_rules.destroy",
                        "content_views.content_view_puppet_modules_ontent_showviews",
                        "compare.package_groups_compare",
                        "organizations.content_views_index",
                        "sync_plans.sync",
                        "content_views.docker_tags_ontent_indexviews",
                        "hosts.host_packages_index",
                        "compute_resources.available_images",
                        "organizations.parameters_index",
                        "repositories.destroy",
                        "operatingsystems.index",
                        "capsules.capsule_content_available_lifecycle_environments",
                        "architectures.show",
                        "remote_execution_features.update",
                        "environments.lifecycle_environments_update",
                        "hostgroups.create",
                        "systems.index",
                        "hosts.host_packages_remove",
                        "ostree_branches.show",
                        "discovered_hosts.facts",
                        "host_collections.create",
                        "hostgroups.hosts_index",
                        "domains.interfaces_index",
                        "hosts.index",
                        "hosts.host_subscriptions_remove_subscriptions",
                        "operatingsystems.parameters_create",
                        "config_templates.create",
                        "ptables.clone",
                        "hostgroups.show",
                        "environments.lifecycle_environments_show",
                        "domains.parameters_domain_id_showparameters",
                        "compute_resources.images_compute_resource_id_destroyimages",
                        "hostgroups.puppetclasses_hostgroup_id_showpuppetclasses",
                        "smart_proxies.import_puppetclasses",
                        "organizations.repo_discover",
                        "subnets.index",
                        "compute_resources.compute_attributes_create",
                        "hosts.hosts_bulk_actions_destroy_hosts",
                        "repositories.content_uploads_epositories",
                        "common_parameters.destroy",
                        "content_views.show",
                        "operatingsystems.os_default_templates_operatingsystem_id_os_default_updatetemplates",
                        "content_views.available_puppet_modules",
                        "content_views.copy",
                        "job_invocations.index",
                        "products.products_bulk_actions_sync_products",
                        "discovered_hosts.auto_provision",
                        "content_views.repositories_index",
                        "content_view_filters.index",
                        "roles.create",
                        "config_templates.template_combinations_index",
                        "environments.template_combinations_create",
                        "subnets.update",
                        "organizations.parameters_organization_id_destroyparameters",
                        "content_view_filters.content_view_filter_rules_ontent_view_destroyfilters",
                        "hosts.puppetclasses_index",
                        "activation_keys.remove_host_collections",
                        "repositories.package_groups_epositories",
                        "operatingsystems.os_default_templates_operatingsystem_id_os_default_destroytemplates",
                        "hosts.host_subscriptions_add_subscriptions",
                        "puppetclasses.show",
                        "gpg_keys.content",
                        "provisioning_templates.clone",
                        "operatingsystems.images_index",
                        "puppet_modules.index",
                        "smart_proxies.index",
                        "operatingsystems.os_default_templates_operatingsystem_id_os_default_showtemplates",
                        "content_view_versions.incremental_update",
                        "repositories.docker_manifests_epositories",
                        "config_reports.create",
                        "products.index",
                        "models.index",
                        "package_groups.index",
                        "repositories.docker_tags_index",
                        "provisioning_templates.os_default_templates_index",
                        "environments.activation_keys_index",
                        "realms.index",
                        "ptables.revision",
                        "locations.parameters_reset",
                        "puppetclasses.environments_index",
                        "docker_manifests.index",
                        "organizations.parameters_reset",
                        "hostgroups.parameters_hostgroup_id_showparameters",
                        "operatingsystems.parameters_operatingsystem_id_showparameters",
                        "provisioning_templates.operatingsystems_index",
                        "discovered_hosts.index",
                        "hostgroups.index",
                        "bookmarks.show",
                        "activation_keys.subscriptions_create",
                        "hostgroups.parameters_reset",
                        "smart_variables.override_values_smart_variable_id_override_showvalues",
                        "content_views.content_view_puppet_modules_ontent_destroyviews",
                        "hosts.interfaces_host_id_updateinterfaces",
                        "subscriptions.show",
                        "locations.parameters_location_id_updateparameters",
                        "domains.parameters_domain_id_destroyparameters",
                        "models.destroy",
                        "compliance.foreman_openscap_arf_reports_show",
                        "gpg_keys.index",
                        "repositories.sync_complete",
                        "hosts.id_templatetemplate",
                        "gpg_keys.create",
                        "reports.create",
                        "ptables.create",
                        "repositories.create",
                        "compute_resources.images_index",
                        "organizations.provisioning_templates_index",
                        "content_views.available_puppet_module_names",
                        "discovered_hosts.destroy",
                        "operatingsystems.update",
                        "content_view_filters.docker_tags_index",
                        "content_view_filters.packages_index",
                        "ostree_branches.index",
                        "templates.foreign_input_sets_create",
                        "compare.packages_compare",
                        "permissions.show",
                        "gpg_keys.destroy",
                        "organizations.host_collections_index",
                        "job_templates.revision",
                        "content_views.create",
                        "locations.ptables_index",
                        "activation_keys.create",
                        "organizations.ptables_index",
                        "organizations.sync_plans_rganizations",
                        "puppetclasses.smart_variables_index",
                        "hostgroups.parameters_hostgroup_id_updateparameters",
                        "hosts.power",
                        "locations.parameters_create",
                        "config_templates.update",
                        "usergroups.create",
                        "operatingsystems.os_default_templates_index",
                        "compute_resources.create",
                        "hosts.host_packages_install",
                        "organizations.media_index",
                        "environments.smart_proxies_environment_id_smart_import_puppetclassesproxies",
                        "template_combinations.show",
                        "sync_plans.index",
                        "content_views.packages_ontent_indexviews",
                        "organizations.products_index",
                        "hosts.puppetrun",
                        "compute_resources.available_clusters",
                        "organizations.lifecycle_environments_rganizations",
                        "systems.releases",
                        "organizations.subnets_index",
                        "smart_variables.override_values_smart_variable_id_override_updatevalues",
                        "filters.index",
                        "smart_variables.override_values_create",
                        "bookmarks.create",
                        "gpg_keys.update",
                        "filters.show",
                        "domains.show",
                        "content_view_versions.show",
                        "compute_resources.compute_attributes_compute_resource_id_compute_createprofiles",
                        "hosts.create",
                        "hosts.host_errata_apply",
                        "puppetclasses.destroy",
                        "hostgroups.parameters_hostgroup_id_destroyparameters",
                        "capsules.capsule_content_cancel_sync",
                        "hosts.host_classes_index",
                        "locations.show",
                        "roles.index",
                        "compute_profiles.update",
                        "products.products_bulk_actions_destroy_products",
                        "packages.index",
                        "repositories.packages_index",
                        "provisioning_templates.create",
                        "systems.show",
                        "usergroups.external_usergroups_usergroup_id_external_updateusergroups",
                        "compute_resources.available_folders",
                        "hostgroups.smart_variables_index",
                        "smart_variables.show",
                        "environments.create",
                        "hosts.interfaces_index",
                        "architectures.images_index",
                        "hostgroups.template_combinations_index",
                        "hostgroups.parameters_create",
                        "repositories.export",
                        "smart_class_parameters.override_values_index",
                        "remote_execution_features.index",
                        "users.update",
                        "repositories.puppet_modules_index",
                        "compute_resources.compute_attributes_compute_resource_id_compute_updateprofiles",
                        "package_groups.show",
                        "errata.show",
                        "config_groups.index",
                        "environments.smart_class_parameters_environment_id_indexpuppetclasses",
                        "smart_variables.destroy",
                        "host_collections.copy",
                        "usergroups.external_usergroups_index",
                        "products.sync",
                        "compare.docker_tags_compare",
                        "reports.index",
                        "operatingsystems.os_default_templates_create",
                        "compute_resources.show",
                        "organizations.subscriptions_rganizations",
                        "job_invocations.show",
                        "config_templates.clone",
                        "content_view_filters.show",
                        "bookmarks.index",
                        "organizations.hostgroups_index",
                        "dashboard.index",
                        "domains.create",
                        "job_templates.import_",
                        "content_view_versions.promote",
                        "discovered_hosts.update",
                        "smart_proxies.refresh",
                        "hosts.host_collections",
                        "capsules.capsule_content_sync_status",
                        "operatingsystems.config_templates_index",
                        "organizations.cancel_repo_discover",
                        "smart_proxies.update",
                        "hostgroups.destroy",
                        "activation_keys.show",
                        "docker_manifests.show",
                        "usergroups.update",
                        "auth_source_ldaps.create",
                        "ptables.show",
                        "usergroups.show",
                        "compute_resources.destroy",
                        "common_parameters.update",
                        "environments.lifecycle_environments_index",
                        "compute_resources.index",
                        "content_view_filters.content_view_filter_rules_index",
                        "capsules.capsule_content_apsules",
                        "hosts.parameters_reset",
                        "environments.puppetclasses_index",
                        "reports.show",
                        "organizations.download_debug_certificate",
                        "compliance.foreman_openscap_policies_create",
                        "subnets.show",
                        "content_view_filters.content_view_filter_rules_create",
                        "smart_variables.override_values_smart_variable_id_override_destroyvalues",
                        "compute_resources.id_available_storage_available_storage_domainsdomains",
                        "smart_proxies.smart_proxy_id_import_puppetclassesenvironments",
                        "content_views.content_view_puppet_modules_create",
                        "content_views.content_view_filters_ontent_showviews",
                        "smart_variables.create",
                        "hosts.hosts_bulk_actions_installable_errata",
                        "locations.create",
                        "compute_resources.available_storage_pods",
                        "repositories.sync_index",
                        "compute_resources.id_available_available_resource_poolsclusters",
                        "compliance.foreman_openscap_scap_contents_create",
                        "mail_notifications.show",
                        "repositories.sync",
                        "capsules.capsule_content_lifecycle_environments",
                        "organizations.config_templates_index",
                        "template_kinds.index",
                        "hosts.parameters_host_id_destroyparameters",
                        "environments.template_combinations_environment_id_template_updatecombinations",
                        "provisioning_templates.show",
                        "hosts.host_packages_upgrade_all",
                        "repositories.remove_content",
                        "statistics.index",
                        "job_templates.show",
                        "repositories.packages_epositories",
                        "ping.index",
                        "organizations.update",
                        "compute_resources.available_flavors",
                        "hosts.id_get_statusstatus",
                        "locations.hostgroups_index",
                        "content_view_versions.export",
                        "hosts.hosts_bulk_actions_available_incremental_updates",
                        "organizations.subscriptions_manifest_history",
                        "job_templates.clone",
                        "hosts.host_classes_create",
                        "compute_resources.compute_attributes_compute_resource_id_compute_updateattributes",
                        "compliance.foreman_openscap_policies_index",
                        "media.create",
                        "organizations.domains_index",
                        "config_reports.destroy",
                        "domains.parameters_reset",
                        "operatingsystems.ptables_index",
                        "domains.parameters_create",
                        "hosts.hosts_bulk_actions_remove_content",
                        "compute_attributes.create",
                        "bookmarks.update",
                        "products.repository_sets_roducts",
                        "activation_keys.available_host_collections",
                        "smart_class_parameters.show",
                        "environments.repositories_nvironments",
                        "users.index",
                        "compute_resources.associate",
                        "hosts.show",
                        "sync_plans.show",
                        "smart_class_parameters.update",
                        "activation_keys.remove_subscriptions",
                        "realms.show",
                        "hosts.disassociate",
                        "hosts.interfaces_host_id_destroyinterfaces",
                        "ptables.index",
                        "locations.update",
                        "common_parameters.create",
                        "architectures.destroy",
                        "systems.update",
                        "organizations.lifecycle_environments_paths",
                        "repositories.content_uploads_create",
                        "hosts.smart_variables_index",
                        "organizations.create",
                        "compare.errata_compare",
                        "products.create",
                        "compute_resources.available_security_groups",
                        "repositories.repositories_bulk_actions_destroy_repositories",
                        "organizations.parameters_create",
                        "models.update",
                        "compute_resources.available_networks",
                        "locations.parameters_location_id_showparameters",
                        "usergroups.external_usergroups_usergroup_id_external_refreshusergroups",
                        "config_reports.show",
                        "discovery_rules.create",
                        "organizations.autoattach_subscriptions",
                        "hosts.host_subscriptions_create",
                        "locations.auth_source_ldaps_index",
                        "compute_profiles.destroy",
                        "usergroups.users_index",
                        "environments.systems_index",
                        "hosts.hosts_bulk_actions_install_content",
                        "smart_class_parameters.override_values_smart_class_parameter_id_override_destroyvalues",
                        "users.show",
                        "content_views.puppet_modules_ontent_indexviews",
                        "smart_variables.update",
                        "compliance.foreman_openscap_scap_contents_show",
                        "environments.index",
                        "subnets.create",
                        "organizations.subscriptions_delete_manifest",
                        "content_views.update",
                        "hosts.rebuild_config",
                        "roles.update",
                        "docker_tags.index",
                        "hostgroups.parameters_index",
                        "hosts.status",
                        "domains.parameters_domain_id_updateparameters",
                        "puppetclasses.create",
                        "compute_profiles.compute_attributes_compute_profile_id_compute_updateattributes",
                        "host_collections.remove_hosts",
                        "templates.foreign_input_sets_template_id_foreign_input_showsets",
                        "locations.hosts_index",
                        "activation_keys.available_releases",
                        "status.home_status",
                        "compute_resources.available_zones",
                        "environments.show",
                        "smart_class_parameters.override_values_smart_class_parameter_id_override_showvalues",
                        "content_views.content_view_filters_create",
                        "operatingsystems.parameters_reset",
                        "ptables.update",
                        "hosts.boot",
                        "operatingsystems.media_index",
                        "organizations.parameters_organization_id_showparameters",
                        "organizations.redhat_provider",
                        "roles.destroy",
                        "auth_source_ldaps.show",
                        "audits.index",
                        "common_parameters.show",
                        "provisioning_templates.revision",
                        "content_view_filters.create",
                        "audits.show",
                        "repositories.show",
                        "environments.lifecycle_environments_create",
                        "compliance.foreman_openscap_policies_show",
                        "errata.index",
                        "hostgroups.template_combinations_hostgroup_id_template_updatecombinations",
                        "templates.template_inputs_index",
                        "provisioning_templates.template_combinations_create",
                        "content_views.destroy",
                        "compare.puppet_modules_compare",
                        "auth_source_ldaps.test",
                        "docker_tags.show",
                        "products.update",
                        "activation_keys.content_override",
                        "host_collections.add_hosts",
                        "compute_profiles.index",
                        "compute_profiles.compute_attributes_compute_profile_id_compute_updateresources",
                        "compliance.foreman_openscap_scap_contents_index",
                        "compare.ostree_branches_compare",
                        "host_collections.destroy",
                        "compute_resources.images_compute_resource_id_updateimages",
                        "compliance.foreman_openscap_policies_content",
                        "hosts.interfaces_create",
                        "auth_source_ldaps.destroy",
                        "hosts.parameters_host_id_showparameters",
                        "subscriptions.products_index",
                        "locations.job_templates_index",
                        "smart_proxies.destroy",
                        "compute_attributes.update",
                        "architectures.operatingsystems_index",
                        "discovered_hosts.reboot",
                        "host_collections.update",
                        "smart_class_parameters.override_values_smart_class_parameter_id_override_updatevalues",
                        "content_view_filters.content_view_filter_rules_ontent_view_showfilters",
                        "bookmarks.destroy",
                        "domains.update",
                        "remote_execution_features.show",
                        "organizations.auth_source_ldaps_index",
                        "puppet_modules.show",
                        "architectures.create",
                        "hostgroups.puppetclasses_index",
                        "media.update",
                        "job_templates.destroy",
                        "compute_resources.images_compute_resource_id_showimages",
                        "architectures.images_architecture_id_showimages",
                        "hosts.hosts_bulk_actions_auto_attach",
                        "organizations.content_views_create",
                        "content_view_filters.puppet_modules_index",
                        "architectures.update",
                        "content_views.package_groups_ontent_indexviews",
                        "config_templates.show",
                        "usergroups.destroy",
                        "organizations.subscriptions_refresh_manifest",
                        "domains.index",
                        "organizations.systems_index",
                        "operatingsystems.bootfiles",
                        "hostgroups.smart_class_parameters_index",
                        "content_views.content_view_filters_ontent_updateviews",
                        "auth_source_ldaps.index",
                        "organizations.lifecycle_environments_index",
                        "environments.template_combinations_environment_id_template_showcombinations",
                        "operatingsystems.architectures_index",
                        "compliance.foreman_openscap_arf_reports_index",
                        "repositories.index",
                        "subnets.domains_index",
                        "repositories.package_groups_index",
                        "hosts.facts",
                        "capsules.capsule_content_add_lifecycle_environment",
                        "provisioning_templates.template_combinations_index",
                        "hostgroups.hostgroup_classes_create",
                        "locations.environments_index",
                        "repositories.repositories_bulk_actions_sync_repositories",
                        "provisioning_templates.update",
                        "compliance.foreman_openscap_arf_reports_ompliance_createarf",
                        "media.operatingsystems_index",
                        "templates.foreign_input_sets_template_id_foreign_input_destroysets",
                        "models.show",
                        "repositories.docker_manifests_index",
                        "organizations.index",
                        "smart_class_parameters.override_values_create",
                        "smart_proxies.show",
                        "content_view_filters.package_groups_index",
                        "repositories.puppet_modules_epositories",
                        "auth_source_ldaps.external_usergroups_index",
                        "content_view_filters.docker_manifests_index",
                        "organizations.users_index",
                        "environments.update",
                        "hosts.host_classes_host_id_puppetclass_destroyids",
                        "hosts.host_subscriptions_events",
                        "config_templates.operatingsystems_index",
                        "operatingsystems.parameters_index",
                        "content_view_filters.update",
                        "activation_keys.subscriptions_ctivation_destroykeys",
                        "provisioning_templates.template_combinations_provisioning_template_id_template_showcombinations",
                        "config_templates.revision",
                        "capsules.index",
                        "gpg_keys.show",
                        "auth_source_ldaps.external_usergroups_auth_source_ldap_id_external_showusergroups",
                        "discovered_hosts.refresh_facts",
                        "config_templates.build_pxe_default",
                        "compliance.foreman_openscap_policies_destroy",
                        "activation_keys.products_index",
                        "activation_keys.update",
                        "templates.foreign_input_sets_template_id_foreign_input_updatesets",
                        "organizations.sync_plans_create",
                        "repositories.docker_tags_epositories",
                        "discovered_hosts.create",
                        "provisioning_templates.template_combinations_provisioning_template_id_template_updatecombinations",
                        "activation_keys.add_subscriptions",
                        "operatingsystems.create",
                        "organizations.subscriptions_upload",
                        "locations.users_index",
                        "subnets.destroy",
                        "hostgroups.template_combinations_hostgroup_id_template_showcombinations",
                        "locations.parameters_index",
                        "subnets.interfaces_index",
                        "locations.destroy",
                        "permissions.resource_types",
                        "puppetclasses.index",
                        "organizations.hosts_index",
                        "config_templates.index",
                        "auth_source_ldaps.update",
                        "products.products_bulk_actions_update_sync_plans",
                        "environments.destroy",
                        "orchestration.tasks_index",
                        "ptables.operatingsystems_index",
                        "content_views.content_view_puppet_modules_ontent_updateviews",
                        "domains.subnets_index",
                        "environments.environment_id_smart_import_puppetclassesproxies",
                        "smart_proxies.autosign_index",
                        "organizations.show",
                        "compute_profiles.show",
                        "settings.show",
                        "content_view_filters.ostree_branches_index",
                        "organizations.sync_plans_index",
                        "smart_variables.override_values_index",
                        "organizations.job_templates_index",
                        "locations.index",
                        "provisioning_templates.destroy",
                        "compliance.foreman_openscap_scap_contents_destroy",
                        "hosts.parameters_index",
                        "compare.docker_manifests_compare",
                        "users.create",
                        "host_collections.index",
                        "compliance.foreman_openscap_policies_update",
                        "locations.config_templates_index",
                        "hosts.host_subscriptions_auto_attach",
                        "repositories.ostree_branches_index",
                        "compute_resources.images_create",
                        "provisioning_templates.build_pxe_default",
                        "compute_profiles.create",
                        "hosts.host_subscriptions_destroy",
                        "status.ping_server_status",
                        "organizations.products_rganizations",
                        "capsules.capsule_content_sync",
                        "content_views.content_view_versions_index",
                        "hosts.reports_last",
                        "hosts.hosts_bulk_actions_update_content",
                        "realms.update",
                        "models.create",
                        "config_groups.update",
                        "api.home_index",
                        "settings.index",
                        "filters.update",
                        "repositories.update",
                        "organizations.host_collections_create",
                        "media.show",
                        "locations.domains_index",
                        "repositories.gpg_key_content",
                        "hosts.update",
                        "template_combinations.destroy",
                        "domains.parameters_index",
                        "content_views.content_view_filters_index",
                        "config_templates.template_combinations_create",
                        "filters.destroy",
                        "hosts.hosts_bulk_actions_bulk_remove_host_collections",
                        "media.destroy",
                        "architectures.index",
                        "hostgroups.hostgroup_classes_index",
                        "discovered_hosts.show",
                        "hosts.destroy",
                        "compute_resources.update",
                        "usergroups.external_usergroups_usergroup_id_external_destroyusergroups",
                        "puppetclasses.update",
                        "organizations.destroy",
                        "hosts.audits_index",
                        "config_groups.destroy",
                        "operatingsystems.show",
                        "hosts.host_subscriptions_content_override",
                        "packages.show",
                        "activation_keys.index",
                        "reports.destroy",
                        "ptables.destroy",
                        "roles.show",
                        "content_views.ostree_branches_ontent_indexviews",
                        "environments.smart_class_parameters_index",
                        "capsules.show",
                        "content_views.content_view_histories_index",
                        "job_invocations.id_outputhosts",
                        "products.repositories_index",
                        "auth_source_ldaps.users_index",
                        "content_views.docker_manifests_ontent_indexviews",
                        "organizations.parameters_organization_id_updateparameters",
                        "activation_keys.subscriptions_index",
                        "templates.template_inputs_template_id_template_destroyinputs",
                        "templates.foreign_input_sets_index",
                        "job_templates.create",
                        "repositories.errata_epositories",
                        "activation_keys.add_host_collections",
                        "usergroups.external_usergroups_create",
                        "hosts.config_reports_last",
                        "hosts.host_subscriptions_index",
                        "locations.media_index",
                        "locations.provisioning_templates_index",
                        "discovered_hosts.auto_provision_all",
                        "activation_keys.destroy",
                        "organizations.sync_rganizations",
                        "realms.create",
                        "templates.template_inputs_template_id_template_showinputs",
                        "organizations.environments_index",
                        "media.index",
                        "repositories.repository_types",
                        "compute_profiles.compute_attributes_create",
                        "config_reports.index",
                        "operatingsystems.provisioning_templates_index",
                        "compliance.foreman_openscap_scap_contents_update",
                        "discovery_rules.update",
                        "host_collections.show",
                        "discovered_hosts.reboot_all",
                        "repositories.ostree_branches_epositories",
                        "config_templates.os_default_templates_index",
                        "organizations.repositories_rganizations",
                        "hosts.hosts_bulk_actions_environment_content_view",
                        "compute_profiles.compute_attributes_compute_profile_id_compute_createresources",
                        "compliance.foreman_openscap_arf_reports_destroy",
                        "hosts.host_subscriptions_product_content",
                        "content_views.index",
                        "compute_resources.id_available_available_networksclusters",
                        "roles.users_index",
                        "config_templates.template_combinations_config_template_id_template_updatecombinations",
                        "puppetclasses.hostgroups_index",
                        "organizations.lifecycle_environments_create",
                        "activation_keys.host_collections_index",
                        "hosts.interfaces_host_id_showinterfaces",
                        "usergroups.index",
                        "smart_proxies.create",
                        "environments.hosts_index",
                        "content_views.publish",
                        "organizations.subscriptions_index",
                        "hostgroups.hostgroup_classes_hostgroup_id_puppetclass_destroyids",
                        "subscriptions.index",
                        "operatingsystems.parameters_operatingsystem_id_destroyparameters",
                        "hosts.hosts_bulk_actions_bulk_add_host_collections",
                        "discovery_rules.show",
                        "activation_keys.copy",
                        "realms.destroy",
                        "environments.template_combinations_index",
                        "permissions.index",
                        "job_invocations.create",
                        "config_groups.create",
                        "locations.parameters_location_id_destroyparameters",
                        "usergroups.external_usergroups_usergroup_id_external_showusergroups",
                        "hosts.puppetclasses_host_id_showpuppetclasses",
                        "hosts.parameters_host_id_updateparameters",
                        "filters.create",
                        "job_templates.export",
                        "smart_proxies.environments_import_puppetclasses",
                        "config_templates.destroy",
                        "sync_plans.destroy",
                        "environments.puppetclasses_environment_id_showpuppetclasses",
                        "operatingsystems.destroy",
                        "config_groups.show",
                        "hosts.fact_values_index",
                        "hosts.host_errata_host_id_showerrata",
                        "hosts.parameters_create",
                        "smart_proxies.environments_smart_proxy_id_import_puppetclassesenvironments",
                        "smart_variables.index",
                        "repositories.upload_content",
                        "hosts.host_packages_upgrade",
                        "organizations.uebercerts_show",
                        "operatingsystems.images_operatingsystem_id_showimages",
                        "templates.template_inputs_template_id_template_updateinputs",
                        "activation_keys.product_content",
                        "content_view_versions.destroy",
                        "hosts.vm_compute_attributes",
                        "operatingsystems.parameters_operatingsystem_id_updateparameters",
                        "content_views.ontent_remove_from_environmentviews",
                        "hosts.smart_class_parameters_index"
                    ]
                },
                "tests": {
                    "count": 2,
                    "resources": [
                        "test_action_lib_baseaction.py",
                        "foreman_base_action_test_case.py"
                    ]
                }
            },
            "description": "Interact with Foreman API v2",
            "email": "daniel@nullkarma.com",
            "keywords": [
                "foreman",
                "satellite",
                "red",
                "hat",
                "redhat"
            ],
            "name": "foreman",
            "ref": "foreman",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-foreman",
            "version": "1.0.1"
        },
        "fortinet": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 13,
                    "resources": [
                        "create_address_group",
                        "delete_firewall_policy",
                        "create_address_object",
                        "delete_address_group",
                        "update_address_object",
                        "get_firewall_policy",
                        "update_firewall_policy",
                        "delete_address_object",
                        "create_firewall_policy",
                        "get_address_object",
                        "update_address_object",
                        "get_address_group",
                        "move_firewall_policy"
                    ]
                }
            },
            "description": "St2 integration with Fortinet Firewall",
            "email": "info@stackstorm.com",
            "keywords": [
                "firewalls",
                "threat",
                "security"
            ],
            "name": "fortinet",
            "ref": "fortinet",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-fortinet",
            "version": "0.0.1"
        },
        "fpm": {
            "author": "jfryman",
            "content": {
                "actions": {
                    "count": 15,
                    "resources": [
                        "create_rpm_from_empty",
                        "create_deb_from_gem",
                        "create_rpm_from_tar",
                        "create_rpm_from_rpm",
                        "create_deb_from_rpm",
                        "load_metadata",
                        "create_deb_from_dir",
                        "create_rpm_from_python",
                        "create_deb_from_python",
                        "create_rpm_from_dir",
                        "create_deb_from_deb",
                        "create_rpm_from_deb",
                        "create_deb_from_empty",
                        "create_deb_from_tar",
                        "create_rpm_from_gem"
                    ]
                }
            },
            "description": "StackStorm Integration Pack for use with the fpm package for building system packages (rpm, deb, python, gem, etc.)",
            "email": "jfryman@FryBook-2.local",
            "keywords": [
                "fpm",
                "rpm",
                "deb",
                "gem",
                "python",
                "egg",
                "ruby"
            ],
            "name": "fpm",
            "ref": "fpm",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-fpm",
            "version": "0.1.1"
        },
        "freight": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "add_package",
                        "update_cache"
                    ]
                }
            },
            "description": "freight",
            "email": "james@fryman.io",
            "name": "freight",
            "ref": "freight",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-freight",
            "version": "0.1.0"
        },
        "ghost2logger": {
            "author": "davidjohngee",
            "content": {
                "sensors": {
                    "count": 2,
                    "resources": [
                        "Ghost2loggerLoopback",
                        "Ghost2loggerSensor"
                    ]
                }
            },
            "description": "Syslog end-point for match rule criteria",
            "email": "david.gee@ipengineer.net",
            "keywords": [
                "Syslog",
                "syslog",
                "Go",
                "Logging",
                "logging",
                "useful"
            ],
            "name": "ghost2logger",
            "ref": "ghost2logger",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-ghost2logger",
            "version": "1.1.1"
        },
        "git": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_remote_repo_latest_commit",
                        "clone",
                        "get_local_repo_latest_commit"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "st2.webhook.github.pulls.merge.sample"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "GitCommitSensor"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_commit_sensor.py"
                    ]
                }
            },
            "description": "st2 content pack containing git integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "git",
                "scm"
            ],
            "name": "git",
            "ref": "git",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-git",
            "version": "0.4.0"
        },
        "github": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 20,
                    "resources": [
                        "get_clone_stats",
                        "create_issue",
                        "get_deployment_statuses",
                        "list_issues",
                        "list_releases",
                        "list_deployments",
                        "get_issue",
                        "get_traffic_stats",
                        "check_deployment_env",
                        "latest_release",
                        "list_teams",
                        "create_deployment_status",
                        "deployment_event",
                        "create_release",
                        "add_team_membership",
                        "add_status",
                        "store_oauth_token",
                        "create_deployment",
                        "add_comment",
                        "get_user"
                    ]
                },
                "aliases": {
                    "count": 7,
                    "resources": [
                        "deployment_statuses",
                        "list_releases",
                        "latest_release",
                        "create_release",
                        "store_oauth_token",
                        "create_deployment",
                        "get_user"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "deploy_pack_on_deployment_event"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "GithubRepositorySensor"
                    ]
                },
                "tests": {
                    "count": 21,
                    "resources": [
                        "test_action_list_releases.py",
                        "test_action_get_clone_stats.py",
                        "test_action_store_oauth_token.py",
                        "test_action_add_team_membership.py",
                        "test_action_create_release.py",
                        "test_action_get_traffic_stats.py",
                        "test_action_get_user.py",
                        "test_action_aliases.py",
                        "test_action_list_deployments.py",
                        "github_base_action_test_case.py",
                        "test_action_create_issue.py",
                        "test_action_list_issues.py",
                        "test_action_get_deployment_statuses.py",
                        "test_action_create_deployment_status.py",
                        "test_action_check_deployment_env.py",
                        "test_action_add_comment.py",
                        "test_action_list_teams.py",
                        "test_action_latest_release.py",
                        "test_action_get_issue.py",
                        "test_action_create_deployment.py",
                        "test_action_add_status.py"
                    ]
                }
            },
            "contributors": [
                "Jon Middleton <jon.middleton@pulsant.com>"
            ],
            "description": "GitHub integration",
            "email": "info@stackstorm.com",
            "keywords": [
                "github",
                "github enterprise",
                "git",
                "scm",
                "serverless"
            ],
            "name": "github",
            "ref": "github",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-github",
            "version": "0.8.2"
        },
        "gitlab": {
            "author": "Daniel Chamot",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "project.info",
                        "pipeline.trigger",
                        "pipeline.list"
                    ]
                }
            },
            "description": "GitLab Rest API",
            "email": "daniel@nullkarma.com",
            "keywords": [
                "gitlab"
            ],
            "name": "gitlab",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-gitlab",
            "version": "0.5.1"
        },
        "google": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "get_search_results"
                    ]
                }
            },
            "description": "st2 content pack containing google integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "google",
                "search"
            ],
            "name": "google",
            "ref": "google",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-google",
            "version": "0.2.1"
        },
        "gpg": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "encrypt_file",
                        "import_keys",
                        "decrypt_file",
                        "list_keys"
                    ]
                }
            },
            "description": "Pack for working with GPG.",
            "email": "info@stackstorm.com",
            "keywords": [
                "gpg",
                "pgp",
                "gnupg",
                "privacy",
                "encryption",
                "crypto"
            ],
            "name": "gpg",
            "ref": "gpg",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-gpg",
            "version": "0.3.1"
        },
        "hpe_icsp": {
            "author": "Paul Mulvihill",
            "content": {
                "actions": {
                    "count": 14,
                    "resources": [
                        "icsp_multi_server_attribute_add",
                        "icsp_servers_get",
                        "icsp_ids_to_os",
                        "icsp_ca_get",
                        "icsp_server_details_get",
                        "icsp_server_data_format",
                        "icsp_buildplan_apply",
                        "icsp_server_attribute_add",
                        "icsp_mid_get",
                        "icsp_server_attribute_del",
                        "icsp_buildplan_get",
                        "icsp_job_status_get",
                        "icsp_server_attributes_get",
                        "icsp_server_delete"
                    ]
                }
            },
            "description": "HP Enterprise Insight Control Server Provisioning Integration",
            "email": "paul.mulvihill@pulsant.com",
            "name": "hpe_icsp",
            "ref": "hpe_icsp",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-hpe_icsp",
            "version": "0.6.3"
        },
        "hubot": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "post_message",
                        "post_result",
                        "restart",
                        "branch",
                        "update_ref",
                        "deploy"
                    ]
                },
                "aliases": {
                    "count": 3,
                    "resources": [
                        "hubot_restart",
                        "hubot_branch",
                        "hubot_deploy"
                    ]
                },
                "rules": {
                    "count": 2,
                    "resources": [
                        "notify_hubot",
                        "restart_hubot"
                    ]
                }
            },
            "description": "Hubot integration pack",
            "email": "james@stackstorm.com",
            "name": "hubot",
            "ref": "hubot",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-hubot",
            "version": "0.3.1"
        },
        "hue": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 13,
                    "resources": [
                        "on",
                        "find_id_by_name",
                        "list_bulbs",
                        "current_state",
                        "brightness",
                        "set_state",
                        "xy",
                        "color_temp_mired",
                        "rgb",
                        "off",
                        "alert",
                        "color_temp_kelvin",
                        "toggle"
                    ]
                }
            },
            "description": "Philips Hue Pack",
            "email": "james@stackstorm.com",
            "keywords": [
                "hue",
                "philips",
                "iot"
            ],
            "name": "hue",
            "ref": "hue",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-hue",
            "version": "0.1.1"
        },
        "hyperv": {
            "author": "Encore Technologies",
            "content": {
                "actions": {
                    "count": 212,
                    "resources": [
                        "remove_vm_network_adapter",
                        "set_vm_host",
                        "get_vm_memory",
                        "get_vm_snapshot",
                        "resume_vm_replication",
                        "restart_vm",
                        "suspend_vm_replication",
                        "remove_vm_storage_path",
                        "remove_vm_snapshot",
                        "set_vm_host_cluster",
                        "set_vm_remote_fx3d_video_adapter",
                        "remove_vm_network_adapter_team_mapping",
                        "get_vm_remote_fx_physical_video_adapter",
                        "import_vm_initial_replication",
                        "set_vm_bios",
                        "set_vm_network_adapter_vlan",
                        "get_vhd_snapshot",
                        "remove_vm_switch",
                        "get_vm_firmware",
                        "get_vm_dvd_drive",
                        "set_vm_network_adapter_routing_domain_mapping",
                        "get_vm_storage_path",
                        "set_vm_migration_network",
                        "disable_vm_remote_fx_physical_video_adapter",
                        "start_vm",
                        "rename_vm_switch",
                        "get_vm_network_adapter_extended_acl",
                        "set_vm_switch_team",
                        "get_vm_switch_extension_port_feature",
                        "get_vm_host_numa_node",
                        "add_vm_group_member",
                        "get_vm_network_adapter_team_mapping",
                        "remove_vm_group_member",
                        "remove_vm_migration_network",
                        "set_vm_fibre_channel_hba",
                        "start_vm_failover",
                        "stop_vm_failover",
                        "resize_vhd",
                        "enable_vm_replication",
                        "get_vm_key_protector",
                        "mount_vhd",
                        "remove_vm_replication_authorization_entry",
                        "enable_vmtpm",
                        "get_vhd_set",
                        "set_vm_network_adapter",
                        "set_vm_switch_extension_port_feature",
                        "move_vm",
                        "get_vm_resource_pool",
                        "set_vm_firmware",
                        "grant_vm_connect_access",
                        "test_vhd",
                        "add_vm_network_adapter_routing_domain_mapping",
                        "get_vm_host",
                        "get_vm_fibre_channel_hba",
                        "checkpoint_vm",
                        "remove_vm_switch_team_member",
                        "merge_vhd",
                        "get_vm_switch_extension",
                        "test_vm_replication_connection",
                        "set_vm_network_adapter_team_mapping",
                        "disable_vm_eventing",
                        "set_vm_san",
                        "set_vm_replication",
                        "stop_vm_trace",
                        "resume_vm",
                        "start_vm_trace",
                        "new_vm_switch",
                        "rename_vm_resource_pool",
                        "get_vm_video",
                        "remove_vm_replication",
                        "disable_vm_switch_extension",
                        "add_vm_remote_fx3d_video_adapter",
                        "get_vhd",
                        "add_vm_switch_extension_switch_feature",
                        "optimize_vhd",
                        "export_vm_snapshot",
                        "remove_vm_dvd_drive",
                        "set_vm_key_protector",
                        "get_vm_switch_team",
                        "disable_vm_integration_service",
                        "enable_vm_migration",
                        "disable_vmtpm",
                        "get_vm_switch_extension_switch_data",
                        "new_vm_resource_pool",
                        "get_vm_network_adapter_failover_configuration",
                        "add_vm_network_adapter_acl",
                        "get_vm_hard_disk_drive",
                        "disconnect_vm_san",
                        "set_vm_hard_disk_drive",
                        "get_vm_replication",
                        "get_vm_floppy_disk_drive",
                        "get_vm_switch",
                        "new_vm_group",
                        "new_vfd",
                        "get_vm_network_adapter_acl",
                        "get_vm_network_adapter",
                        "optimize_vhd_set",
                        "set_vm_dvd_drive",
                        "get_vm_switch_extension_switch_feature",
                        "rename_vm_san",
                        "convert_vhd",
                        "remove_vm_switch_extension_port_feature",
                        "set_vm_replication_server",
                        "get_vm_migration_network",
                        "update_vm_version",
                        "remove_vm_network_adapter_acl",
                        "get_vm_ide_controller",
                        "rename_vm_group",
                        "get_vm_replication_server",
                        "get_vm_system_switch_extension_port_feature",
                        "get_vm_security",
                        "measure_vm",
                        "add_vm_scsi_controller",
                        "restore_vm_snapshot",
                        "get_vm_host_supported_version",
                        "remove_vm_scsi_controller",
                        "measure_vm_replication",
                        "disable_vm_migration",
                        "remove_vm_saved_state",
                        "set_vm_switch",
                        "revoke_vm_connect_access",
                        "new_vhd",
                        "set_vm_resource_pool",
                        "get_vm_processor",
                        "connect_vm_san",
                        "get_vm_connect_access",
                        "set_vm_replication_authorization_entry",
                        "add_vm_network_adapter",
                        "start_vm_initial_replication",
                        "move_vm_storage",
                        "get_vm_switch_extension_port_data",
                        "get_vm_integration_service",
                        "add_vm_fibre_channel_hba",
                        "measure_vm_resource_pool",
                        "get_vm",
                        "compare_vm",
                        "get_vm_network_adapter_isolation",
                        "dismount_vhd",
                        "connect_vm_network_adapter",
                        "get_vm_network_adapter_vlan",
                        "export_vm",
                        "add_vm_storage_path",
                        "remove_vm_san",
                        "enable_vm_remote_fx_physical_video_adapter",
                        "enable_vm_integration_service",
                        "enable_vm_eventing",
                        "get_vm_bios",
                        "stop_vm_initial_replication",
                        "set_vm_network_adapter_isolation",
                        "add_vm_dvd_drive",
                        "remove_vm_network_adapter_routing_domain_mapping",
                        "debug_vm",
                        "set_vm_video",
                        "suspend_vm",
                        "get_vm_system_switch_extension",
                        "copy_vm_file",
                        "enable_vm_console_support",
                        "remove_vm_remote_fx3d_video_adapter",
                        "remove_vm",
                        "add_vm_switch_extension_port_feature",
                        "remove_vm_fibre_channel_hba",
                        "set_vhd",
                        "disable_vm_resource_metering",
                        "disable_vm_console_support",
                        "set_vm_memory",
                        "set_vm_processor",
                        "get_vm_replication_authorization_entry",
                        "save_vm",
                        "get_vm_group",
                        "complete_vm_failover",
                        "test_vm_network_adapter",
                        "remove_vhd_snapshot",
                        "set_vm_security",
                        "add_vm_hard_disk_drive",
                        "set_vm_floppy_disk_drive",
                        "add_vm_switch_team_member",
                        "remove_vm_switch_extension_switch_feature",
                        "reset_vm_replication_statistics",
                        "remove_vm_network_adapter_extended_acl",
                        "disconnect_vm_network_adapter",
                        "stop_vm",
                        "get_vm_remote_fx3d_video_adapter",
                        "new_vm_san",
                        "get_vm_host_numa_node_status",
                        "add_vm_migration_network",
                        "enable_vm_resource_metering",
                        "remove_vm_hard_disk_drive",
                        "get_vm_system_switch_extension_switch_feature",
                        "get_vm_scsi_controller",
                        "set_vm_com_port",
                        "rename_vm",
                        "get_vm_com_port",
                        "get_vm_san",
                        "enable_vm_switch_extension",
                        "remove_vm_group",
                        "import_vm",
                        "set_vm_security_policy",
                        "get_vm_host_cluster",
                        "stop_vm_replication",
                        "set_vm_switch_extension_switch_feature",
                        "new_vm",
                        "rename_vm_snapshot",
                        "add_vm_switch",
                        "remove_vm_resource_pool",
                        "get_vm_network_adapter_routing_domain_mapping",
                        "add_vm_network_adapter_extended_acl",
                        "set_vm_network_adapter_failover_configuration",
                        "rename_vm_network_adapter",
                        "set_vm",
                        "reset_vm_resource_metering",
                        "new_vm_replication_authorization_entry",
                        "repair_vm"
                    ]
                }
            },
            "description": "StackStorm integration pack for working with Microsoft Hyper-V.",
            "email": "code@encore.tech",
            "keywords": [
                "microsoft",
                "ms",
                "hyper-v",
                "hyperv",
                "virtualization",
                "vm"
            ],
            "name": "hyperv",
            "ref": "hyperv",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-hyperv",
            "version": "0.1.3"
        },
        "icinga2": {
            "author": "Igor Cherkaev",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_status",
                        "get_host",
                        "get_service"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "relay_to_chat"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "Icinga2StateChangeSensor"
                    ]
                }
            },
            "description": "Icinga2 Monitoring",
            "email": "emptywee@protonmail.ch",
            "keywords": [
                "icinga",
                "monitoring",
                "alerting"
            ],
            "name": "icinga2",
            "ref": "icinga2",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-icinga2",
            "version": "0.3.3"
        },
        "infoblox": {
            "author": "Dimension Data",
            "content": {
                "actions": {
                    "count": 31,
                    "resources": [
                        "get_arecord",
                        "get_fixedaddress_ipv6",
                        "get_authuone",
                        "get_aaaarecord",
                        "get_object",
                        "get_iprangev4",
                        "create_fixedaddress_ipv6",
                        "create_aaaarecord",
                        "get_ipv4address",
                        "get_eadefinition",
                        "get_hostrecord",
                        "get_networkview",
                        "get_ipv6network",
                        "create_ipv6ptrrecord",
                        "get_dns_view",
                        "create_network",
                        "delete_object",
                        "get_cnamerecord",
                        "create_cnamerecord",
                        "create_fixedaddress_ipv4",
                        "get_object_detailed",
                        "get_member",
                        "get_network",
                        "create_fixedaddress_ipv4_in_network",
                        "create_arecord",
                        "get_networkuser",
                        "create_ipv4ptrrecord",
                        "get_ptrrecord",
                        "get_ipv6address",
                        "get_fixedaddress_ipv4",
                        "create_networkview"
                    ]
                }
            },
            "description": "Infoblox IPAM, DNS and DHCP management",
            "email": "noreply@dimensiondata.com",
            "keywords": [
                "IPAM",
                "DNS",
                "DHCP",
                "Infoblox"
            ],
            "name": "infoblox",
            "ref": "infoblox",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-infoblox",
            "version": "0.1.0"
        },
        "ipcam": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "capture_screenshot"
                    ]
                }
            },
            "description": "st2 content pack containing integration for various home IP cams",
            "email": "info@stackstorm.com",
            "keywords": [
                "ipcam",
                "ip cam",
                "ip camera",
                "camera",
                "smart home",
                "home automation"
            ],
            "name": "ipcam",
            "ref": "ipcam",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-ipcam",
            "version": "0.2.1"
        },
        "irc": {
            "author": "StackStorm, Inc.",
            "content": {
                "sensors": {
                    "count": 1,
                    "resources": [
                        "IRCSensor"
                    ]
                }
            },
            "description": "st2 content pack containing irc integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "irc",
                "internet relay chat",
                "chat",
                "messaging",
                "instant messaging"
            ],
            "name": "irc",
            "ref": "irc",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-irc",
            "version": "0.3.1"
        },
        "jenkins": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "build_job",
                        "disable_job",
                        "enable_job",
                        "get_job_info",
                        "list_running_jobs",
                        "install_plugin"
                    ]
                }
            },
            "description": "Jenkins CI Integration Pack",
            "email": "james@stackstorm.com",
            "name": "jenkins",
            "ref": "jenkins",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-jenkins",
            "version": "0.4.1"
        },
        "jinja": {
            "author": "StackStorm, inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "render_file"
                    ]
                }
            },
            "description": "Jinja template engine",
            "email": "support@stackstorm.com",
            "keywords": [
                "jinja",
                "template",
                "templating"
            ],
            "name": "jinja",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-jinja",
            "version": "0.1.0"
        },
        "jira": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 9,
                    "resources": [
                        "attach_file_to_issue",
                        "transition_issue",
                        "attach_files_to_issue",
                        "get_issue_comments",
                        "create_issue",
                        "get_issue",
                        "comment_issue",
                        "search_issues",
                        "get_issue_attachments"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "JIRASensor"
                    ]
                }
            },
            "description": "st2 content pack containing jira integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "issues",
                "ticket management",
                "project management"
            ],
            "name": "jira",
            "ref": "jira",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-jira",
            "version": "0.7.1"
        },
        "jmx": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "invoke_method"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "JMXSensor"
                    ]
                }
            },
            "description": "st2 content pack containing Java JMX integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "jmx",
                "javajmx",
                "java management extensions",
                "mbean"
            ],
            "name": "jmx",
            "ref": "jmx",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-jmx",
            "version": "0.3.1"
        },
        "kafka": {
            "Contributors": [
                "Target Corp., Lukas.Marty@Target.com"
            ],
            "author": "StackStorm",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "produce"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "parse_message"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "KafkaGCPMessageSensor",
                        "KafkaMessageSensor"
                    ]
                }
            },
            "description": "Integration pack for Apache Kafka message broker",
            "email": "support@stackstorm.com",
            "keywords": [
                "kafka",
                "queuing",
                "messaging",
                "message broker",
                "gcp",
                "base64",
                "stackdriver",
                "google cloud"
            ],
            "name": "kafka",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-kafka",
            "version": "0.2.2"
        },
        "kayako": {
            "author": "Antagonist B.V.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "create_ticket_post",
                        "create_ticket"
                    ]
                }
            },
            "description": "Kayako customer ticket management",
            "email": "info@antagonist.nl",
            "keywords": [
                "tickets",
                "ticket management"
            ],
            "name": "Kayako",
            "ref": "kayako",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-kayako",
            "version": "0.1.0"
        },
        "keycloak": {
            "author": "devlm",
            "content": {
                "actions": {
                    "count": 14,
                    "resources": [
                        "get_client_roles",
                        "assign_client_role",
                        "get_server_info",
                        "get_client_role_id",
                        "create_client_role",
                        "get_clients",
                        "get_user",
                        "get_user_id",
                        "update_user",
                        "delete_user",
                        "get_roles",
                        "get_client_id",
                        "create_user",
                        "get_client"
                    ]
                }
            },
            "description": "Keycloak Admin pack",
            "email": "devlinm@gmail.com",
            "name": "keycloak",
            "ref": "keycloak",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-keycloak",
            "version": "0.1.1"
        },
        "kubernetes": {
            "author": "Andrew Moore",
            "content": {
                "actions": {
                    "count": 365,
                    "resources": [
                        "replaceExtensionsV1beta1NamespacedJob",
                        "listCoreV1EventForAllNamespaces",
                        "patchAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "deleteCoreV1Namespace",
                        "createAppsV1beta1NamespacedStatefulSet",
                        "listCoreV1ResourceQuotaForAllNamespaces",
                        "createCoreV1NamespacedBindingBinding",
                        "listCoreV1NamespacedPod",
                        "replaceAppsV1beta1NamespacedStatefulSetStatus",
                        "deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "deleteCoreV1PersistentVolume",
                        "replaceRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "deleteExtensionsV1beta1CollectionThirdPartyResource",
                        "readCoreV1NamespacedPodStatus",
                        "listAllTPR",
                        "listCoreV1ReplicationControllerForAllNamespaces",
                        "readCoreV1NamespacedResourceQuota",
                        "createCoreV1NamespacedServiceAccount",
                        "readCoreV1NamespacedService",
                        "deleteExtensionsV1beta1CollectionNamespacedReplicaSet",
                        "listExtensionsV1beta1NamespacedIngress",
                        "listPolicyV1beta1NamespacedPodDisruptionBudget",
                        "deleteCoreV1CollectionNamespacedEndpoints",
                        "getStorageV1beta1APIResources",
                        "patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus",
                        "readExtensionsV1beta1NamespacedDeploymentsScale",
                        "listCoreV1NamespacedResourceQuota",
                        "readBatchV1NamespacedJobStatus",
                        "listCoreV1NamespacedSecret",
                        "createAuthorizationV1beta1SubjectAccessReview",
                        "patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "patchExtensionsV1beta1NamespacedReplicaSet",
                        "listCoreV1NamespacedReplicationController",
                        "createExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "listCoreV1ConfigMapForAllNamespaces",
                        "getStorageAPIGroup",
                        "replaceExtensionsV1beta1NamespacedIngressStatus",
                        "deleteExtensionsV1beta1CollectionNamespacedJob",
                        "deleteAppsV1beta1CollectionNamespacedStatefulSet",
                        "patchCertificatesV1alpha1CertificateSigningRequest",
                        "readRbacAuthorizationV1alpha1NamespacedRole",
                        "createCoreV1Node",
                        "readExtensionsV1beta1NamespacedDeployment",
                        "replaceCoreV1NamespacedReplicationControllerStatus",
                        "listCoreV1EndpointsForAllNamespaces",
                        "listCoreV1NamespacedEndpoints",
                        "replaceCoreV1NamespaceStatus",
                        "replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus",
                        "patchCoreV1NamespacedEndpoints",
                        "readCoreV1NamespacedLimitRange",
                        "getPolicyAPIGroup",
                        "listCoreV1PersistentVolume",
                        "listExtensionsV1beta1NetworkPolicyForAllNamespaces",
                        "getBatchV2alpha1APIResources",
                        "deleteCoreV1NamespacedResourceQuota",
                        "listAppsV1beta1StatefulSetForAllNamespaces",
                        "listCoreV1PodTemplateForAllNamespaces",
                        "createExtensionsV1beta1NamespacedDaemonSet",
                        "replaceCoreV1Node",
                        "patchExtensionsV1beta1NamespacedDeploymentsScale",
                        "getBatchAPIGroup",
                        "replaceCoreV1NamespacedResourceQuotaStatus",
                        "deleteExtensionsV1beta1NamespacedDaemonSet",
                        "createPolicyV1beta1NamespacedPodDisruptionBudget",
                        "getExtensionsAPIGroup",
                        "listExtensionsV1beta1NamespacedDeployment",
                        "deletePolicyV1beta1NamespacedPodDisruptionBudget",
                        "getAuthorizationAPIGroup",
                        "readCoreV1ComponentStatus",
                        "createCoreV1NamespacedBinding",
                        "patchCoreV1NamespacedPersistentVolumeClaimStatus",
                        "replaceCoreV1NamespacedPodStatus",
                        "createCertificatesV1alpha1CertificateSigningRequest",
                        "createTPR",
                        "readCoreV1NamespacedPod",
                        "deleteCoreV1NamespacedServiceAccount",
                        "listRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "replaceCoreV1NamespacedServiceStatus",
                        "deleteExtensionsV1beta1CollectionNamespacedDaemonSet",
                        "patchCoreV1NamespaceStatus",
                        "listStorageV1beta1StorageClass",
                        "readExtensionsV1beta1NamespacedReplicaSet",
                        "listBatchV1JobForAllNamespaces",
                        "deleteCoreV1CollectionNamespacedSecret",
                        "listCoreV1ComponentStatus",
                        "replaceExtensionsV1beta1NamespacedNetworkPolicy",
                        "patchBatchV1NamespacedJob",
                        "listExtensionsV1beta1NamespacedNetworkPolicy",
                        "deleteExtensionsV1beta1CollectionNamespacedDeployment",
                        "createCoreV1NamespacedLimitRange",
                        "listAppsV1beta1NamespacedStatefulSet",
                        "createExtensionsV1beta1NamespacedNetworkPolicy",
                        "deleteCoreV1CollectionNamespacedServiceAccount",
                        "readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
                        "createCoreV1NamespacedResourceQuota",
                        "patchExtensionsV1beta1NamespacedDaemonSetStatus",
                        "createCoreV1NamespacedConfigMap",
                        "getAPIVersions",
                        "replaceCoreV1NamespacedResourceQuota",
                        "listPolicyV1beta1PodDisruptionBudgetForAllNamespaces",
                        "deleteCoreV1CollectionNamespacedPodTemplate",
                        "patchRbacAuthorizationV1alpha1ClusterRole",
                        "patchRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "deleteCoreV1NamespacedService",
                        "create_tpr_sensor",
                        "readCoreV1NamespacedReplicationController",
                        "replaceStorageV1beta1StorageClass",
                        "createCoreV1NamespacedReplicationController",
                        "patchExtensionsV1beta1NamespacedDeployment",
                        "deleteCoreV1NamespacedReplicationController",
                        "replacePolicyV1beta1NamespacedPodDisruptionBudget",
                        "listCoreV1PersistentVolumeClaimForAllNamespaces",
                        "listCoreV1Namespace",
                        "deleteCoreV1CollectionNamespacedReplicationController",
                        "createRbacAuthorizationV1alpha1ClusterRole",
                        "replaceCoreV1NamespacedConfigMap",
                        "listCoreV1NamespacedServiceAccount",
                        "deleteExtensionsV1beta1ThirdPartyResource",
                        "replaceCertificatesV1alpha1CertificateSigningRequest",
                        "createCoreV1NamespacedEvictionEviction",
                        "replaceRbacAuthorizationV1alpha1NamespacedRole",
                        "deleteAppsV1beta1NamespacedStatefulSet",
                        "deleteExtensionsV1beta1NamespacedDeployment",
                        "listRbacAuthorizationV1alpha1ClusterRole",
                        "getCertificatesAPIGroup",
                        "getAuthenticationAPIGroup",
                        "listRbacAuthorizationV1alpha1RoleBindingForAllNamespaces",
                        "createExtensionsV1beta1NamespacedDeploymentRollbackRollback",
                        "listCoreV1NamespacedEvent",
                        "patchBatchV1NamespacedJobStatus",
                        "patchExtensionsV1beta1NamespacedReplicationcontrollersScale",
                        "createAuthenticationV1beta1TokenReview",
                        "deleteCertificatesV1alpha1CollectionCertificateSigningRequest",
                        "createCoreV1NamespacedEndpoints",
                        "patchCoreV1PersistentVolumeStatus",
                        "getRbacAuthorizationV1alpha1APIResources",
                        "deleteCoreV1CollectionNamespacedPersistentVolumeClaim",
                        "deleteExtensionsV1beta1NamespacedIngress",
                        "readRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "readCoreV1NamespacedEvent",
                        "replaceExtensionsV1beta1NamespacedJobStatus",
                        "listRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "patchExtensionsV1beta1NamespacedNetworkPolicy",
                        "readStorageV1beta1StorageClass",
                        "patchExtensionsV1beta1ThirdPartyResource",
                        "deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler",
                        "readCertificatesV1alpha1CertificateSigningRequest",
                        "patchCoreV1NamespacedEvent",
                        "replaceExtensionsV1beta1NamespacedDaemonSet",
                        "deleteCoreV1CollectionNamespacedResourceQuota",
                        "patchExtensionsV1beta1NamespacedJobStatus",
                        "deleteRbacAuthorizationV1alpha1CollectionClusterRole",
                        "createStorageV1beta1StorageClass",
                        "getAuthorizationV1beta1APIResources",
                        "patchExtensionsV1beta1NamespacedDaemonSet",
                        "patchCoreV1NamespacedPodTemplate",
                        "patchExtensionsV1beta1NamespacedReplicasetsScale",
                        "replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "readBatchV1NamespacedJob",
                        "readExtensionsV1beta1NamespacedReplicasetsScale",
                        "listCoreV1NamespacedService",
                        "replaceAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "readCoreV1NamespacedEndpoints",
                        "readCoreV1NamespacedReplicationControllerStatus",
                        "listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces",
                        "getPolicyV1beta1APIResources",
                        "patchCoreV1NamespacedResourceQuotaStatus",
                        "replaceExtensionsV1beta1NamespacedReplicationcontrollersScale",
                        "listCoreV1PodForAllNamespaces",
                        "patchCoreV1NamespacedService",
                        "createBatchV1NamespacedJob",
                        "readCoreV1Namespace",
                        "readCoreV1PersistentVolumeStatus",
                        "createCoreV1NamespacedService",
                        "createExtensionsV1beta1ThirdPartyResource",
                        "replaceExtensionsV1beta1NamespacedReplicaSetStatus",
                        "patchCoreV1NamespacedServiceStatus",
                        "listExtensionsV1beta1IngressForAllNamespaces",
                        "listBatchV1NamespacedJob",
                        "deleteCoreV1NamespacedConfigMap",
                        "getBatchV1APIResources",
                        "getRbacAuthorizationAPIGroup",
                        "patchCoreV1NamespacedSecret",
                        "createAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "patchExtensionsV1beta1NamespacedIngress",
                        "deleteCoreV1NamespacedEndpoints",
                        "listAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "patchCoreV1NamespacedPersistentVolumeClaim",
                        "replaceExtensionsV1beta1NamespacedDaemonSetStatus",
                        "patchAppsV1beta1NamespacedStatefulSetStatus",
                        "readExtensionsV1beta1NamespacedNetworkPolicy",
                        "readExtensionsV1beta1NamespacedJobStatus",
                        "patchExtensionsV1beta1NamespacedIngressStatus",
                        "getCoreV1APIResources",
                        "listCoreV1LimitRangeForAllNamespaces",
                        "readExtensionsV1beta1NamespacedDaemonSetStatus",
                        "deleteStorageV1beta1StorageClass",
                        "listExtensionsV1beta1ReplicaSetForAllNamespaces",
                        "readCoreV1NamespacedPersistentVolumeClaimStatus",
                        "deleteRbacAuthorizationV1alpha1ClusterRole",
                        "readCoreV1NamespacedServiceStatus",
                        "readExtensionsV1beta1NamespacedDaemonSet",
                        "readExtensionsV1beta1NamespacedIngressStatus",
                        "createCoreV1NamespacedPodTemplate",
                        "readCoreV1NamespacedPodTemplate",
                        "deleteExtensionsV1beta1CollectionNamespacedIngress",
                        "readCoreV1NamespaceStatus",
                        "deleteBatchV1CollectionNamespacedJob",
                        "readExtensionsV1beta1NamespacedReplicationcontrollersScale",
                        "deleteCoreV1NamespacedSecret",
                        "listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces",
                        "listCoreV1ServiceForAllNamespaces",
                        "replaceCoreV1NamespacedService",
                        "createCoreV1PersistentVolume",
                        "deleteRbacAuthorizationV1alpha1CollectionNamespacedRole",
                        "replaceCoreV1NamespacedPersistentVolumeClaim",
                        "deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy",
                        "readCoreV1NamespacedScaleScale",
                        "deleteCoreV1NamespacedPodTemplate",
                        "deleteStorageV1beta1CollectionStorageClass",
                        "replaceCertificatesV1alpha1CertificateSigningRequestStatus",
                        "readExtensionsV1beta1NamespacedDeploymentStatus",
                        "createRbacAuthorizationV1alpha1NamespacedRole",
                        "replaceRbacAuthorizationV1alpha1ClusterRole",
                        "replaceExtensionsV1beta1NamespacedReplicaSet",
                        "listExtensionsV1beta1DeploymentForAllNamespaces",
                        "deleteRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "deleteCoreV1NamespacedPod",
                        "listCoreV1ServiceAccountForAllNamespaces",
                        "deleteCoreV1CollectionNamespacedPod",
                        "getExtensionsV1beta1APIResources",
                        "listExtensionsV1beta1NamespacedJob",
                        "patchPolicyV1beta1NamespacedPodDisruptionBudget",
                        "readCoreV1PersistentVolume",
                        "replaceCoreV1PersistentVolume",
                        "replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus",
                        "createCoreV1Namespace",
                        "replaceCoreV1NamespacedLimitRange",
                        "patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus",
                        "deleteCoreV1CollectionNamespacedEvent",
                        "getAppsAPIGroup",
                        "replaceExtensionsV1beta1NamespacedIngress",
                        "check_sensor_list",
                        "patchCoreV1NamespacedServiceAccount",
                        "deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler",
                        "replaceExtensionsV1beta1ThirdPartyResource",
                        "replaceCoreV1NodeStatus",
                        "replaceCoreV1NamespacedPodTemplate",
                        "deleteExtensionsV1beta1NamespacedReplicaSet",
                        "listExtensionsV1beta1JobForAllNamespaces",
                        "listExtensionsV1beta1NamespacedDaemonSet",
                        "replaceCoreV1Namespace",
                        "readCoreV1NamespacedSecret",
                        "patchCoreV1NodeStatus",
                        "getAppsV1beta1APIResources",
                        "readExtensionsV1beta1NamespacedReplicaSetStatus",
                        "patchCoreV1NamespacedPodStatus",
                        "replaceExtensionsV1beta1NamespacedDeploymentsScale",
                        "listCoreV1NamespacedLimitRange",
                        "deleteCoreV1Node",
                        "deleteCertificatesV1alpha1CertificateSigningRequest",
                        "createRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "delete_tpr_sensor",
                        "replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
                        "patchCoreV1NamespacedPod",
                        "listCertificatesV1alpha1CertificateSigningRequest",
                        "replaceCoreV1NamespaceFinalize",
                        "replaceExtensionsV1beta1NamespacedDeploymentStatus",
                        "replaceCoreV1NamespacedScaleScale",
                        "patchStorageV1beta1StorageClass",
                        "deleteCoreV1CollectionNamespacedLimitRange",
                        "createAuthorizationV1beta1NamespacedLocalSubjectAccessReview",
                        "createCoreV1NamespacedEvent",
                        "readAppsV1beta1NamespacedStatefulSet",
                        "replaceCoreV1NamespacedReplicationController",
                        "createCoreV1NamespacedPersistentVolumeClaim",
                        "createCoreV1NamespacedPod",
                        "readCoreV1Node",
                        "readRbacAuthorizationV1alpha1ClusterRole",
                        "readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus",
                        "patchCoreV1PersistentVolume",
                        "readCoreV1NamespacedConfigMap",
                        "replaceRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "deleteCoreV1NamespacedPersistentVolumeClaim",
                        "getAuthenticationV1beta1APIResources",
                        "readExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "readCoreV1NamespacedPodLog",
                        "replaceCoreV1PersistentVolumeStatus",
                        "createExtensionsV1beta1NamespacedReplicaSet",
                        "readPolicyV1beta1NamespacedPodDisruptionBudgetStatus",
                        "deleteExtensionsV1beta1NamespacedNetworkPolicy",
                        "replaceExtensionsV1beta1NamespacedDeployment",
                        "listRbacAuthorizationV1alpha1NamespacedRole",
                        "replaceCoreV1NamespacedEvent",
                        "listExtensionsV1beta1NamespacedReplicaSet",
                        "readPolicyV1beta1NamespacedPodDisruptionBudget",
                        "readExtensionsV1beta1NamespacedIngress",
                        "createExtensionsV1beta1NamespacedDeployment",
                        "patchCoreV1NamespacedReplicationController",
                        "deleteRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "listCoreV1SecretForAllNamespaces",
                        "replaceCoreV1NamespacedServiceAccount",
                        "deleteExtensionsV1beta1NamespacedJob",
                        "deleteBatchV1NamespacedJob",
                        "readCoreV1NamespacedPersistentVolumeClaim",
                        "replaceAppsV1beta1NamespacedStatefulSet",
                        "listExtensionsV1beta1ThirdPartyResource",
                        "deleteAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "deleteCoreV1CollectionNamespacedConfigMap",
                        "createCoreV1NamespacedSecret",
                        "replaceBatchV1NamespacedJob",
                        "deleteCoreV1NamespacedLimitRange",
                        "patchCoreV1Node",
                        "patchCoreV1NamespacedReplicationControllerStatus",
                        "replaceBatchV1NamespacedJobStatus",
                        "getAutoscalingAPIGroup",
                        "deleteCoreV1NamespacedEvent",
                        "deleteCoreV1CollectionNode",
                        "patchRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "replaceCoreV1NamespacedPod",
                        "replaceExtensionsV1beta1NamespacedReplicasetsScale",
                        "patchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus",
                        "listCoreV1NamespacedPodTemplate",
                        "deleteRbacAuthorizationV1alpha1NamespacedRole",
                        "patchCoreV1NamespacedLimitRange",
                        "readAppsV1beta1NamespacedStatefulSetStatus",
                        "listExtensionsV1beta1NamespacedHorizontalPodAutoscaler",
                        "deleteCoreV1CollectionPersistentVolume",
                        "listExtensionsV1beta1DaemonSetForAllNamespaces",
                        "getCertificatesV1alpha1APIResources",
                        "readExtensionsV1beta1NamespacedJob",
                        "deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget",
                        "listCoreV1NamespacedPersistentVolumeClaim",
                        "listCoreV1NamespacedConfigMap",
                        "patchExtensionsV1beta1NamespacedDeploymentStatus",
                        "readRbacAuthorizationV1alpha1NamespacedRoleBinding",
                        "getAutoscalingV1APIResources",
                        "createExtensionsV1beta1NamespacedJob",
                        "patchExtensionsV1beta1NamespacedJob",
                        "patchCoreV1Namespace",
                        "readCoreV1NamespacedServiceAccount",
                        "listCoreV1Node",
                        "register_tpr",
                        "readExtensionsV1beta1ThirdPartyResource",
                        "deleteCoreV1CollectionNamespace",
                        "readCoreV1NamespacedResourceQuotaStatus",
                        "replaceCoreV1NamespacedPersistentVolumeClaimStatus",
                        "replaceCoreV1NamespacedSecret",
                        "patchCoreV1NamespacedConfigMap",
                        "patchRbacAuthorizationV1alpha1NamespacedRole",
                        "deleteRbacAuthorizationV1alpha1CollectionNamespacedRoleBinding",
                        "patchAppsV1beta1NamespacedStatefulSet",
                        "readCoreV1NodeStatus",
                        "createRbacAuthorizationV1alpha1ClusterRoleBinding",
                        "getCoreAPIVersions",
                        "replaceCoreV1NamespacedEndpoints",
                        "replaceCertificatesV1alpha1CertificateSigningRequestApproval",
                        "readAutoscalingV1NamespacedHorizontalPodAutoscaler",
                        "patchCoreV1NamespacedResourceQuota",
                        "createAuthorizationV1beta1SelfSubjectAccessReview",
                        "createExtensionsV1beta1NamespacedIngress",
                        "patchCoreV1NamespacedScaleScale",
                        "patchExtensionsV1beta1NamespacedReplicaSetStatus",
                        "listRbacAuthorizationV1alpha1RoleForAllNamespaces",
                        "deleteRbacAuthorizationV1alpha1CollectionClusterRoleBinding"
                    ]
                },
                "rules": {
                    "count": 2,
                    "resources": [
                        "kubernetes_third_party_resource_create",
                        "kubernetes_third_party_resource_delete"
                    ]
                },
                "sensors": {
                    "count": 33,
                    "resources": [
                        "watchRbacAuthorizationV1alpha1RoleBindingListForAllNamespaces",
                        "watchCoreV1ServiceListForAllNamespaces",
                        "watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces",
                        "watchExtensionsV1beta1ReplicaSetListForAllNamespaces",
                        "watchRbacAuthorizationV1alpha1RoleListForAllNamespaces",
                        "watchCoreV1LimitRangeListForAllNamespaces",
                        "watchExtensionsV1beta1ThirdPartyResourceList",
                        "watchCoreV1PodTemplateListForAllNamespaces",
                        "watchCoreV1PersistentVolumeClaimListForAllNamespaces",
                        "watchCoreV1EventListForAllNamespaces",
                        "watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces",
                        "watchCoreV1NamespaceList",
                        "watchCoreV1NodeList",
                        "watchAppsV1beta1StatefulSetListForAllNamespaces",
                        "watchCoreV1ReplicationControllerListForAllNamespaces",
                        "watchExtensionsV1beta1DaemonSetListForAllNamespaces",
                        "watchExtensionsV1beta1JobListForAllNamespaces",
                        "watchRbacAuthorizationV1alpha1ClusterRoleList",
                        "watchCoreV1EndpointsListForAllNamespaces",
                        "watchCoreV1PersistentVolumeList",
                        "watchExtensionsV1beta1IngressListForAllNamespaces",
                        "watchCoreV1ConfigMapListForAllNamespaces",
                        "watchCoreV1PodListForAllNamespaces",
                        "watchCoreV1SecretListForAllNamespaces",
                        "watchExtensionsV1beta1NetworkPolicyListForAllNamespaces",
                        "watchBatchV1JobListForAllNamespaces",
                        "watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces",
                        "watchRbacAuthorizationV1alpha1ClusterRoleBindingList",
                        "watchCoreV1ResourceQuotaListForAllNamespaces",
                        "watchCoreV1ServiceAccountListForAllNamespaces",
                        "watchStorageV1beta1StorageClassList",
                        "watchCertificatesV1alpha1CertificateSigningRequestList",
                        "watchExtensionsV1beta1DeploymentListForAllNamespaces"
                    ]
                }
            },
            "contributors": [
                "Michael Ward <mward29@gmail.com>"
            ],
            "description": "st2 content pack containing Kubernetes sensors",
            "email": "andy@impulsed.net",
            "keywords": [
                "kubernetes",
                "sensors",
                "thirdpartyresource"
            ],
            "name": "kubernetes",
            "ref": "kubernetes",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-kubernetes",
            "version": "0.9.0"
        },
        "lastline": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 8,
                    "resources": [
                        "get_result_artifact",
                        "submit_file",
                        "get_result_summary",
                        "get_completed",
                        "submit_file_hash",
                        "get_progress",
                        "submit_url",
                        "get_result"
                    ]
                }
            },
            "description": "Lastline Security Breach Detection Integration",
            "email": "james@stackstorm.com",
            "keywords": [
                "security"
            ],
            "name": "lastline",
            "ref": "lastline",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-lastline",
            "version": "0.2.1"
        },
        "libcloud": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 29,
                    "resources": [
                        "get_object_cdn_url",
                        "restart_container",
                        "deploy_container",
                        "get_container_cdn_url",
                        "create_dns_record",
                        "balancer_attach_member",
                        "destroy_container",
                        "list_dns_zones",
                        "start_vm",
                        "create_vm",
                        "create_container_cluster",
                        "list_images",
                        "stop_vm",
                        "list_balancers",
                        "list_sizes",
                        "enable_cdn_for_container",
                        "start_container",
                        "delete_dns_record",
                        "list_dns_records",
                        "list_container_clusters",
                        "stop_container",
                        "create_balancer",
                        "reboot_vm",
                        "upload_file",
                        "import_public_ssh_key",
                        "list_containers",
                        "destroy_vm",
                        "balancer_list_members",
                        "list_vms"
                    ]
                }
            },
            "description": "st2 content pack containing libcloud integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "libcloud",
                "cloud",
                "dns",
                "dnsaas",
                "lbaas",
                "load balancers",
                "aws",
                "amazon",
                "s3",
                "ec2",
                "rackspace",
                "cloudstack",
                "openstack",
                "cloudsigma",
                "gce",
                "google compute engine"
            ],
            "name": "libcloud",
            "ref": "libcloud",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-libcloud",
            "version": "0.4.3"
        },
        "librato": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "get_metric",
                        "submit_gauge",
                        "delete_metric",
                        "submit_counter",
                        "list_metrics",
                        "add_annotation"
                    ]
                }
            },
            "description": "Send and manage metrics with Librato",
            "email": "james@fryman.io",
            "name": "librato",
            "ref": "librato",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-librato",
            "version": "0.3.1"
        },
        "mailgun": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "send_email"
                    ]
                }
            },
            "description": "st2 content pack containing mailgun integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "email",
                "mail",
                "mailgun"
            ],
            "name": "mailgun",
            "ref": "mailgun",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mailgun",
            "version": "0.3.1"
        },
        "menandmice": {
            "author": "Encore Technologies",
            "content": {
                "actions": {
                    "count": 198,
                    "resources": [
                        "get_dns_server",
                        "get_users",
                        "get_folders",
                        "add_cloud",
                        "get_next_free_reservation_address",
                        "get_dns_record_change_request",
                        "get_ipam_record",
                        "get_clouds",
                        "get_history",
                        "get_interface",
                        "get_range_discovery",
                        "get_dns_reverse_zone",
                        "add_group",
                        "get_dns_servers",
                        "get_role",
                        "get_dhcp_address_pool_permit_list",
                        "get_dhcp_exclusion",
                        "add_role_to_group",
                        "release_dhcp_lease",
                        "get_available_address_blocks",
                        "add_dns_zones",
                        "add_dns_generate_directive",
                        "add_user",
                        "set_dns_record_aging",
                        "get_inherited_dhcp_options",
                        "get_dhcp_options",
                        "get_dhcp_scopes",
                        "get_dhcp_vendor_and_user_classes",
                        "get_folder",
                        "get_dhcp_reservation",
                        "get_ad_site_link",
                        "add_dns_record",
                        "remove_role_from_group",
                        "remove_property_definition",
                        "add_dhcp_scopes_to_dhcp_failover_relationship",
                        "wf_add_dns_zone",
                        "get_address_space",
                        "get_ipam_records",
                        "generate_reverse_records",
                        "get_dns_view",
                        "send_mail",
                        "get_object_access",
                        "get_dns_zones",
                        "add_address_space",
                        "get_dhcp_policy_enforcement",
                        "get_dhcp_option_definitions",
                        "get_dns_record_change_requests",
                        "modify_dhcp_failover_relationship",
                        "place_in_folder",
                        "get_cloud_networks",
                        "get_dhcp_concurrent_leases",
                        "remove_object",
                        "get_system_settings",
                        "get_service_status",
                        "remove_dhcp_scopes_from_dhcp_failover_relationship",
                        "add_ad_site",
                        "get_dhcp_address_pool",
                        "add_license_key",
                        "add_dhcp_scope",
                        "add_ad_site_link",
                        "migrate_dns_zone",
                        "add_user_to_group",
                        "add_dhcp_reservation",
                        "get_inherit_access",
                        "add_role",
                        "get_dnsptr_records",
                        "add_cloud_network",
                        "get_range",
                        "reconcile_dhcp_scope",
                        "remove_from_folder",
                        "set_range_discovery",
                        "add_ad_forest",
                        "set_object_access",
                        "get_dhcp_groups",
                        "report_multilabel_hosts",
                        "set_ipam_record",
                        "get_group",
                        "modify_dhcp_option_definition",
                        "release_dhcp_leases",
                        "add_dhcp_exclusion",
                        "get_ad_forest",
                        "logout",
                        "get_dns_records_in_caches",
                        "set_system_settings",
                        "get_ranges_with_statistics",
                        "get_current_address_space",
                        "add_dhcp_group",
                        "move_to_address_space",
                        "get_device",
                        "add_dns_zone",
                        "login",
                        "set_routers_for_range",
                        "add_role_to_user",
                        "get_dhcp_leases",
                        "report_host_discovery",
                        "get_next_free_address",
                        "report_ip_from_client_identifier",
                        "get_folder_for_object",
                        "add_dns_record_change_request",
                        "remove_dhcp_policy",
                        "get_change_request",
                        "set_properties",
                        "replicate_dhcp_failover",
                        "get_dhcp_reservations",
                        "get_dhcp_lease_history",
                        "get_dns_generate_directive",
                        "reject_changes",
                        "flush_from_cache_on_dns_servers",
                        "remove_user_from_group",
                        "remove_dhcp_option_definition",
                        "get_groups",
                        "add_change_request",
                        "get_dns_views",
                        "get_dhcp_group",
                        "set_dhcp_address_pool_permit_list",
                        "get_related_dns_records",
                        "add_dhcp_policy",
                        "get_devices",
                        "get_dhcp_class_names",
                        "ping",
                        "remove_from_ad_site",
                        "get_dns_generate_directives",
                        "remove_from_cloud_network",
                        "get_property_definitions",
                        "get_dhcp_server",
                        "set_service_status",
                        "add_dhcp_address_pool",
                        "get_cloud_network",
                        "get_properties",
                        "modify_dhcp_policy",
                        "run_command",
                        "set_password",
                        "report_merge_address_spaces",
                        "get_custom_filters",
                        "get_objects",
                        "get_dns_zone",
                        "add_dns_records",
                        "add_interface",
                        "split_range",
                        "set_inherit_access",
                        "approve_dns_record_changes",
                        "get_ranges",
                        "get_orphan_reverse_dns_records",
                        "get_dhcp_subclasses",
                        "get_cloud",
                        "get_interfaces",
                        "get_user",
                        "get_property_definition",
                        "get_dhcp_exclusions",
                        "get_ad_sites",
                        "add_property_definition",
                        "add_dhcp_option_definition",
                        "add_dns_server",
                        "get_roles",
                        "get_ad_site",
                        "get_ad_forests",
                        "get_address_spaces",
                        "get_dns_record",
                        "remove_objects",
                        "get_range_by_ip_address",
                        "get_objects_in_folder",
                        "add_range",
                        "report_dhcp_scope_options",
                        "get_dhcp_address_pools",
                        "has_access",
                        "remove_dhcp_failover_relationships",
                        "get_dhcp_failover_relationships",
                        "add_device",
                        "place_in_ad_site",
                        "set_current_address_space",
                        "set_dhcp_subclasses",
                        "promote_dns_slave_zone",
                        "add_dhcp_server",
                        "get_subranges",
                        "get_routers_for_range",
                        "add_folder",
                        "get_dns_records",
                        "reject_dns_record_changes",
                        "get_addresses_in_use",
                        "report_access",
                        "modify_property_definition",
                        "get_dhcp_failover_relationship",
                        "get_ad_partitions",
                        "place_in_cloud_network",
                        "set_dhcp_policy_enforcement",
                        "get_range_statistics",
                        "approve_changes",
                        "get_dhcp_scope",
                        "move_ipam_record",
                        "get_address_blocks",
                        "join_ranges",
                        "remove_role_from_user",
                        "get_change_requests",
                        "add_dhcp_failover_relationship",
                        "get_dhcp_servers",
                        "set_dhcp_options",
                        "get_ad_site_links",
                        "get_dhcp_policies"
                    ]
                },
                "tests": {
                    "count": 5,
                    "resources": [
                        "test_action_lib_run_operation.py",
                        "men_and_mice_base_action_test_case.py",
                        "test_action_lib_run_logout.py",
                        "test_action_lib_run_login.py",
                        "test_action_lib_run_get_history.py"
                    ]
                }
            },
            "description": "StackStorm integration pack for working with the Men&Mice IPAM system.",
            "email": "code@encore.tech",
            "keywords": [
                "menandmice",
                "men",
                "mice",
                "ipam",
                "dns"
            ],
            "name": "menandmice",
            "ref": "menandmice",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-menandmice",
            "version": "0.1.1"
        },
        "mistral": {
            "author": "StackStorm",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "get_task_results",
                        "get_workbook_definition",
                        "kill_workflow",
                        "get_workflow_results"
                    ]
                }
            },
            "description": "Mistral integrations to operate mistral.",
            "email": "support@stackstorm.com",
            "keywords": [
                "mistral",
                "workflows"
            ],
            "name": "mistral",
            "ref": "mistral",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mistral",
            "version": "0.3.1"
        },
        "mmonit": {
            "author": "Itxaka Serrano Garcia",
            "content": {
                "actions": {
                    "count": 18,
                    "resources": [
                        "test_connection_to_host",
                        "dismiss_event",
                        "summary_status",
                        "update_host",
                        "list_uptime_hosts",
                        "summary_events",
                        "get_host",
                        "session_put",
                        "get_status_host",
                        "session_delete",
                        "list_hosts",
                        "session_get",
                        "get_event",
                        "action_host",
                        "get_uptime_hosts",
                        "list_events",
                        "list_status_hosts",
                        "delete_host"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "MmonitEventsSensor"
                    ]
                }
            },
            "description": "mmonit integrations",
            "email": "itxakaserrano@gmail.com",
            "keywords": [
                "monitoring",
                "mmonit"
            ],
            "name": "mmonit",
            "ref": "mmonit",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mmonit",
            "version": "0.4.2"
        },
        "mqtt": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "publish"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "MQTTSensor"
                    ]
                }
            },
            "description": "MQTT Integration for StackStorm",
            "email": "james@stackstorm.com",
            "name": "mqtt",
            "ref": "mqtt",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mqtt",
            "version": "0.2.1"
        },
        "msexchange": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "send_email",
                        "get_folder",
                        "list_folders",
                        "get_calendar_items",
                        "search_items"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "ItemSensor"
                    ]
                }
            },
            "description": "A pack for interfacing with a Microsoft Exchange server",
            "email": "anthonyshaw@apache.org",
            "keywords": [
                "mail",
                "calendar",
                "exchange",
                "office365"
            ],
            "name": "Microsoft Exchange",
            "ref": "msexchange",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-msexchange",
            "version": "0.1.3"
        },
        "mssql": {
            "author": "codyaray",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "execute.query",
                        "execute.query_and_email",
                        "execute.row",
                        "execute.insert",
                        "execute.scalar",
                        "execute.non_query"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_mssql_action.py"
                    ]
                }
            },
            "description": "st2 content pack containing Microsoft SQL Server integrations",
            "email": "talktome@codyaray.com",
            "keywords": [
                "mssql",
                "sql",
                "microsoft",
                "sql server",
                "database"
            ],
            "name": "mssql",
            "ref": "mssql",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mssql",
            "version": "0.2.1"
        },
        "mysql": {
            "author": "st2-dev",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "insert",
                        "select"
                    ]
                }
            },
            "contributors": [
                "Joe Topjian <joe@topjian.net>"
            ],
            "description": "Mysql integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "mysql",
                "database"
            ],
            "name": "mysql",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-mysql",
            "version": "0.5.1"
        },
        "nagios": {
            "author": "StackStorm, Inc.",
            "content": {
                "rules": {
                    "count": 6,
                    "resources": [
                        "check_load_procs",
                        "check_proc",
                        "check_load_procd",
                        "check_load",
                        "notify_chat",
                        "send_mail"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_nagios_handler.py"
                    ]
                },
                "triggers": {
                    "count": 1,
                    "resources": [
                        "service_state_change"
                    ]
                }
            },
            "description": "Nagios integration pack. See README.md for setup instructions.",
            "email": "info@stackstorm.com",
            "keywords": [
                "nagios",
                "monitoring",
                "alerting"
            ],
            "name": "nagios",
            "ref": "nagios",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-nagios",
            "version": "0.2.0"
        },
        "napalm": {
            "author": "mierdin, Rob Woodward",
            "content": {
                "actions": {
                    "count": 27,
                    "resources": [
                        "loadconfig",
                        "get_arp_table",
                        "get_bgp_neighbors_detail",
                        "get_probes_config",
                        "get_bgp_config",
                        "get_route_to",
                        "get_interfaces",
                        "bgp_prefix_exceeded_chain",
                        "get_probes_results",
                        "get_lldp_neighbors",
                        "cli",
                        "configuration_change_workflow",
                        "traceroute",
                        "get_mac_address_table",
                        "get_config",
                        "get_log",
                        "get_facts",
                        "get_ntp",
                        "interface_down_workflow",
                        "get_firewall_policies",
                        "get_environment",
                        "ping",
                        "get_network_instances",
                        "check_consistency",
                        "get_snmp_information",
                        "get_bgp_neighbors",
                        "get_optics"
                    ]
                },
                "aliases": {
                    "count": 1,
                    "resources": [
                        "check_consistency"
                    ]
                },
                "rules": {
                    "count": 4,
                    "resources": [
                        "interface_down",
                        "configuration_change",
                        "lldp_remediate",
                        "bgp_prefix_exceeded"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "NapalmLLDPSensor"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_loadconfig.py"
                    ]
                }
            },
            "description": "NAPALM network automation library integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "networking",
                "napalm",
                "cisco",
                "juniper",
                "arista",
                "ibm"
            ],
            "name": "napalm",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-napalm",
            "version": "0.2.12"
        },
        "napalm_logs": {
            "author": "John Anderson",
            "content": {
                "sensors": {
                    "count": 1,
                    "resources": [
                        "NapalmLogsSensor"
                    ]
                }
            },
            "description": "Runs a napalm-logs client as a sensor and dispatches rendered logs as triggers.",
            "email": "lampwins@gmail.com",
            "keywords": [
                "napalm-logs",
                "napalm",
                "syslog",
                "networking"
            ],
            "name": "napalm_logs",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-napalm_logs",
            "version": "0.1.1"
        },
        "nest": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 11,
                    "resources": [
                        "set_temperature",
                        "get_mode",
                        "set_humidity",
                        "get_temperature",
                        "get_humidity",
                        "toggle_away",
                        "set_home",
                        "set_fan",
                        "set_away",
                        "set_mode",
                        "show"
                    ]
                }
            },
            "description": "Nest Home Device Control",
            "email": "james@stackstorm.com",
            "keywords": [
                "nest",
                "home automation"
            ],
            "name": "nest",
            "ref": "nest",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-nest",
            "version": "0.3.2"
        },
        "netbox": {
            "author": "John Anderson, Jefferson White",
            "content": {
                "actions": {
                    "count": 22,
                    "resources": [
                        "virtualization_patch_interfaces",
                        "virtualization_put_interfaces",
                        "virtualization_post_interfaces",
                        "virtualization_patch_virtual_machines",
                        "dcim_get_sites",
                        "dcim_get_devices",
                        "ipam_post_available_ips",
                        "ipam_get_vlan_groups",
                        "ipam_get_vlans",
                        "virtualization_get_interfaces",
                        "virtualization_get_clusters",
                        "virtualization_get_cluster_types",
                        "dcim_get_interface_connections",
                        "virtualization_post_virtual_machines",
                        "ipam_get_vrfs",
                        "virtualization_get_cluster_groups",
                        "virtualization_get_virtual_machines",
                        "ipam_get_ip_addresses",
                        "ipam_get_available_ips",
                        "ipam_get_prefixes",
                        "dcim_get_interfaces",
                        "virtualization_put_virtual_machines"
                    ]
                }
            },
            "description": "A StackStorm pack for integrating with NetBox",
            "email": "lampwins@gmail.com",
            "keywords": [
                "netbox",
                "networking",
                "ipam",
                "dcim"
            ],
            "name": "netbox",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-netbox",
            "version": "0.4.2"
        },
        "network_essentials": {
            "author": "Extreme Networks",
            "content": {
                "actions": {
                    "count": 69,
                    "resources": [
                        "get_os_version",
                        "ping_vrf_targets",
                        "autopick_lif_id",
                        "add_ipv4_rule_acl",
                        "create_ve",
                        "remove_acl",
                        "get_vlan_id_list",
                        "apply_acl",
                        "configure_mac_move_detection",
                        "configure_policy_map_class",
                        "persist_configuration",
                        "configure_class_map",
                        "delete_device_credentials",
                        "validate_L2_port_channel_state",
                        "create_vrf",
                        "cfg_rate_limiting",
                        "validate_interface_vlan",
                        "delete_l2_port_channel",
                        "execute_cli",
                        "find_host_ip",
                        "get_next_available_network_id",
                        "validate_interface_state",
                        "configure_mgmt_virtual_ip",
                        "delete_logical_interface_on_interface",
                        "configure_mac_group",
                        "set_l2_system_mtu",
                        "add_or_remove_l2_acl_rule",
                        "delete_vlan",
                        "delete_service_policy_to_interface",
                        "validate_vrrpe_state",
                        "set_l3_system_mtu",
                        "get_switch_details",
                        "create_switchport_trunk",
                        "find_my_host_vcs",
                        "create_vrrpe",
                        "autopick_port_channel_id",
                        "get_persist_configuration_status",
                        "delete_logical_interface_on_bridge_domain",
                        "firmware_download",
                        "configure_bridge_domain",
                        "create_l2_port_channel",
                        "get_registered_device_credential_list",
                        "add_ipv6_rule_acl",
                        "register_device_credentials",
                        "delete_bridge_domain",
                        "remove_switchport_access_vlan",
                        "create_vlan",
                        "configure_storm_control",
                        "set_l2_mtu",
                        "set_l3_mtu",
                        "delete_ipv4_rule_acl",
                        "remove_switchport_trunk_allowed_vlan",
                        "create_acl",
                        "drop_provision",
                        "delete_vrf",
                        "delete_switchport",
                        "delete_ipv6_rule_acl",
                        "delete_mac_group",
                        "configure_logical_interface",
                        "attach_service_policy_to_interface",
                        "enable_vf",
                        "drop_unprovision",
                        "delete_vrrpe",
                        "create_switchport_access",
                        "delete_ve",
                        "delete_acl",
                        "set_intf_admin_state",
                        "clear_cfg_rate_limiting",
                        "find_mac"
                    ]
                },
                "aliases": {
                    "count": 1,
                    "resources": [
                        "find_mac"
                    ]
                }
            },
            "description": "Extreme Workflow Composer Network Essentials Pack",
            "email": "support@extremenetworks.com",
            "keywords": [
                "networking",
                "vdx",
                "slx",
                "network",
                "network automation",
                "Extreme",
                "Extreme Networks",
                "Brocade",
                "NOS",
                "SLXOS",
                "MLXe",
                "MLX",
                "Net Iron"
            ],
            "name": "Network Essentials",
            "ref": "network_essentials",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-network_essentials",
            "version": "1.2.1"
        },
        "network_samples": {
            "author": "Extreme Networks",
            "content": {},
            "description": "Example Network Automation Workflows",
            "email": "info@stackstorm.com",
            "keywords": [
                "networking"
            ],
            "name": "Network Samples",
            "ref": "network_samples",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-network_samples",
            "version": "0.0.1"
        },
        "networking_utils": {
            "author": "Jon Middleton",
            "content": {
                "actions": {
                    "count": 8,
                    "resources": [
                        "is_valid_ip_port",
                        "is_valid_hostname",
                        "is_valid_ip",
                        "ping",
                        "is_valid_ipv4",
                        "is_valid_ipv6",
                        "is_valid_asa_nameif",
                        "geoip"
                    ]
                },
                "aliases": {
                    "count": 2,
                    "resources": [
                        "ping",
                        "geoip"
                    ]
                },
                "tests": {
                    "count": 7,
                    "resources": [
                        "test_action_aliases.py",
                        "test_action_is_valid_ip.py",
                        "test_action_geoip.py",
                        "test_action_is_valid_hostname.py",
                        "networking_utils_base_test_case.py",
                        "test_action_is_valid_asa_nameif.py",
                        "test_action_is_valid_ip_port.py"
                    ]
                }
            },
            "description": "Useful networking utils for use in workflows.",
            "email": "jjm@geeky-and-blonde.me.uk",
            "keywords": [
                "networking",
                "utilities",
                "ipv4",
                "ipv6",
                "geoip",
                "ping"
            ],
            "name": "networking_utils",
            "ref": "networking_utils",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-networking_utils",
            "version": "0.4.4"
        },
        "newrelic": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "get_metric_data",
                        "get_alerts"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "NewRelicHookSensor",
                        "LegacyNewRelicHookSensor"
                    ]
                }
            },
            "description": "newrelic monitoring",
            "email": "info@stackstorm.com",
            "keywords": [
                "new relic",
                "monitoring",
                "app monitoring",
                "application level monitoring"
            ],
            "name": "newrelic",
            "ref": "newrelic",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-newrelic",
            "version": "0.4.2"
        },
        "nsx_vtep": {
            "author": "GSLAB",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "configure_logical_switch",
                        "publish_configs_day1",
                        "publish_configs",
                        "add_hw_gw"
                    ]
                }
            },
            "description": "NSX automation pack.",
            "email": "yugendra.khonde@gslab.com",
            "name": "nsx_vtep",
            "ref": "nsx_vtep",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-nsx_vtep",
            "version": "0.1.1"
        },
        "octopusdeploy": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "deploy_release",
                        "add_machine",
                        "list_projects",
                        "list_deployments",
                        "create_release",
                        "list_releases"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "NewReleaseSensor",
                        "NewDeploymentSensor"
                    ]
                }
            },
            "description": "st2 content pack containing octopusdeploy integrations",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "octopus",
                "octopusdeploy",
                "deployment",
                "continous deployment",
                "continous integration"
            ],
            "name": "octopusdeploy",
            "ref": "octopusdeploy",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-octopusdeploy",
            "version": "0.1.2"
        },
        "openhab": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_status",
                        "set_state",
                        "send_command"
                    ]
                }
            },
            "description": "OpenHAB",
            "email": "james@stackstorm.com",
            "keywords": [
                "openhab",
                "iot",
                "smart home",
                "home automation"
            ],
            "name": "openhab",
            "ref": "openhab",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-openhab",
            "version": "0.2.2"
        },
        "openstack": {
            "author": "StackStorm Engineering Team",
            "content": {
                "actions": {
                    "count": 702,
                    "resources": [
                        "user.create",
                        "stack.hook.poll",
                        "consistency.group.add.volume",
                        "stack.template.show",
                        "neutron.bgp.peer.delete",
                        "volume.delete",
                        "neutron.qos.minimum.bandwidth.rule.update",
                        "object.save",
                        "server.unpause",
                        "neutron.subnetpool.delete",
                        "stack.resource.metadata",
                        "aggregate.delete",
                        "volume.qos.set",
                        "neutron.l3.agent.router.remove",
                        "network.qos.policy.delete",
                        "neutron.security.group.delete",
                        "volume.qos.create",
                        "role.show",
                        "ec2.credentials.create",
                        "neutron.subnet.create",
                        "server.dump.create",
                        "network.subport.list",
                        "ip.floating.delete",
                        "bgpvpn.network.association.list",
                        "neutron.lb.member.create",
                        "keypair.create",
                        "server.remove.fixed.ip",
                        "neutron.address.scope.show",
                        "neutron.address.scope.update",
                        "flavor.show",
                        "stack.update",
                        "subnet.set",
                        "volume.backup.restore",
                        "neutron.lbaas.loadbalancer.list",
                        "network.meter.show",
                        "network.meter.rule.delete",
                        "neutron.meter.label.create",
                        "neutron.lb.pool.stats",
                        "port.create",
                        "firewall.group.policy.delete",
                        "role.create",
                        "software.deployment.delete",
                        "server.delete",
                        "neutron.lbaas.pool.delete",
                        "availability.zone.list",
                        "server.set",
                        "neutron.router.update",
                        "volume.qos.show",
                        "neutron.vpn.ikepolicy.delete",
                        "neutron.floatingip.show",
                        "neutron.lbaas.loadbalancer.stats",
                        "ip.floating.remove",
                        "host.set",
                        "compute.agent.delete",
                        "neutron.router.list",
                        "network.qos.rule.create",
                        "neutron.qos.available.rule.types",
                        "sfc.flow.classifier.list",
                        "neutron.lbaas.healthmonitor.create",
                        "security.group.set",
                        "floating.ip.unset",
                        "network.qos.rule.show",
                        "floating.ip.set",
                        "neutron.lb.pool.show",
                        "software.config.list",
                        "neutron.lb.agent.hosting.pool",
                        "neutron.address.scope.delete",
                        "server.unset",
                        "object.show",
                        "flavor.unset",
                        "network.qos.rule.delete",
                        "orchestration.build.info",
                        "neutron.lb.healthmonitor.delete",
                        "volume.type.set",
                        "security.group.rule.create",
                        "neutron.lbaas.l7rule.create",
                        "neutron.floatingip.list",
                        "bgpvpn.network.association.show",
                        "server.remove.port",
                        "neutron.qos.bandwidth.limit.rule.delete",
                        "sfc.port.chain.list",
                        "neutron.firewall.show",
                        "neutron.firewall.delete",
                        "network.trunk.show",
                        "catalog.show",
                        "neutron.lb.member.show",
                        "neutron.bgp.peer.show",
                        "software.config.create",
                        "neutron.service.provider.list",
                        "backup.show",
                        "stack.suspend",
                        "neutron.ipsec.site.connection.show",
                        "network.flavor.profile.list",
                        "neutron.vpn.service.list",
                        "neutron.qos.dscp.marking.rule.list",
                        "orchestration.service.list",
                        "network.agent.add.network",
                        "neutron.rbac.update",
                        "configuration.show",
                        "compute.service.delete",
                        "flavor.create",
                        "network.flavor.list",
                        "volume.backup.delete",
                        "subnet.delete",
                        "server.resume",
                        "security.group.rule.list",
                        "network.rbac.delete",
                        "ec2.credentials.show",
                        "container.create",
                        "network.qos.policy.list",
                        "neutron.meter.label.rule.show",
                        "neutron.meter.label.list",
                        "neutron.subnetpool.update",
                        "image.create",
                        "network.trunk.unset",
                        "software.deployment.output.show",
                        "stack.snapshot.show",
                        "network.create",
                        "neutron.router.show",
                        "neutron.subnetpool.show",
                        "neutron.lbaas.listener.show",
                        "snapshot.delete",
                        "role.delete",
                        "ip.floating.list",
                        "neutron.flavor.profile.create",
                        "volume.qos.list",
                        "port.unset",
                        "security.group.rule.delete",
                        "aggregate.show",
                        "neutron.lb.vip.show",
                        "consistency.group.snapshot.show",
                        "neutron.firewall.policy.insert.rule",
                        "ip.floating.create",
                        "quota.set",
                        "address.scope.set",
                        "volume.transfer.request.show",
                        "network.qos.rule.set",
                        "alarm.history.search",
                        "stack.event.list",
                        "neutron.quota.list",
                        "volume.snapshot.show",
                        "subnet.pool.show",
                        "server.add.security.group",
                        "neutron.vpn.ikepolicy.list",
                        "volume.type.unset",
                        "image.add.project",
                        "volume.show",
                        "network.flavor.profile.delete",
                        "snapshot.create",
                        "aggregate.list",
                        "neutron.lbaas.member.show",
                        "neutron.quota.update",
                        "neutron.lb.healthmonitor.associate",
                        "neutron.flavor.update",
                        "firewall.group.policy.list",
                        "keypair.delete",
                        "server.remove.floating.ip",
                        "container.list",
                        "neutron.vpn.ikepolicy.update",
                        "neutron.net.list",
                        "snapshot.list",
                        "stack.snapshot.create",
                        "bgpvpn.router.association.delete",
                        "bash-completion",
                        "server.list",
                        "alarm.create",
                        "consistency.group.remove.volume",
                        "sfc.flow.classifier.create",
                        "aggregate.unset",
                        "neutron.security.group.update",
                        "port.list",
                        "neutron.firewall.policy.create",
                        "stack.output.show",
                        "neutron.security.group.list",
                        "network.delete",
                        "help",
                        "neutron.security.group.rule.create",
                        "neutron.qos.minimum.bandwidth.rule.list",
                        "volume.set",
                        "neutron.floatingip.associate",
                        "firewall.group.policy.create",
                        "network.set",
                        "stack.export",
                        "container.set",
                        "stack.hook.clear",
                        "neutron.lbaas.agent.hosting.loadbalancer",
                        "neutron.lbaas.pool.update",
                        "endpoint.create",
                        "neutron.subnetpool.list",
                        "firewall.group.policy.set",
                        "flavor.delete",
                        "neutron.lbaas.loadbalancer.delete",
                        "neutron.firewall.rule.list",
                        "user.delete",
                        "neutron.floatingip.delete",
                        "router.remove.subnet",
                        "consistency.group.list",
                        "network.agent.add.router",
                        "service.list",
                        "neutron.qos.policy.create",
                        "compute.agent.set",
                        "neutron.net.update",
                        "network.meter.list",
                        "hypervisor.list",
                        "sfc.port.pair.group.delete",
                        "neutron.lbaas.l7policy.show",
                        "quota.show",
                        "network.agent.remove.router",
                        "neutron.firewall.policy.list",
                        "router.list",
                        "neutron.bgp.speaker.network.remove",
                        "keypair.show",
                        "neutron.ext.list",
                        "sfc.port.pair.show",
                        "image.save",
                        "ip.floating.pool.list",
                        "firewall.group.policy.add.rule",
                        "project.create",
                        "volume.unset",
                        "sfc.flow.classifier.delete",
                        "compute.service.list",
                        "neutron.rbac.show",
                        "subnet.pool.delete",
                        "neutron.qos.minimum.bandwidth.rule.show",
                        "volume.snapshot.list",
                        "neutron.tag.remove",
                        "network.segment.list",
                        "server.add.floating.ip",
                        "neutron.lbaas.loadbalancer.status",
                        "neutron.qos.policy.delete",
                        "neutron.lb.pool.create",
                        "neutron.port.update",
                        "server.ssh",
                        "consistency.group.create",
                        "neutron.lbaas.l7rule.update",
                        "port.set",
                        "server.migrate",
                        "role.remove",
                        "neutron.agent.delete",
                        "neutron.bgp.peer.update",
                        "neutron.subnet.delete",
                        "volume.migrate",
                        "network.agent.show",
                        "neutron.rbac.delete",
                        "neutron.quota.delete",
                        "neutron.lbaas.listener.update",
                        "volume.service.list",
                        "neutron.qos.policy.list",
                        "router.set",
                        "subnet.create",
                        "neutron.flavor.profile.update",
                        "alarm.list",
                        "subnet.pool.list",
                        "neutron.lb.vip.update",
                        "network.segment.delete",
                        "stack.snapshot.delete",
                        "bgpvpn.network.association.delete",
                        "hypervisor.stats.show",
                        "neutron.vpn.service.show",
                        "firewall.group.delete",
                        "server.group.delete",
                        "network.segment.create",
                        "sfc.port.chain.unset",
                        "network.flavor.profile.set",
                        "project.delete",
                        "bgpvpn.create",
                        "role.add",
                        "image.delete",
                        "firewall.group.rule.list",
                        "network.agent.remove.network",
                        "sfc.port.pair.group.unset",
                        "bgpvpn.network.association.create",
                        "neutron.firewall.rule.show",
                        "neutron.tag.add",
                        "object.delete",
                        "neutron.net.ip.availability.list",
                        "server.shelve",
                        "network.auto.allocated.topology.create",
                        "neutron.lb.healthmonitor.disassociate",
                        "neutron.security.group.rule.delete",
                        "stack.check",
                        "neutron.lbaas.healthmonitor.update",
                        "neutron.flavor.delete",
                        "neutron.meter.label.rule.delete",
                        "network.flavor.create",
                        "network.trunk.list",
                        "neutron.security.group.rule.list",
                        "neutron.flavor.profile.delete",
                        "sfc.port.chain.delete",
                        "network.qos.rule.type.list",
                        "neutron.rbac.create",
                        "router.add.port",
                        "stack.event.show",
                        "volume.qos.delete",
                        "address.scope.list",
                        "neutron.flavor.create",
                        "neutron.bgp.speaker.show",
                        "network.trunk.delete",
                        "sfc.port.pair.group.show",
                        "network.rbac.list",
                        "module.list",
                        "neutron.vpn.service.create",
                        "ip.availability.show",
                        "limits.show",
                        "neutron.lb.vip.create",
                        "consistency.group.set",
                        "server.group.list",
                        "endpoint.list",
                        "network.show",
                        "router.create",
                        "neutron.qos.bandwidth.limit.rule.show",
                        "network.meter.delete",
                        "neutron.net.create",
                        "bgpvpn.unset",
                        "server.rescue",
                        "neutron.dhcp.agent.list.hosting.net",
                        "server.create",
                        "endpoint.delete",
                        "neutron.lbaas.member.list",
                        "object.unset",
                        "neutron.agent.update",
                        "neutron.router.interface.add",
                        "network.qos.policy.show",
                        "neutron.bgp.peer.create",
                        "volume.backup.create",
                        "server.image.create",
                        "neutron.router.gateway.clear",
                        "server.restore",
                        "role.assignment.list",
                        "neutron.dhcp.agent.network.remove",
                        "neutron.ext.show",
                        "network.auto.allocated.topology.delete",
                        "neutron.vpn.endpoint.group.delete",
                        "neutron.lbaas.l7policy.update",
                        "object.store.account.show",
                        "sfc.port.chain.show",
                        "neutron.lb.member.list",
                        "image.remove.project",
                        "object.list",
                        "firewall.group.rule.set",
                        "network.list",
                        "stack.list",
                        "server.reboot",
                        "console.url.show",
                        "orchestration.template.validate",
                        "server.backup.create",
                        "neutron.ipsec.site.connection.list",
                        "neutron.lbaas.member.create",
                        "neutron.bgp.dragent.speaker.add",
                        "neutron.firewall.rule.update",
                        "address.scope.show",
                        "backup.create",
                        "software.deployment.list",
                        "volume.type.delete",
                        "neutron.firewall.policy.remove.rule",
                        "volume.transfer.request.list",
                        "neutron.firewall.policy.show",
                        "neutron.bgp.speaker.create",
                        "neutron.floatingip.create",
                        "neutron.vpn.ipsecpolicy.list",
                        "neutron.address.scope.list",
                        "neutron.qos.minimum.bandwidth.rule.delete",
                        "neutron.flavor.associate",
                        "neutron.security.group.rule.show",
                        "bgpvpn.set",
                        "volume.type.show",
                        "neutron.meter.label.delete",
                        "neutron.router.gateway.set",
                        "sfc.port.pair.list",
                        "sfc.port.pair.delete",
                        "neutron.port.create",
                        "ip.floating.add",
                        "router.unset",
                        "backup.list",
                        "server.stop",
                        "neutron.bgp.speaker.network.add",
                        "server.group.show",
                        "server.add.port",
                        "neutron.firewall.rule.create",
                        "neutron.lb.member.delete",
                        "network.rbac.create",
                        "port.show",
                        "neutron.port.delete",
                        "network.agent.list",
                        "subnet.list",
                        "bgpvpn.show",
                        "neutron.ipsec.site.connection.update",
                        "backup.delete",
                        "stack.cancel",
                        "sfc.port.pair.set",
                        "neutron.bgp.speaker.advertiseroute.list",
                        "alarm.show",
                        "alarm.update",
                        "neutron.lb.member.update",
                        "server.pause",
                        "neutron.auto.allocated.topology.delete",
                        "image.set",
                        "neutron.qos.policy.update",
                        "neutron.lbaas.healthmonitor.delete",
                        "server.event.list",
                        "neutron.floatingip.disassociate",
                        "neutron.lbaas.loadbalancer.list.on.agent",
                        "neutron.vpn.ipsecpolicy.create",
                        "alarming.capabilities.list",
                        "neutron.bgp.speaker.update",
                        "network.meter.rule.show",
                        "server.remove.security.group",
                        "neutron.lbaas.healthmonitor.list",
                        "token.revoke",
                        "alarm.state.get",
                        "neutron.agent.show",
                        "bgpvpn.list",
                        "neutron.net.ip.availability.show",
                        "aggregate.add.host",
                        "network.flavor.delete",
                        "server.unlock",
                        "neutron.flavor.list",
                        "neutron.vpn.ipsecpolicy.delete",
                        "neutron.address.scope.create",
                        "server.suspend",
                        "neutron.tag.replace",
                        "neutron.lb.healthmonitor.list",
                        "server.add.volume",
                        "volume.type.create",
                        "volume.transfer.request.accept",
                        "security.group.create",
                        "sfc.port.chain.create",
                        "neutron.qos.bandwidth.limit.rule.update",
                        "stack.create",
                        "neutron.lb.healthmonitor.create",
                        "neutron.qos.policy.show",
                        "stack.resume",
                        "neutron.flavor.show",
                        "project.purge",
                        "neutron.lbaas.l7rule.list",
                        "server.unshelve",
                        "network.segment.show",
                        "neutron.bgp.speaker.peer.add",
                        "subnet.pool.create",
                        "neutron.firewall.update",
                        "neutron.bgp.speaker.delete",
                        "software.deployment.show",
                        "orchestration.template.function.list",
                        "stack.file.list",
                        "firewall.group.create",
                        "container.show",
                        "neutron.lb.healthmonitor.update",
                        "firewall.group.unset",
                        "user.list",
                        "network.meter.rule.create",
                        "network.qos.policy.set",
                        "compute.agent.create",
                        "hypervisor.show",
                        "stack.resource.signal",
                        "ip.fixed.remove",
                        "neutron.lbaas.l7policy.delete",
                        "volume.backup.show",
                        "neutron.subnet.show",
                        "alarm.history.show",
                        "neutron.lbaas.member.update",
                        "neutron.lbaas.pool.create",
                        "neutron.l3.agent.list.hosting.router",
                        "image.unset",
                        "object.create",
                        "volume.host.failover",
                        "container.delete",
                        "neutron.lbaas.pool.list",
                        "sfc.port.chain.set",
                        "object.store.account.set",
                        "neutron.auto.allocated.topology.show",
                        "neutron.qos.bandwidth.limit.rule.list",
                        "subnet.show",
                        "software.deployment.create",
                        "neutron.vpn.ikepolicy.show",
                        "server.rebuild",
                        "catalog.list",
                        "firewall.group.policy.show",
                        "user.role.list",
                        "keypair.list",
                        "neutron.lbaas.l7rule.show",
                        "network.flavor.remove.profile",
                        "consistency.group.snapshot.create",
                        "neutron.lbaas.pool.show",
                        "neutron.lb.healthmonitor.show",
                        "bgpvpn.router.association.list",
                        "neutron.bgp.peer.list",
                        "volume.snapshot.delete",
                        "subnet.pool.set",
                        "network.qos.policy.create",
                        "network.flavor.add.profile",
                        "neutron.router.create",
                        "project.usage.list",
                        "volume.backup.list",
                        "stack.show",
                        "volume.qos.associate",
                        "neutron.firewall.list",
                        "neutron.subnetpool.create",
                        "sfc.flow.classifier.set",
                        "compute.agent.list",
                        "consistency.group.show",
                        "firewall.group.rule.unset",
                        "network.flavor.profile.show",
                        "software.deployment.metadata.show",
                        "neutron.lbaas.member.delete",
                        "volume.transfer.request.delete",
                        "volume.snapshot.create",
                        "bgpvpn.delete",
                        "container.save",
                        "volume.service.set",
                        "neutron.meter.label.rule.list",
                        "stack.output.list",
                        "network.meter.rule.list",
                        "endpoint.show",
                        "neutron.vpn.service.update",
                        "neutron.lbaas.l7policy.list",
                        "address.scope.delete",
                        "neutron.subnet.update",
                        "firewall.group.rule.show",
                        "neutron.availability.zone.list",
                        "server.lock",
                        "ec2.credentials.list",
                        "neutron.agent.list",
                        "neutron.lb.pool.list.on.agent",
                        "neutron.port.show",
                        "neutron.lbaas.listener.create",
                        "network.service.provider.list",
                        "firewall.group.policy.remove.rule",
                        "neutron.lbaas.loadbalancer.update",
                        "security.group.list",
                        "neutron.firewall.policy.delete",
                        "command.list",
                        "firewall.group.rule.create",
                        "complete",
                        "network.trunk.set",
                        "neutron.vpn.endpoint.group.show",
                        "network.flavor.profile.create",
                        "neutron.meter.label.rule.create",
                        "software.config.delete",
                        "image.list",
                        "volume.create",
                        "stack.snapshot.restore",
                        "network.rbac.set",
                        "sfc.flow.classifier.show",
                        "stack.resource.list",
                        "neutron.lb.vip.list",
                        "neutron.lbaas.healthmonitor.show",
                        "server.remove.volume",
                        "router.add.subnet",
                        "neutron.bgp.speaker.list.on.dragent",
                        "stack.delete",
                        "network.meter.create",
                        "firewall.group.list",
                        "firewall.group.policy.unset",
                        "router.remove.port",
                        "neutron.lbaas.l7rule.delete",
                        "neutron.vpn.ipsecpolicy.show",
                        "network.flavor.show",
                        "neutron.router.interface.delete",
                        "service.create",
                        "volume.snapshot.unset",
                        "orchestration.template.version.list",
                        "neutron.l3.agent.router.add",
                        "neutron.dhcp.agent.network.add",
                        "consistency.group.snapshot.delete",
                        "neutron.qos.dscp.marking.rule.update",
                        "orchestration.resource.type.show",
                        "host.list",
                        "server.event.show",
                        "neutron.rbac.list",
                        "project.unset",
                        "neutron.lbaas.loadbalancer.create",
                        "ip.availability.list",
                        "snapshot.show",
                        "neutron.purge",
                        "volume.type.list",
                        "volume.list",
                        "snapshot.set",
                        "server.start",
                        "compute.service.set",
                        "bgpvpn.router.association.show",
                        "neutron.lbaas.listener.list",
                        "usage.show",
                        "neutron.router.port.list",
                        "firewall.group.show",
                        "address.scope.create",
                        "project.set",
                        "neutron.vpn.endpoint.group.list",
                        "stack.adopt",
                        "neutron.flavor.disassociate",
                        "neutron.bgp.speaker.peer.remove",
                        "aggregate.create",
                        "neutron.vpn.ipsecpolicy.update",
                        "bgpvpn.router.association.create",
                        "user.show",
                        "neutron.lb.pool.delete",
                        "network.rbac.show",
                        "ec2.credentials.delete",
                        "stack.failures.list",
                        "security.group.show",
                        "image.show",
                        "usage.list",
                        "volume.qos.disassociate",
                        "host.show",
                        "neutron.security.group.create",
                        "neutron.net.external.list",
                        "server.group.create",
                        "software.config.show",
                        "neutron.firewall.create",
                        "consistency.group.delete",
                        "stack.snapshot.list",
                        "stack.resource.mark.unhealthy",
                        "neutron.router.list.on.l3.agent",
                        "neutron.lb.vip.delete",
                        "neutron.flavor.profile.list",
                        "neutron.vpn.endpoint.group.update",
                        "server.resize",
                        "neutron.lbaas.loadbalancer.show",
                        "stack.environment.show",
                        "server.add.fixed.ip",
                        "neutron.firewall.policy.update",
                        "orchestration.resource.type.list",
                        "neutron.subnet.list",
                        "neutron.quota.show",
                        "network.trunk.create",
                        "neutron.quota.default.show",
                        "network.flavor.set",
                        "object.set",
                        "console.log.show",
                        "neutron.qos.bandwidth.limit.rule.create",
                        "consistency.group.snapshot.list",
                        "security.group.delete",
                        "neutron.lb.pool.list",
                        "port.delete",
                        "neutron.vpn.endpoint.group.create",
                        "neutron.qos.minimum.bandwidth.rule.create",
                        "neutron.net.delete",
                        "volume.host.set",
                        "service.delete",
                        "stack.abandon",
                        "neutron.net.list.on.dhcp.agent",
                        "project.list",
                        "quota.list",
                        "alarm.state.set",
                        "neutron.qos.dscp.marking.rule.show",
                        "service.show",
                        "sfc.port.pair.group.set",
                        "token.issue",
                        "neutron.bgp.speaker.list",
                        "neutron.meter.label.show",
                        "flavor.set",
                        "server.unrescue",
                        "neutron.vpn.service.delete",
                        "neutron.flavor.profile.show",
                        "network.segment.set",
                        "sfc.port.pair.create",
                        "network.unset",
                        "alarm.delete",
                        "neutron.lbaas.listener.delete",
                        "neutron.bgp.dragent.list.hosting.speaker",
                        "neutron.firewall.rule.delete",
                        "extension.show",
                        "neutron.security.group.show",
                        "neutron.ipsec.site.connection.delete",
                        "network.agent.set",
                        "snapshot.unset",
                        "firewall.group.rule.delete",
                        "neutron.lbaas.l7policy.create",
                        "neutron.qos.dscp.marking.rule.delete",
                        "neutron.qos.dscp.marking.rule.create",
                        "neutron.lb.pool.update",
                        "container.unset",
                        "neutron.router.delete",
                        "flavor.list",
                        "neutron.net.show",
                        "neutron.port.list",
                        "neutron.vpn.ikepolicy.create",
                        "volume.snapshot.set",
                        "neutron.bgp.dragent.speaker.remove",
                        "subnet.unset",
                        "subnet.pool.unset",
                        "ip.fixed.add",
                        "firewall.group.set",
                        "volume.qos.unset",
                        "object.store.account.unset",
                        "network.agent.delete",
                        "network.qos.rule.list",
                        "aggregate.set",
                        "extension.list",
                        "stack.resource.show",
                        "sfc.port.pair.group.create",
                        "user.set",
                        "sfc.port.pair.group.list",
                        "neutron.ipsec.site.connection.create",
                        "project.show",
                        "volume.backup.set",
                        "router.delete",
                        "aggregate.remove.host",
                        "server.show",
                        "role.list",
                        "backup.restore",
                        "volume.transfer.request.create",
                        "router.show"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "MessageQueueSensor"
                    ]
                }
            },
            "contributors": [
                "Joe Topjian <joe@topjian.net>"
            ],
            "description": "OpenStack integration pack",
            "email": "support@stackstorm.com",
            "keywords": [
                "openstack",
                "private cloud"
            ],
            "name": "openstack",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-openstack",
            "version": "0.7.0"
        },
        "opscenter": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 20,
                    "resources": [
                        "restart_node",
                        "get_nodes_info",
                        "cancel_request",
                        "stop_cluster_repair",
                        "decommission_node",
                        "get_cluster_repair_progress",
                        "start_node",
                        "restart_cluster",
                        "get_node_info",
                        "get_request_status",
                        "get_repair_status",
                        "stop_node",
                        "drain_node",
                        "get_node_conf",
                        "get_cluster_info",
                        "get_cluster_configs",
                        "list_requests",
                        "set_node_conf",
                        "start_cluster_repair",
                        "get_storage_capacity"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "EventsConsumer"
                    ]
                }
            },
            "description": "datastax opscenter",
            "email": "info@stackstorm.com",
            "keywords": [
                "datastax",
                "cassandra",
                "opscenter"
            ],
            "name": "opscenter",
            "ref": "opscenter",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-opscenter",
            "version": "0.2.2"
        },
        "opsgenie": {
            "author": "Jon Middleton",
            "content": {
                "actions": {
                    "count": 22,
                    "resources": [
                        "get_heartbeat",
                        "disable_policy.yaml",
                        "delete_alert",
                        "enable_policy.yaml",
                        "disable_integration.yaml",
                        "list_alerts",
                        "enable_heartbeat",
                        "get_alert_count",
                        "send_heartbeat",
                        "get_account_info",
                        "list_heartbeats",
                        "update_heartbeat",
                        "list_users",
                        "list_groups",
                        "list_teams",
                        "disable_heartbeat",
                        "close_alert",
                        "enable_integration.yaml",
                        "get_schedule_who_is_on_call",
                        "delete_heartbeat",
                        "create_alert",
                        "add_heartbeat"
                    ]
                },
                "aliases": {
                    "count": 2,
                    "resources": [
                        "send_heartbeat",
                        "get_schedule_who_is_on_call"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "send_heartbeat_timer"
                    ]
                },
                "tests": {
                    "count": 22,
                    "resources": [
                        "test_action_enable_heartbeat.py",
                        "test_action_get_account_info.py",
                        "test_action_list_alerts.py",
                        "test_action_list_users.py",
                        "test_action_disable_integration.py",
                        "test_action_list_heartbeats.py",
                        "test_action_create_alert.py",
                        "test_action_add_heartbeat.py",
                        "test_action_enable_policy.py",
                        "test_action_delete_heartbeat.py",
                        "test_action_enable_integration.py",
                        "test_action_close_alert.py",
                        "test_action_list_teams.py",
                        "test_action_send_heartbeat.py",
                        "test_action_disable_heartbeat.py",
                        "test_action_get_heartbeat.py",
                        "test_action_get_alert_count.py",
                        "test_action_disable_policy.py",
                        "test_action_get_schedule_who_is_on_call.py",
                        "opsgenie_base_test_case.py",
                        "test_action_delete_alert.py",
                        "test_action_list_groups.py"
                    ]
                }
            },
            "description": "OpsGenie Alerting and Incident Management Service",
            "email": "jon.middleton@pulsant.com",
            "keywords": [
                "OpsGenie",
                "alerting",
                "monitoring"
            ],
            "name": "opsgenie",
            "ref": "opsgenie",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-opsgenie",
            "version": "0.2.2"
        },
        "orion": {
            "author": "Encore Technologies",
            "content": {
                "actions": {
                    "count": 24,
                    "resources": [
                        "list_sdk_verbs",
                        "ncm_execute_script",
                        "ncm_config_download",
                        "node_remanage",
                        "update_node_custom_properties",
                        "node_create",
                        "nodes_pollnow",
                        "start_discovery",
                        "update_node_poller",
                        "get_agent_id",
                        "get_discovery_progress",
                        "node_discover_and_add_interfaces",
                        "list_node_custom_properties",
                        "drain_poller",
                        "node_status",
                        "get_node_software_inventory",
                        "node_delete",
                        "node_unmanage",
                        "agent_delete",
                        "add_node_to_ncm",
                        "list_nodes_by_status",
                        "list_nodes_by_poller",
                        "get_node_id",
                        "list_sdk_verb_args"
                    ]
                },
                "aliases": {
                    "count": 7,
                    "resources": [
                        "list_sdk_verbs",
                        "ncm_config_download",
                        "node_create",
                        "start_discovery",
                        "list_node_custom_properties",
                        "node_status",
                        "list_sdk_verb_args"
                    ]
                },
                "rules": {
                    "count": 2,
                    "resources": [
                        "node_create_webhook",
                        "start_discovery_webhook"
                    ]
                },
                "tests": {
                    "count": 24,
                    "resources": [
                        "test_action_start_discovery.py",
                        "test_action_list_sdk_verb_args.py",
                        "test_action_get_node_id.py",
                        "test_action_ncm_config_download.py",
                        "test_action_get_discovery_progress.py",
                        "test_action_get_node_software_inventory.py",
                        "test_action_node_unmanage.py",
                        "test_action_ncm_execute_script.py",
                        "test_action_agent_delete.py",
                        "test_action_add_node_to_ncm.py",
                        "test_action_orion_health.py",
                        "test_action_node_delete.py",
                        "test_action_node_remanage.py",
                        "test_action_list_sdk_verbs.py",
                        "orion_base_action_test_case.py",
                        "test_action_aliases.py",
                        "test_action_list_node_custom_properties.py",
                        "test_action_update_node_poller.py",
                        "test_action_node_status.py",
                        "test_action_node_create.py",
                        "test_action_get_agent_id.py",
                        "test_action_update_node_custom_properties.py",
                        "test_action_node_discover_and_add_interfaces.py",
                        "test_action_nodes_pollnow.py"
                    ]
                }
            },
            "description": "SolarWinds Orion Monitoring Applications",
            "email": "code@encore.tech",
            "keywords": [
                "solarwinds",
                "orion",
                "ncm",
                "npm",
                "monitoring"
            ],
            "name": "orion",
            "ref": "orion",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-orion",
            "version": "0.7.3"
        },
        "packagecloud": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 7,
                    "resources": [
                        "list_master_token",
                        "list_packages",
                        "destroy_master_token",
                        "get_master_token",
                        "create_master_token",
                        "show_package",
                        "destroy_read_token"
                    ]
                }
            },
            "description": "packagecloud integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "packagecloud"
            ],
            "name": "packagecloud",
            "ref": "packagecloud",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-packagecloud",
            "version": "0.4.1"
        },
        "packer": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "inspect",
                        "push",
                        "fix",
                        "build",
                        "validate"
                    ]
                }
            },
            "description": "Hashicorp Packer builder integration",
            "email": "james@stackstorm.com",
            "keywords": [
                "packer",
                "provisioning",
                "pipeline",
                "hashicorp"
            ],
            "name": "packer",
            "ref": "packer",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-packer",
            "version": "0.3.1"
        },
        "pagerduty": {
            "author": "Aamir",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "get_open_incidents",
                        "launch_incident",
                        "resolve_incident",
                        "ack_incident"
                    ]
                },
                "aliases": {
                    "count": 4,
                    "resources": [
                        "get_open_incidents",
                        "launch_incident",
                        "resolve_incident",
                        "ack_incident"
                    ]
                }
            },
            "description": "Packs which allows integration with PagerDuty services.",
            "email": "raza.aamir01@gmail.com",
            "name": "pagerduty",
            "ref": "pagerduty",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-pagerduty",
            "version": "0.4.2"
        },
        "paloalto": {
            "author": "Irek Romaniuk, John Anderson",
            "content": {
                "actions": {
                    "count": 31,
                    "resources": [
                        "bulk_apply_service_groups",
                        "commit",
                        "delete_address_group",
                        "delete_address_object",
                        "unregister_ip",
                        "delete_service_object",
                        "apply_service_object",
                        "bulk_apply_service_objects",
                        "get_address_groups",
                        "apply_address_object",
                        "bulk_delete_address_objects",
                        "commit_all",
                        "apply_address_group",
                        "bulk_register_ip",
                        "delete_service_group",
                        "bulk_apply_address_objects",
                        "get_security_rules",
                        "bulk_unregister_ip",
                        "apply_security_rule",
                        "bulk_apply_address_groups",
                        "bulk_delete_service_groups",
                        "bulk_delete_address_groups",
                        "get_address_objects",
                        "get_service_groups",
                        "bulk_apply_security_rules",
                        "bulk_delete_security_rules",
                        "delete_security_rule",
                        "apply_service_group",
                        "bulk_delete_service_objects",
                        "get_service_objects",
                        "register_ip"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "block_bad_actors"
                    ]
                }
            },
            "description": "Interact with Palo Alto firewalls",
            "email": "irek.romaniuk@gmail.com",
            "keywords": [
                "firewalls",
                "threats"
            ],
            "name": "paloalto",
            "ref": "paloalto",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-paloalto",
            "version": "0.3.1"
        },
        "phantomjs": {
            "author": "Tomaz Muraus",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "capture_screenshot"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_capture_screenshot.py"
                    ]
                }
            },
            "description": "st2 content pack containing PhantomJS integrations",
            "email": "tomaz@tomaz.me",
            "keywords": [
                "phantomjs",
                "browser",
                "headless browser"
            ],
            "name": "phantomjs",
            "ref": "phantomjs",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-phantomjs",
            "version": "0.1.1"
        },
        "powerpoint": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "build_presentation"
                    ]
                }
            },
            "description": "Microsoft Powerpoint integration",
            "email": "anthonyshaw@apache.org",
            "name": "powerpoint",
            "ref": "powerpoint",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-powerpoint",
            "version": "0.2.2"
        },
        "prometheus": {
            "author": "Daniel Chamot",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "query",
                        "alert.aggregation",
                        "series"
                    ]
                }
            },
            "description": "Interact with Prometheus HTTP API",
            "email": "daniel@nullkarma.com",
            "keywords": [
                "prometheus"
            ],
            "name": "prometheus",
            "ref": "prometheus",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-prometheus",
            "version": "0.1.2"
        },
        "puppet": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 5,
                    "resources": [
                        "cert_clean",
                        "cert_sign",
                        "apply",
                        "cert_revoke",
                        "run_agent"
                    ]
                }
            },
            "description": "st2 content pack containing puppet integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "puppet",
                "cfg management",
                "configuration management"
            ],
            "name": "puppet",
            "ref": "puppet",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-puppet",
            "version": "0.3.1"
        },
        "pushbullet": {
            "author": "Fabio Brito",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "post_to_channel"
                    ]
                }
            },
            "description": "Pushbullet integration pack for StackStorm",
            "email": "psychopenguin@gmail.com",
            "keywords": [
                "telegram",
                "messaging",
                "SMS"
            ],
            "name": "pushbullet",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-pushbullet",
            "version": "0.2.1"
        },
        "qualys": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 9,
                    "resources": [
                        "get_host",
                        "get_host_range",
                        "add_hosts",
                        "list_scans",
                        "launch_scan",
                        "add_host",
                        "get_report",
                        "list_reports",
                        "list_hosts_not_scanned_since"
                    ]
                }
            },
            "description": "Qualys Cloud Security Services integration pack",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "security",
                "qualys"
            ],
            "name": "qualys",
            "ref": "qualys",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-qualys",
            "version": "1.0.2"
        },
        "rabbitmq": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "publish_message",
                        "list_queues",
                        "list_exchanges"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "RabbitMQQueueSensor"
                    ]
                }
            },
            "description": "RabbitMQ integration",
            "email": "info@stackstorm.com",
            "keywords": [
                "rabbitmq",
                "queuing",
                "messaging",
                "aqmp",
                "stomp",
                "message broker"
            ],
            "name": "rabbitmq",
            "ref": "rabbitmq",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-rabbitmq",
            "version": "0.5.0"
        },
        "rackspace": {
            "author": "jfryman",
            "content": {
                "actions": {
                    "count": 26,
                    "resources": [
                        "set_vm_metadata_item",
                        "find_dns_record_id",
                        "delete_dns_zone",
                        "delete_vm",
                        "create_vm",
                        "find_vm_id",
                        "list_dns_zones",
                        "list_vm_sizes",
                        "get_vm_ids",
                        "delete_dns_record",
                        "find_loadbalancer_id",
                        "delete_node_from_loadbalancer",
                        "set_vm_metadata",
                        "create_dns_zone",
                        "get_vm_ips",
                        "list_vm_images",
                        "get_vm_names",
                        "find_dns_zone_id",
                        "add_node_to_loadbalancer",
                        "list_vms",
                        "get_vm_info",
                        "delete_loadbalancer",
                        "create_loadbalancer",
                        "get_vm_by_ip",
                        "create_dns_record",
                        "list_dns_records"
                    ]
                }
            },
            "description": "Packs which allows integration with Rackspace services such as servers, load balancers and DNS.",
            "email": "james@stackstorm.com",
            "name": "rackspace",
            "ref": "rackspace",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-rackspace",
            "version": "0.3.1"
        },
        "reamaze": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "article_update",
                        "article_create",
                        "article_search",
                        "article_get",
                        "create_message",
                        "get_conversations"
                    ]
                }
            },
            "description": "reamaze Integration Pack",
            "email": "james@stackstorm.com",
            "name": "reamaze",
            "ref": "reamaze",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-reamaze",
            "version": "0.2.1"
        },
        "redis": {
            "author": "Antagonist B.V.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "del",
                        "set"
                    ]
                }
            },
            "description": "Redis key-value actions",
            "email": "systeembeheer@antagonist.nl",
            "keywords": [
                "database",
                "redis"
            ],
            "name": "redis",
            "ref": "redis",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-redis",
            "version": "0.0.1"
        },
        "salt": {
            "author": "jcockhren",
            "content": {
                "actions": {
                    "count": 162,
                    "resources": [
                        "local_ret.get_fun",
                        "local_htpasswd.userdel",
                        "local_event.fire",
                        "runner_cloud.list_locations",
                        "local_file.chgrp",
                        "local_file.access",
                        "local_htpasswd.useradd",
                        "local_grains.delval",
                        "local_archive.tar",
                        "local_file.search",
                        "local_cloud.volume_delete",
                        "local_supervisord.remove",
                        "runner_pillar.show_pillar",
                        "runner_cloud.list_sizes",
                        "local_shadow.del_password",
                        "local_archive.unzip",
                        "local_hosts.set_host",
                        "local_cron.set_env",
                        "local_state.single",
                        "local_cloud.virtual_interface_create",
                        "local_cloud.destroy",
                        "local",
                        "local_systemd.disable",
                        "local_file.remove",
                        "local_puppet.status",
                        "local_cloud.volume_attach",
                        "local_pillar.get",
                        "runner_jobs.list_jobs",
                        "local_pkg.remove",
                        "local_shadow.set_expire",
                        "local_cron.set_job",
                        "local_hosts.get_ip",
                        "local_file.truncate",
                        "runner_cache.pillar",
                        "local_supervisord.custom",
                        "local_mine.send",
                        "local_file.replace",
                        "client",
                        "local_pkg.refresh_db",
                        "runner_cloud.select_query",
                        "runner_thin.generate",
                        "local_network.connect",
                        "local_event.send",
                        "local_puppet.run",
                        "local_saltutil.sync_renderers",
                        "local_cp.get_url",
                        "local_saltutil.sync_returners",
                        "local_file.directory_exists",
                        "local_file.find",
                        "local_cp.push",
                        "runner_cloud.action",
                        "local_supervisord.stop",
                        "local_data.getval",
                        "runner_cache.clear_mine_func",
                        "local_puppet.fact",
                        "local_cron.ls",
                        "local_archive.rar",
                        "local_mine.delete",
                        "runner_cache.clear_all",
                        "local_grains.setval",
                        "local_network.interface_ip",
                        "local_supervisord.reread",
                        "local_schedule.disable_job",
                        "local_schedule.run_job",
                        "local_systemd.enable",
                        "local_mine.get",
                        "local_cp.push_dir",
                        "local_service.status",
                        "local_grains.append",
                        "local_useradd.delete",
                        "local_shadow.gen_password",
                        "runner_cache.clear_grains",
                        "local_systemd.systemctl_reload",
                        "local_supervisord.restart",
                        "runner_cache.clear_pillar",
                        "local_puppet.disable",
                        "runner_cache.mine",
                        "local_pkg.install",
                        "local_event.fire_master",
                        "local_cron.rm_job",
                        "local_schedule.add",
                        "local_cloud.volume_create",
                        "local_file.touch",
                        "local_saltutil.sync_utils",
                        "local_ret.get_minions",
                        "runner_manage.down",
                        "local_supervisord.start",
                        "local_saltutil.sync_outputters",
                        "runner_cache.grains",
                        "local_ret.get_jids",
                        "local_data.update",
                        "runner_manage.versions",
                        "runner_pillar.show_top",
                        "local_systemd.start",
                        "local_cron.rm_env",
                        "local_useradd.add",
                        "local_service.restart",
                        "runner_manage.status",
                        "local_saltutil.sync_grains",
                        "local_test.cross_test",
                        "local_supervisord.add",
                        "local_pip.install",
                        "local_saltutil.sync_states",
                        "local_cp.get_file",
                        "local_ret.get_jid",
                        "local_file.mkdir",
                        "local_archive.gzip",
                        "local_network.ipaddrs",
                        "local_cmdmod.run",
                        "runner_manage.up",
                        "runner_cloud.profile",
                        "local_service.available",
                        "local_archive.zip_",
                        "local_cloud.profile_",
                        "local_data.cas",
                        "local_pip.freeze",
                        "local_cmdmod.run_chroot",
                        "local_network.ping",
                        "local_archive.gunzip",
                        "local_state.sls",
                        "local_cloud.network_create",
                        "local_puppet.noop",
                        "local_hosts.add_hosts",
                        "runner_cloud.query",
                        "local_pip.uninstall",
                        "local_puppet.summary",
                        "runner",
                        "local_grains.get",
                        "local_archive.unrar",
                        "local_cloud.action",
                        "local_test.echo",
                        "local_service.start",
                        "local_file.manage_file",
                        "runner_jobs.active",
                        "bootstrap",
                        "runner_cloud.list_images",
                        "local_hosts.rm_host",
                        "runner_cache.clear_mine",
                        "local_cmdmod.script",
                        "local_useradd.chshell",
                        "local_grains.remove",
                        "local_saltutil.sync_modules",
                        "local_file.file_exists",
                        "local_schedule.delete",
                        "local_cloud.volume_detach",
                        "local_saltutil.sync_all",
                        "local_mine.update",
                        "local_systemd.available",
                        "local_data.dump",
                        "local_cloud.create",
                        "local_systemd.restart",
                        "local_file.chown",
                        "local_systemd.stop",
                        "local_hosts.get_alias",
                        "local_service.stop",
                        "runner_cloud.full_query",
                        "local_file.symlink",
                        "local_test.ping",
                        "local_schedule.enable_job",
                        "local_puppet.enable",
                        "local_state.highstate",
                        "local_network.subnets"
                    ]
                },
                "aliases": {
                    "count": 2,
                    "resources": [
                        "salt.local",
                        "salt.runner"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_local.py"
                    ]
                }
            },
            "description": "salt integration pack",
            "email": "jurnell@sophicware.com",
            "keywords": [
                "salt",
                "cfg management",
                "configuration management"
            ],
            "name": "salt",
            "ref": "salt",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-salt",
            "version": "0.7.2"
        },
        "save_kittens": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "shait",
                        "image_solver",
                        "substitution_solver",
                        "aes_solver"
                    ]
                }
            },
            "description": "Save the world. One puzzle at a time.",
            "email": "info@stackstorm.com",
            "name": "save_kittens",
            "ref": "save_kittens",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-save_kittens",
            "version": "0.2.1"
        },
        "sensu": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 19,
                    "resources": [
                        "event_info",
                        "info",
                        "silence",
                        "event_client_list",
                        "check_aggregates",
                        "check_info",
                        "event_list",
                        "check_request",
                        "check_aggregates_delete",
                        "client_list",
                        "check_list",
                        "unsilence",
                        "health",
                        "event_resolve",
                        "event_delete",
                        "client_delete",
                        "client_history",
                        "aggregate_list",
                        "client_info"
                    ]
                },
                "rules": {
                    "count": 2,
                    "resources": [
                        "loadavg_check",
                        "on_action_runner_check"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_sensu_handler.py"
                    ]
                },
                "triggers": {
                    "count": 1,
                    "resources": [
                        "event_handler"
                    ]
                }
            },
            "description": "Sensu Monitoring",
            "email": "info@stackstorm.com",
            "keywords": [
                "sensu",
                "monitoring",
                "alerting"
            ],
            "name": "sensu",
            "ref": "sensu",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-sensu",
            "version": "0.5.2"
        },
        "servicenow": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 10,
                    "resources": [
                        "get",
                        "set_incident_owner",
                        "insert",
                        "delete",
                        "get_incidents_assigned_to",
                        "update",
                        "approve_change",
                        "get_user",
                        "get_non_structured",
                        "assign_incident_to"
                    ]
                },
                "aliases": {
                    "count": 3,
                    "resources": [
                        "servicenow.get_incidents_assigned_to",
                        "servicenow.approve_change",
                        "servicenow.assign_incident_to"
                    ]
                }
            },
            "description": "ServiceNow Integration Pack",
            "email": "james@stackstorm.com",
            "keywords": [
                "servicenow",
                "incident management"
            ],
            "name": "servicenow",
            "ref": "servicenow",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-servicenow",
            "version": "0.3.5"
        },
        "signalr": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "send_message"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "SignalRHubSensor"
                    ]
                }
            },
            "description": "Signalr messaging integration",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "signalr",
                "messaging"
            ],
            "name": "signalr",
            "ref": "signalr",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-signalr",
            "version": "0.1.2"
        },
        "slack": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 113,
                    "resources": [
                        "dnd.endSnooze",
                        "reactions.remove",
                        "chat.delete",
                        "users.profile.get",
                        "reactions.add",
                        "im.mark",
                        "channels.info",
                        "groups.kick",
                        "users_filter_by",
                        "chat.unfurl",
                        "users.profile.set",
                        "channels.mark",
                        "stars.list",
                        "search.messages",
                        "groups.replies",
                        "channels.unarchive",
                        "dnd.teamInfo",
                        "groups.unarchive",
                        "groups.createChild",
                        "users.setPresence",
                        "files.comments.edit",
                        "mpim.replies",
                        "files.comments.delete",
                        "files.sharedPublicURL",
                        "channels.join",
                        "users.setActive",
                        "mpim.list",
                        "bots.info",
                        "im.history",
                        "search.all",
                        "mpim.history",
                        "team.accessLogs",
                        "team.integrationLogs",
                        "usergroups.disable",
                        "im.open",
                        "auth.test",
                        "chat.postMessage",
                        "files.upload",
                        "users.setPhoto",
                        "auth.revoke",
                        "channels.archive",
                        "team.profile.get",
                        "users.admin.invite",
                        "files.comments.add",
                        "chat.update",
                        "emoji.list",
                        "pins.add",
                        "mpim.mark",
                        "channels.create",
                        "search.files",
                        "mpim.open",
                        "channels.kick",
                        "files.list",
                        "groups.create",
                        "dnd.setSnooze",
                        "reminders.info",
                        "groups.setTopic",
                        "post_message",
                        "dnd.info",
                        "team.billableInfo",
                        "channels.replies",
                        "groups.setPurpose",
                        "channels.list",
                        "groups.rename",
                        "im.replies",
                        "im.list",
                        "groups.open",
                        "users.getPresence",
                        "usergroups.list",
                        "groups.invite",
                        "rtm.start",
                        "users.deletePhoto",
                        "usergroups.users.update",
                        "chat.meMessage",
                        "channels.history",
                        "im.close",
                        "files.delete",
                        "channels.leave",
                        "mpim.close",
                        "groups.archive",
                        "groups.info",
                        "dnd.endDnd",
                        "team.info",
                        "channels.invite",
                        "channels.rename",
                        "usergroups.enable",
                        "usergroups.users.list",
                        "reminders.list",
                        "stars.remove",
                        "groups.mark",
                        "pins.remove",
                        "usergroups.create",
                        "reminders.complete",
                        "reminders.add",
                        "api.test",
                        "pins.list",
                        "users.identity",
                        "reminders.delete",
                        "rtm.connect",
                        "users.info",
                        "groups.leave",
                        "files.info",
                        "groups.history",
                        "reactions.list",
                        "users.list",
                        "channels.setTopic",
                        "oauth.access",
                        "reactions.get",
                        "groups.list",
                        "channels.setPurpose",
                        "usergroups.update",
                        "files.revokePublicURL",
                        "stars.add"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "SlackSensor"
                    ]
                }
            },
            "description": "st2 content pack containing slack integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "slack",
                "chat",
                "messaging",
                "instant messaging"
            ],
            "name": "slack",
            "ref": "slack",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-slack",
            "version": "0.10.0"
        },
        "smartthings": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 12,
                    "resources": [
                        "command",
                        "disengage_lock",
                        "engage_lock",
                        "find_id_by_name",
                        "get_device_info",
                        "list_devices",
                        "set_mode",
                        "set_temperature",
                        "toggle_lock",
                        "toggle_switch",
                        "turn_off_switch",
                        "turn_on_switch"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "SmartThingsSensor"
                    ]
                }
            },
            "description": "Integration with SmartThings",
            "email": "james@stackstorm.com",
            "keywords": [
                "smartthings",
                "iot",
                "smart home",
                "home automation"
            ],
            "name": "SmartThings",
            "ref": "smartthings",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-smartthings",
            "version": "0.3.1"
        },
        "softlayer": {
            "author": "Itxaka Serrano Garcia",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "create_instance",
                        "destroy_instance",
                        "delete_keypair",
                        "create_keypair"
                    ]
                }
            },
            "description": "st2 content pack containing Softlayer integrations.",
            "email": "itxakaserrano@gmail.com",
            "keywords": [
                "softlayer",
                "cloud"
            ],
            "name": "softlayer",
            "ref": "softlayer",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-softlayer",
            "version": "0.3.1"
        },
        "splunk": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "search"
                    ]
                },
                "aliases": {
                    "count": 1,
                    "resources": [
                        "search"
                    ]
                }
            },
            "description": "Splunk integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "splunk",
                "monitoring",
                "alerting"
            ],
            "name": "splunk",
            "ref": "splunk",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-splunk",
            "version": "0.5.2"
        },
        "st2": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 16,
                    "resources": [
                        "kv.grep",
                        "executions.get",
                        "call_home",
                        "upload_to_s3",
                        "inquiry.respond",
                        "sensors.list",
                        "check_permissions_anon_data",
                        "kv.set",
                        "rules.list",
                        "actions.list",
                        "kv.set_object",
                        "executions.list",
                        "kv.get",
                        "kv.get_object",
                        "executions.re_run",
                        "kv.delete"
                    ]
                },
                "aliases": {
                    "count": 7,
                    "resources": [
                        "st2_executions_get",
                        "st2_inquiry_respond",
                        "st2_sensors_list",
                        "st2_rules_list",
                        "st2_actions_list",
                        "st2_executions_list",
                        "st2_executions_re_run"
                    ]
                }
            },
            "description": "StackStorm utility actions and aliases",
            "email": "info@stackstorm.com",
            "name": "st2",
            "ref": "st2",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-st2",
            "version": "1.0.2"
        },
        "sumologic": {
            "author": "Igor Cherkaev",
            "content": {
                "actions": {
                    "count": 7,
                    "resources": [
                        "update.source",
                        "get.sources",
                        "delete.source",
                        "get.collectors",
                        "create.source",
                        "get.collector",
                        "get.collectors.id"
                    ]
                }
            },
            "description": "SumoLogic Integration",
            "email": "igor.cherkaev@copart.com",
            "keywords": [
                "sumologic"
            ],
            "name": "sumologic",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-sumologic",
            "version": "0.9.7"
        },
        "syslog_client": {
            "author": "Carlos",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "log_via_syslog",
                        "format_execution_result",
                        "write_syslog"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "write_log"
                    ]
                },
                "tests": {
                    "count": 2,
                    "resources": [
                        "__init__.py",
                        "test_format_result.py"
                    ]
                }
            },
            "description": "Syslog Client actions",
            "email": "nzlosh@yahoo.com",
            "keywords": [
                "syslog",
                "monitoring"
            ],
            "name": "syslog_client",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-syslog_client",
            "version": "0.0.1"
        },
        "telegram": {
            "author": "Fabio Brito",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "send_message"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "TelegramSensor"
                    ]
                }
            },
            "description": "Telegram integration pack for Stack Storm",
            "email": "psychopenguin@gmail.com",
            "keywords": [
                "telegram",
                "messaging"
            ],
            "name": "telegram",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-telegram",
            "version": "0.2.1"
        },
        "terraform": {
            "author": "Martez Reed",
            "content": {
                "actions": {
                    "count": 12,
                    "resources": [
                        "delete_workspace",
                        "pipeline",
                        "init",
                        "select_workspace",
                        "plan",
                        "apply",
                        "output",
                        "create_workspace",
                        "list_workspaces",
                        "destroy",
                        "show",
                        "get_version"
                    ]
                }
            },
            "description": "st2 content pack containing Terraform integrations",
            "email": "martez.reed@greenreedtech.com",
            "keywords": [
                "terraform"
            ],
            "name": "terraform",
            "ref": "terraform",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-terraform",
            "runner_type": "python-script",
            "version": "0.1.0"
        },
        "tesla": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 16,
                    "resources": [
                        "open_charge_port_door",
                        "set_vehicle_temperature",
                        "start_vehicle_charge",
                        "unlock_vehicle",
                        "stop_vehicle_ac",
                        "charge_vehicle",
                        "start_vehicle_ac",
                        "set_vehicle_sun_roof",
                        "wake_vehicle",
                        "get_vehicle",
                        "lock_vehicle",
                        "charge_vehicle_max_range",
                        "list_vehicles",
                        "honk_horn",
                        "flash_lights",
                        "stop_vehicle_charge"
                    ]
                },
                "aliases": {
                    "count": 2,
                    "resources": [
                        "tesla.set_vehicle_sun_roof",
                        "tesla.honk_horn"
                    ]
                }
            },
            "description": "car horn automation",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "tesla"
            ],
            "name": "tesla",
            "ref": "tesla",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-tesla",
            "version": "0.2.2"
        },
        "time": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "parse_date_string",
                        "get_week_boundaries"
                    ]
                },
                "tests": {
                    "count": 2,
                    "resources": [
                        "test_action_parse_date_string.py",
                        "test_action_get_week_boundaries.py"
                    ]
                }
            },
            "description": "st2 content pack containing different date and time related functionality",
            "email": "info@stackstorm.com",
            "keywords": [
                "date",
                "time"
            ],
            "name": "time",
            "ref": "time",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-time",
            "version": "0.2.1"
        },
        "travis_ci": {
            "author": "Aamir",
            "content": {
                "actions": {
                    "count": 9,
                    "resources": [
                        "list_builds",
                        "enable_hook",
                        "disable_hook",
                        "get_repo",
                        "list_branches",
                        "cancel_build",
                        "list_repos",
                        "list_hooks",
                        "restart_build"
                    ]
                }
            },
            "description": "Pack which allows integration with Travis CI.",
            "email": "raza.aamir01@gmail.com",
            "keywords": [
                "travis",
                "travis ci",
                "continuous integration",
                "ci"
            ],
            "name": "Travis CI",
            "ref": "travis_ci",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-travis_ci",
            "version": "0.3.2"
        },
        "trello": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 14,
                    "resources": [
                        "close_board",
                        "view_lists",
                        "find_card_by_name",
                        "move_card",
                        "view_cards",
                        "add_list",
                        "add_card",
                        "close_card",
                        "add_board",
                        "find_board_by_name",
                        "close_list",
                        "view_organizations",
                        "find_list_by_name",
                        "view_boards"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "TrelloListSensor"
                    ]
                }
            },
            "description": "Trello Web-based Project Management",
            "email": "james@stackstorm.com",
            "keywords": [
                "trello",
                "kanban",
                "productivity",
                "collaboration"
            ],
            "name": "trello",
            "ref": "trello",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-trello",
            "version": "0.4.2"
        },
        "tuleap": {
            "author": "Enalean",
            "content": {
                "actions": {
                    "count": 8,
                    "resources": [
                        "create_artifact",
                        "get_git_repositories",
                        "get_milestones",
                        "create_project",
                        "get_artifacts",
                        "get_projects",
                        "get_plannings",
                        "create_artifacts"
                    ]
                }
            },
            "contributors": [
                "Humbert Moreaux <moreaux.humbert@gmail.com>",
                "Yannis Rossetto <yannis.rossetto@enalean.com>"
            ],
            "description": "A Tuleap StackStorm pack",
            "email": "stackstorm-pack@enalean.com",
            "keywords": [
                "Tuleap",
                "ALM",
                "Issue tracker",
                "Open source",
                "Agile tool"
            ],
            "name": "tuleap",
            "ref": "tuleap",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-tuleap",
            "version": "0.1.2"
        },
        "twilio": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "send_sms"
                    ]
                }
            },
            "description": "st2 content pack containing twilio integrations",
            "email": "info@stackstorm.com",
            "name": "twilio",
            "ref": "twilio",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-twilio",
            "version": "0.3.1"
        },
        "twitter": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "follow",
                        "direct_message",
                        "update_status"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "relay_tweet_to_slack"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "TwitterSearchSensor",
                        "TwitterStreamSensor"
                    ]
                }
            },
            "description": "st2 content pack containing twitter integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "twitter",
                "social media",
                "social networks"
            ],
            "name": "twitter",
            "ref": "twitter",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-twitter",
            "version": "0.3.1"
        },
        "typeform": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "get_results"
                    ]
                },
                "rules": {
                    "count": 1,
                    "resources": [
                        "form_submission"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "TypeformRegistrationSensor"
                    ]
                }
            },
            "description": "Typeform service integration pack",
            "email": "info@stackstorm.com",
            "keywords": [
                "typeform",
                "web forms"
            ],
            "name": "typeform",
            "ref": "typeform",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-typeform",
            "version": "0.4.1"
        },
        "ubersmith": {
            "author": "James Cornman",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "api_command"
                    ]
                }
            },
            "contributors": null,
            "description": "st2 content pack containing Ubersmith integrations.",
            "email": "jizaymes@gmail.com",
            "name": "ubersmith",
            "ref": "ubersmith",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-ubersmith",
            "version": "0.2.1"
        },
        "urbandict": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "get_definitions"
                    ]
                }
            },
            "description": "Query Urban Dictionary",
            "email": "info@stackstorm.com",
            "keywords": [
                "urban dict",
                "urban dictionary",
                "puns"
            ],
            "name": "urbandict",
            "ref": "urbandict",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-urbandict",
            "version": "0.2.2"
        },
        "vadc": {
            "author": "Mark Boddington",
            "content": {
                "actions": {
                    "count": 37,
                    "resources": [
                        "bsd_get_errors",
                        "undeploy_chain",
                        "vtm_create_backup",
                        "vtm_enable_ssl_offload",
                        "vtm_del_pool",
                        "bsd_license_vtm",
                        "bsd_set_vtm_bandwidth",
                        "vtm_del_vserver",
                        "vtm_enable_ssl_encryption",
                        "vtm_maintenance_mode",
                        "vtm_add_server_cert",
                        "vtm_disable_ssl_offload",
                        "vtm_get_pool_nodes",
                        "bsd_get_status",
                        "vtm_add_pool",
                        "vtm_list_backups",
                        "bsd_get_active_vtm",
                        "vtm_del_persistence",
                        "vtm_add_persistence",
                        "bsd_unlicense_vtm",
                        "vtm_del_tip",
                        "deploy_workflow",
                        "bsd_get_vtm_bandwidth",
                        "remediate_pool_failure",
                        "vtm_disable_ssl_encryption",
                        "vtm_delete_backup",
                        "vtm_add_tip",
                        "vtm_restore_backup",
                        "bsd_list_vtms",
                        "vtm_set_pool_nodes",
                        "vtm_get_backup",
                        "vtm_add_vserver",
                        "deploy_chain",
                        "vtm_add_backup",
                        "vtm_add_webhook_action",
                        "vtm_drain_nodes",
                        "vtm_del_server_cert"
                    ]
                },
                "aliases": {
                    "count": 13,
                    "resources": [
                        "bsd_get_errors",
                        "bsd_set_vtm_bandwidth",
                        "vtm_get_pool_nodes",
                        "bsd_unlicense",
                        "bsd_get_status",
                        "vtm_add_pool",
                        "vtm_maintenance_mode",
                        "vtm_deploy_service",
                        "bsd_get_vtm_bandwidth",
                        "bsd_list",
                        "bsd_license",
                        "vtm_drain_nodes",
                        "vtm_undeploy_service"
                    ]
                },
                "rules": {
                    "count": 6,
                    "resources": [
                        "vtm_fail_maintenance",
                        "bsd_bandwidth_modify",
                        "bsd_chatops",
                        "bsd_bandwidth_alert",
                        "webhook",
                        "bsd_bandwidth_notify"
                    ]
                },
                "sensors": {
                    "count": 2,
                    "resources": [
                        "brcdBwSensor",
                        "brcdSdSensor"
                    ]
                }
            },
            "description": "Pulse Secure vADC actions",
            "email": "mboddington@pulsesecure.net",
            "keywords": [
                "brocade",
                "vadc",
                "vtm",
                "bsd",
                "loadbalancer"
            ],
            "name": "vadc",
            "ref": "vadc",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vadc",
            "version": "0.3.1"
        },
        "vault": {
            "author": "steve.neuharth",
            "content": {
                "actions": {
                    "count": 9,
                    "resources": [
                        "delete_policy",
                        "create_token",
                        "delete",
                        "is_initialized",
                        "list_policies",
                        "get_policy",
                        "write",
                        "read",
                        "set_policy"
                    ]
                }
            },
            "contributors": [
                "Andy Moore <andrew.moore@pearson.com>"
            ],
            "description": "vault",
            "email": "steve.neuharth@target.com",
            "name": "vault",
            "ref": "vault",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vault",
            "version": "0.4.2"
        },
        "vcd": {
            "author": "Paul Mulvihill",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_org",
                        "get_pvdcs",
                        "get_orgs"
                    ]
                },
                "tests": {
                    "count": 4,
                    "resources": [
                        "test_action_get_pvdcs.py",
                        "test_action_get_orgs.py",
                        "vcd_base_action_test_case.py",
                        "test_action_get_org.py"
                    ]
                }
            },
            "description": "Vcloud Director integrations",
            "email": "paul.mulvihill@pulsant.com",
            "keywords": [
                "vmware",
                "vcloud"
            ],
            "name": "VCloud Director",
            "ref": "vcd",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vcd",
            "version": "0.1.0"
        },
        "vdx": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 55,
                    "resources": [
                        "bgp_get_bgp_neighbors",
                        "bgp_graceful_restart",
                        "bgp_local_asn",
                        "bgp_max_paths",
                        "bgp_multihop",
                        "bgp_neighbor",
                        "bgp_recursion",
                        "bgp_redistribute",
                        "bgp_remove_bgp",
                        "bgp_update_source",
                        "interface_acc_vlan",
                        "interface_access_vlan",
                        "interface_add_vlan_int",
                        "interface_admin_state",
                        "interface_channel_group",
                        "interface_del_access_vlan",
                        "interface_del_ip",
                        "interface_del_vlan_int",
                        "interface_description",
                        "interface_disable_switchport",
                        "interface_enable_switchport",
                        "interface_fabric_isl",
                        "interface_fabric_trunk",
                        "interface_get_ip_addresses",
                        "interface_ip_address",
                        "interface_ip_mtu",
                        "interface_lacp_timeout",
                        "interface_mtu",
                        "interface_port_channel_minimum_links",
                        "interface_port_channel_vlag_ignore_split",
                        "interface_private_vlan_mode",
                        "interface_private_vlan_type",
                        "interface_proxy_arp",
                        "interface_pvlan_host_association",
                        "interface_remove_port_channel",
                        "interface_set_ip",
                        "interface_spanning_tree_state",
                        "interface_switchport",
                        "interface_switchport_pvlan_mapping",
                        "interface_tag_native_vlan",
                        "interface_transport_service",
                        "interface_trunk_allowed_vlan",
                        "interface_trunk_mode",
                        "interface_v6_nd_suppress_ra",
                        "interface_vlan_pvlan_association_add",
                        "interface_vrrp_priority",
                        "interface_vrrp_vip",
                        "services_vrrp",
                        "snmp_add_snmp_community",
                        "snmp_add_snmp_host",
                        "snmp_del_snmp_community",
                        "snmp_del_snmp_host",
                        "system_chassis_name",
                        "system_host_name",
                        "system_router_id"
                    ]
                },
                "tests": {
                    "count": 52,
                    "resources": [
                        "test_action_bgp_graceful_restart.py",
                        "test_action_bgp_local_asn.py",
                        "test_action_bgp_max_paths.py",
                        "test_action_bgp_multihop.py",
                        "test_action_bgp_neighbor.py",
                        "test_action_bgp_recursion.py",
                        "test_action_bgp_redistribute.py",
                        "test_action_bgp_remove_bgp.py",
                        "test_action_bgp_update_source.py",
                        "test_action_interface_acc_vlan.py",
                        "test_action_interface_access_vlan.py",
                        "test_action_interface_add_vlan_int.py",
                        "test_action_interface_admin_state.py",
                        "test_action_interface_channel_group.py",
                        "test_action_interface_del_access_vlan.py",
                        "test_action_interface_del_ip.py",
                        "test_action_interface_del_vlan_int.py",
                        "test_action_interface_description.py",
                        "test_action_interface_disable_switchport.py",
                        "test_action_interface_enable_switchport.py",
                        "test_action_interface_fabric_isl.py",
                        "test_action_interface_fabric_trunk.py",
                        "test_action_interface_ip_address.py",
                        "test_action_interface_ip_mtu.py",
                        "test_action_interface_lacp_timeout.py",
                        "test_action_interface_mtu.py",
                        "test_action_interface_port_channel_minimum_links.py",
                        "test_action_interface_port_channel_vlag_ignore_split.py",
                        "test_action_interface_private_vlan_mode.py",
                        "test_action_interface_private_vlan_type.py",
                        "test_action_interface_proxy_arp.py",
                        "test_action_interface_pvlan_host_association.py",
                        "test_action_interface_remove_port_channel.py",
                        "test_action_interface_set_ip.py",
                        "test_action_interface_spanning_tree_state.py",
                        "test_action_interface_switchport.py",
                        "test_action_interface_switchport_pvlan_mapping.py",
                        "test_action_interface_tag_native_vlan.py",
                        "test_action_interface_transport_service.py",
                        "test_action_interface_trunk_allowed_vlan.py",
                        "test_action_interface_trunk_mode.py",
                        "test_action_interface_v6_nd_suppress_ra.py",
                        "test_action_interface_vlan_pvlan_association_add.py",
                        "test_action_interface_vrrp_priority.py",
                        "test_action_interface_vrrp_vip.py",
                        "test_action_services_vrrp.py",
                        "test_action_snmp_add_snmp_community.py",
                        "test_action_snmp_add_snmp_host.py",
                        "test_action_snmp_del_snmp_community.py",
                        "test_action_snmp_del_snmp_host.py",
                        "test_action_system_host_name.py",
                        "test_action_system_router_id.py"
                    ]
                }
            },
            "description": "Extreme VDX integration pack.",
            "email": "info@stackstorm.com",
            "name": "vdx",
            "ref": "vdx",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vdx",
            "version": "0.1.2"
        },
        "vdx_vtep": {
            "author": "GSLAB",
            "content": {
                "actions": {
                    "count": 19,
                    "resources": [
                        "configure_vcenter",
                        "configure_switchport_trunk",
                        "get_principal_node",
                        "publish_configs_day1",
                        "configure_vdx",
                        "verify_vcs_ready",
                        "attach_vlan_to_gw_workflow",
                        "configure_vlan",
                        "configure_vcs_vip",
                        "configure_VXLAN_gateway",
                        "create_vcs_fabric",
                        "attach_vlan_to_gw",
                        "get_nsxcntl_client_cert",
                        "publish_configs",
                        "verify_vcs_fabric",
                        "configure_interface",
                        "configure_nsx_controller",
                        "configure_ve_interface",
                        "create_nsxcntl_client_cert"
                    ]
                }
            },
            "description": "VDX automation pack.",
            "email": "yugendra.khonde@gslab.com",
            "name": "vdx_vtep",
            "ref": "vdx_vtep",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vdx_vtep",
            "version": "0.1.3"
        },
        "victorops": {
            "author": "Aamir",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "open_incident",
                        "recover_incident",
                        "ack_incident"
                    ]
                }
            },
            "description": "Packs which allows integration with Victorops events.",
            "email": "raza.aamir01@gmail.com",
            "keywords": [
                "victorops integration",
                "open, ack and resolve incidents"
            ],
            "name": "victorops",
            "ref": "victorops",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-victorops",
            "version": "0.3.1"
        },
        "vra7": {
            "author": "Martez Reed",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "get_all_requests",
                        "get_number_of_vms",
                        "get_resource_by_name"
                    ]
                },
                "aliases": {
                    "count": 3,
                    "resources": [
                        "get_all_requests",
                        "get_number_of_vms",
                        "get_resource_by_name"
                    ]
                }
            },
            "description": "VMware vRealize Automation 7 integration pack.",
            "email": "martez.reed@greenreedtech.com",
            "keywords": [
                "vra7",
                "vrealize automation",
                "vmware"
            ],
            "name": "vra7",
            "ref": "vra7",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vra7",
            "version": "0.1.1"
        },
        "vsphere": {
            "author": "Paul Mulvihill",
            "content": {
                "actions": {
                    "count": 22,
                    "resources": [
                        "vm_create_from_template",
                        "vm_hw_remove",
                        "vm_hw_power_off",
                        "vm_hw_scsi_controller_add",
                        "vm_hw_uuid_get",
                        "get_vmconsole_urls",
                        "vm_hw_power_on",
                        "vm_hw_nic_add",
                        "vm_hw_detail_get",
                        "vm_hw_basic_build",
                        "set_vm",
                        "vm_env_items_get",
                        "get_vms",
                        "vm_hw_cpu_mem_edit",
                        "vm_hw_barebones_create",
                        "hello_vsphere",
                        "get_moid",
                        "vm_hw_hdd_add",
                        "wait_task",
                        "vm_hw_nic_edit",
                        "vm_check_tools",
                        "vm_hw_moid_get"
                    ]
                },
                "sensors": {
                    "count": 1,
                    "resources": [
                        "TaskInfoSensor"
                    ]
                },
                "tests": {
                    "count": 16,
                    "resources": [
                        "test_action_hw_uuid_get.py",
                        "test_action_hw_hdd_add.py",
                        "test_config_schema.py",
                        "test_action_create_from_template.py",
                        "test_action_hw_remove.py",
                        "test_action_hw_barebones_create.py",
                        "test_sensor_taskinfo.py",
                        "test_action_hw_nic_add.py",
                        "test_action_hw_nic_edit.py",
                        "test_action_get_moid.py",
                        "test_action_hw_moid_get.py",
                        "test_action_hw_scsi_controller_add.py",
                        "test_action_hw_cpu_mem_edit.py",
                        "test_action_hw_power.py",
                        "test_action_hw_details_get.py",
                        "vsphere_base_action_test_case.py"
                    ]
                }
            },
            "contributors": [
                "Igor Cherkaev <emptywee@gmail.com>",
                "Hiroyasu OHYAMA <user.localhost2000@gmail.com>"
            ],
            "description": "VMware vSphere",
            "email": "paul.mulvihill@pulsant.com",
            "name": "vsphere",
            "ref": "vsphere",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vsphere",
            "version": "0.7.6"
        },
        "vyatta": {
            "author": "Mehdi Abdelouahab",
            "content": {
                "actions": {
                    "count": 47,
                    "resources": [
                        "0_del_bgp",
                        "ping",
                        "show_history",
                        "show_fw",
                        "0_cfg_fw_rule",
                        "cfg_ipsec",
                        "0_del_bgp_adv_prefix",
                        "show_version",
                        "0_del_ip_route",
                        "show_ip_route",
                        "0_cfg_esp",
                        "show_vpn_ipsec_status",
                        "show_ip_bgp_neighbors",
                        "0_cfg_conn",
                        "0_start_cfg",
                        "show_ip_bgp_sum",
                        "cfg_fw_instance",
                        "del_bgp",
                        "0_cfg_bgp_adv_prefix",
                        "0_del_vpn_ipsec",
                        "0_commit",
                        "del_vpn_ipsec",
                        "0_cfg_ike",
                        "0_cfg_ip_route",
                        "show_ip_route_sum",
                        "del_fw_instance",
                        "cfg_fw_rule",
                        "show_system_memory",
                        "0_del_fw_instance",
                        "del_interface",
                        "cfg_bgp_adv_prefix",
                        "del_ip_route",
                        "cfg_interface",
                        "0_cfg_ebgp",
                        "del_bgp_adv_prefix",
                        "show_system_commit",
                        "0_del_interface",
                        "del_fw_rule",
                        "0_cfg_fw_instance",
                        "show_interfaces",
                        "show_vpn_ipsec_sa",
                        "show_ip_route_subnet",
                        "0_cfg_interface",
                        "show_vpn_ike_sa",
                        "0_del_fw_rule",
                        "cfg_ebgp",
                        "cfg_ip_route"
                    ]
                },
                "aliases": {
                    "count": 20,
                    "resources": [
                        "del_bgp",
                        "ping",
                        "show_history",
                        "show_fw",
                        "cfg_ipsec",
                        "show_version",
                        "show_ip_route",
                        "show_vpn_ipsec_status",
                        "show_ip_bgp_sum",
                        "show_bgp_neighbors",
                        "show_system_memory",
                        "del_interface",
                        "del_ip_route",
                        "cfg_interface",
                        "show_system_commit",
                        "del_vpn_ipsec",
                        "show_interfaces",
                        "show_vpn_ipsec_sa",
                        "cfg_ebgp",
                        "cfg_ip_route"
                    ]
                },
                "rules": {
                    "count": 12,
                    "resources": [
                        "webhook_del_fw_rule",
                        "webhook_cfg_fw_rule",
                        "webhook_del_interface",
                        "webhook_cfg_ipsec",
                        "webhook_del_ip_route",
                        "webhook_cfg_fw_instance",
                        "webhook_del_bgp",
                        "webhook_cfg_ip_route",
                        "webhook_del_fw_instance",
                        "webhook_del_vpn_ipsec",
                        "webhook_cfg_ebgp",
                        "webhook_cfg_interface"
                    ]
                }
            },
            "description": "vyatta vRouter",
            "email": "mabdelou@brocade.com",
            "keywords": [
                "networking",
                "vyatta"
            ],
            "name": "vyatta",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-vyatta",
            "version": "0.1.3"
        },
        "webpagetest": {
            "author": "Linuturk",
            "content": {
                "actions": {
                    "count": 3,
                    "resources": [
                        "request_test",
                        "random_test",
                        "list_locations"
                    ]
                }
            },
            "description": "st2 content pack containing webpagetest integrations",
            "email": "linuturk@onitato.com",
            "keywords": [
                "webpagetest",
                "benchmarking"
            ],
            "name": "webpagetest",
            "ref": "webpagetest",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-webpagetest",
            "version": "0.3.1"
        },
        "windows": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 6,
                    "resources": [
                        "winrm_cmd",
                        "setup_winrm",
                        "try_winrm",
                        "wmi_query",
                        "winexe_cmd",
                        "lockdown_winrm"
                    ]
                }
            },
            "description": "st2 content pack containing windows integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "windows",
                "wmi",
                "windows management interface",
                "wql"
            ],
            "name": "windows",
            "ref": "windows",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-windows",
            "version": "0.4.1"
        },
        "witai": {
            "author": "James Fryman",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "text_query"
                    ]
                }
            },
            "description": "Wit AI Integration with StackStorm",
            "email": "james@stackstorm.com",
            "keywords": [
                "messaging",
                "bots",
                "voice"
            ],
            "name": "witai",
            "ref": "witai",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-witai",
            "version": "0.2.1"
        },
        "xml": {
            "author": "StackStorm, Inc.",
            "content": {
                "actions": {
                    "count": 2,
                    "resources": [
                        "parse",
                        "parse_file"
                    ]
                },
                "tests": {
                    "count": 1,
                    "resources": [
                        "test_action_parse_xml.py"
                    ]
                }
            },
            "description": "st2 content pack containing XML integrations",
            "email": "info@stackstorm.com",
            "keywords": [
                "xml",
                "serialization",
                "deserialization",
                "text processing"
            ],
            "name": "xml",
            "ref": "xml",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-xml",
            "version": "0.3.1"
        },
        "yammer": {
            "author": "Anthony Shaw",
            "content": {
                "actions": {
                    "count": 19,
                    "resources": [
                        "get_user_by_email",
                        "delete_group",
                        "list_messages",
                        "suspend_user",
                        "list_messages_about_topic",
                        "list_users",
                        "list_messages_my_feed",
                        "email_message",
                        "post_message",
                        "authenticate",
                        "like_message",
                        "list_users_in_group",
                        "list_messages_in_group",
                        "list_private_messages",
                        "get_group_by_id",
                        "get_user_by_id",
                        "list_messages_from_user",
                        "list_groups",
                        "delete_message"
                    ]
                }
            },
            "description": "st2 content pack containing yammer integrations",
            "email": "anthony.shaw@dimensiondata.com",
            "keywords": [
                "yammer",
                "chatops",
                "social"
            ],
            "name": "yammer",
            "ref": "yammer",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-yammer",
            "version": "0.3.1"
        },
        "zabbix": {
            "author": "Hiroyasu OHYAMA",
            "content": {
                "actions": {
                    "count": 8,
                    "resources": [
                        "host_update_status",
                        "host_get_status",
                        "maintenance_delete",
                        "test_credentials",
                        "host_delete",
                        "maintenance_create_or_update",
                        "ack_event",
                        "host_get_id"
                    ]
                },
                "tests": {
                    "count": 10,
                    "resources": [
                        "test_tool_register_st2_config_to_zabbix.py",
                        "test_test_credentials.py",
                        "test_host_get_status.py",
                        "test_host_delete.py",
                        "test_maintenance_create_or_update.py",
                        "test_maintenance_delete.py",
                        "test_action_base.py",
                        "test_host_update_status.py",
                        "test_host_get_id.py",
                        "zabbix_base_action_test_case.py"
                    ]
                },
                "triggers": {
                    "count": 1,
                    "resources": [
                        "event_handler"
                    ]
                }
            },
            "description": "StackStorm pack that contains Zabbix integrations",
            "email": "user.localhost2000@gmail.com",
            "keywords": [
                "zabbix",
                "monitoring"
            ],
            "name": "zabbix",
            "ref": "zabbix",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-zabbix",
            "version": "0.1.4"
        },
        "zendesk": {
            "author": "Casey Richardson",
            "content": {
                "actions": {
                    "count": 4,
                    "resources": [
                        "search_tickets",
                        "update_ticket",
                        "create_ticket",
                        "update_ticket_status"
                    ]
                },
                "aliases": {
                    "count": 4,
                    "resources": [
                        "search_tickets",
                        "update_ticket",
                        "create_ticket",
                        "update_ticket_status"
                    ]
                }
            },
            "description": "st2 content pack containing zendesk integrations",
            "email": "casey@bluechasm.com",
            "keywords": [
                "zendesk",
                "support",
                "ticketing"
            ],
            "name": "zendesk",
            "ref": "zendesk",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-zendesk",
            "version": "0.3.1"
        },
        "zookeeper": {
            "author": "Cody A. Ray",
            "content": {
                "actions": {
                    "count": 1,
                    "resources": [
                        "non_blocking_lease"
                    ]
                }
            },
            "description": "st2 integration pack with zookeeper",
            "email": "talktome@codyaray.com",
            "name": "zookeeper",
            "ref": "zookeeper",
            "repo_url": "https://github.com/StackStorm-Exchange/stackstorm-zookeeper",
            "version": "0.2.1"
        }
    }
}